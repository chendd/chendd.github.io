<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Gallery | Chendd's Blog]]></title>
  <link href="http://chendd.github.io/tags/gallery/atom.xml" rel="self"/>
  <link href="http://chendd.github.io/"/>
  <updated>2017-10-09T17:31:45+08:00</updated>
  <id>http://chendd.github.io/</id>
  <author>
    <name><![CDATA[chendd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android学习日记17--Gallery(画廊视图)]]></title>
    <link href="http://chendd.github.io/blog/2013/03/18/android_study_17/"/>
    <updated>2013-03-18T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/18/android_study_17</id>
    <content type="html"><![CDATA[<h2>一、Gallery</h2>

<h4>1、简述</h4>

<p>&#160; &#160; &#160; &#160;Gallery有道翻译为画廊，就叫它画廊控件，主要用来可切换的图片展示，左右滑动可以选择上一张或下一张图片。个人感觉蛮实用的，不过google貌似不推荐使用啊！</p>

<!--more-->


<p><img src="http://images.cnitblog.com/i/602984/201403/172021185521942.png" alt="image" /></p>

<h4>2、常用属性和对应方法如下：</h4>

<p><img src="http://images.cnitblog.com/i/602984/201403/172003163182303.png" alt="image" /></p>

<h4>3、简单例子：</h4>

<p>实现如下例子，C.C女王图片坐镇</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/172004219121997.png" alt="image" /></p>

<p>Activity代码：</p>

<pre><code class="java">// 要展示图片的ID数组
    int[] imageIDs={
            R.drawable.item0,R.drawable.item1,R.drawable.item2, 
            R.drawable.item3,R.drawable.item4,R.drawable.item5
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Gallery gl=(Gallery)this.findViewById(R.id.Gallery01);
        // 适配器
        BaseAdapter ba=new BaseAdapter() {

            //主要是重写getView 方法
            @Override
            public View getView(int position, View arg1, ViewGroup arg2) {
                // TODO Auto-generated method stub
                ImageView iv = new ImageView(MainActivity.this);

                Log.v("gallery", position+"");

                iv.setImageResource(imageIDs[position]);

                iv.setScaleType(ImageView.ScaleType.FIT_XY);
                iv.setLayoutParams(new Gallery.LayoutParams(188,250));
                return iv;
            }

            @Override
            public long getItemId(int arg0) {
                // TODO Auto-generated method stub
                return 0;
            }

            @Override
            public Object getItem(int arg0) {
                // TODO Auto-generated method stub
                return null;
            }

            @Override
            public int getCount() {
                // TODO Auto-generated method stub

                //return imageIDs.length;
            }
        };

        gl.setAdapter(ba);

        // 设置监听
        gl.setOnItemClickListener(
                new OnItemClickListener(){
                    @Override
                    public void onItemClick(AdapterView&lt;?&gt; arg0, View arg1,
                            int arg2, long arg3) {
                        Gallery gl=(Gallery)findViewById(R.id.Gallery01);
                        gl.setSelection(arg2);
                    }                    
                }
        );

    }
</code></pre>

<p>布局文件较简单：</p>

<pre><code class="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:gravity="center_vertical"
    &gt;
   &lt;Gallery 
      android:id="@+id/Gallery01" 
      android:layout_width="fill_parent" 
      android:layout_height="wrap_content"
      android:spacing="10dip"
      android:unselectedAlpha="1" /&gt; 
&lt;/LinearLayout&gt;
</code></pre>

<h4>4、扩展例子：</h4>

<p>&#160; &#160; &#160; &#160;但是这样做有个弊端，就是图片滑动到最后一张就结束了，如果我想要查看第一张就得一张张的退回去
比较麻烦，不人性化。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/172007199747565.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;我们要实现循环切换图片，从最后一张可跳到第一张去。这时就要修改getCount和getView方法
getCount方法用于返回图像总数，这个总数不能大于图像的实际数（可以小于图像的实际数），否则会抛出越界异常。
当Gallery组件要显示某一个图像时，就会调用getView方法，并将当前的图像索引（position参数）传入该方法。
一般getView方法用于返回每一个显示图像的组件（ImageView对象）。从这一点可以看出，Gallery组件是即时显示图像的，
而不是一下将所有的图像都显示出来。在getView方法中除了创建了ImageView对象，还用从imageIDs数组中获得了相应的图像资源ID来设置在ImageView中显示的图像。</p>

<p>&#160; &#160; &#160; &#160;实现循环切换主要就是当position等于最后一张图片时，它的下一张又回到第一张position = 0，这时我们想到了取余可以实现，
即position%imageIDs.length，值就在0~imageIDs.length-1之间，此时还要设置getCount的值为无穷大，防止抛出越界异常，
设return Integer.MAX_VALUE。</p>

<p>具体修改代码如下：</p>

<pre><code class="java">public View getView(int position, View arg1, ViewGroup arg2) {
                // TODO Auto-generated method stub
                ImageView iv = new ImageView(MainActivity.this);

                Log.v("gallery", position+"");

                //iv.setImageResource(imageIDs[position]);
                //通过取余来循环取得imageIDs数组中的图像资源ID
                iv.setImageResource(imageIDs[position%imageIDs.length]);

                iv.setScaleType(ImageView.ScaleType.FIT_XY);
                iv.setLayoutParams(new Gallery.LayoutParams(188,250));
                return iv;
            }

            @Override
            public int getCount() {
                // TODO Auto-generated method stub

                //return imageIDs.length;
                // 返回一个很大的值，例如，Integer.MAX_VALUE
                return Integer.MAX_VALUE;
            }
        };
</code></pre>

<p>实现效果：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/172011025066014.png" alt="image" /></p>

<p>如果有人爱钻牛角尖就会发现，apk启动时第一张不能切换到最后一张。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/172012271774180.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;我曾想getItemId返回的position一开始不是0，而是中间值就行了，比如设为position+imageIDs.length<em>10，在getView()传入position和getItemId返回的position设为position+imageIDs.length</em>10均告失败，日志打印的position初始值都为0，不起作用，还是不能跳到最后一张。后来上网搜了下Gallery有个setSelection可以设置当前position，加入代码，显示成功。</p>

<pre><code class="java">gl.setSelection(imageIDs.length*10);
</code></pre>

<p><img src="http://images.cnitblog.com/i/602984/201403/172029441462881.png" alt="image" /></p>
]]></content>
  </entry>
  
</feed>
