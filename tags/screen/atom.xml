<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: screen | Chendd's Blog]]></title>
  <link href="http://chendd.github.io/tags/screen/atom.xml" rel="self"/>
  <link href="http://chendd.github.io/"/>
  <updated>2017-10-09T17:31:45+08:00</updated>
  <id>http://chendd.github.io/</id>
  <author>
    <name><![CDATA[chendd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android 横竖屏切换处理]]></title>
    <link href="http://chendd.github.io/blog/2014/07/25/android_land_port/"/>
    <updated>2014-07-25T21:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2014/07/25/android_land_port</id>
    <content type="html"><![CDATA[<p>Android横竖屏要解决的问题应该就两个：</p>

<ul>
<li>布局问题</li>
<li>重新载入问题</li>
</ul>


<!--more-->


<h2>一.布局问题：</h2>

<p>&#160; &#160; &#160; &#160;如果不想让软件在横竖屏之间切换，最简单的办法就是在项目的AndroidManifest.xml中找到你所指定的activity中加上android:screenOrientation属性，他有以下几个参数：</p>

<ul>
<li>unspecified:默认值 由系统来判断显示方向.判定的策略是和设备相关的，所以不同的设备会有不同的显示方向.</li>
<li>landscape:横屏显示（宽比高要长）</li>
<li>portrait:竖屏显示(高比宽要长)</li>
<li>user:用户当前首选的方向</li>
<li>behind:和该Activity下面的那个Activity的方向一致(在Activity堆栈中的)</li>
<li>sensor:有物理的感应器来决定。如果用户旋转设备这屏幕会横竖屏切换。</li>
<li>nosensor:忽略物理感应器，这样就不会随着用户旋转设备而更改了（"unspecified"设置除外）。</li>
</ul>


<p>也可以在Java代码中通过</p>

<pre><code class="java">setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE)
</code></pre>

<p>来设置。</p>

<p>如果要让软件在横竖屏之间切换，由于横竖屏的高宽会发生转换，有可能会要求不同的布局。可以通过以下方法来切换布局：</p>

<ul>
<li><p>在res目录下建立layout-land和layout-port目录,相应的layout文件不变，比如main.xml。layout-land是横屏的layout,layout-port是竖屏的layout，其他的不用管，模拟器会自动寻找。</p></li>
<li><p>通过 this.getResources().getConfiguration().orientation来判断当前是横屏还是竖屏然后来加载相应的 xml布局文件。因为当屏幕变为横屏的时候,系统会重新呼叫当前Activity的onCreate方法,你可以把以下方法放在你的onCreate中来检查当前的方向,然后可以让你的setContentView来载入不同的layout xml.</p></li>
</ul>


<pre><code class="java">if (this.getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE){ 
　　Log.i("info", "landscape"); // 横屏
} 
else if (this.getResources().getConfiguration().orientation ==Configuration.ORIENTATION_PORTRAIT) { 
　　Log.i("info", "portrait"); // 竖屏
}
</code></pre>

<p>在onConfigurationChanged()方法中也可以检测拥有硬键盘的键盘状态</p>

<pre><code class="java">//检测实体键盘的状态：推出或者合上 &amp;nbsp;&amp;nbsp;
if (newConfig.hardKeyboardHidden ==Configuration.HARDKEYBOARDHIDDEN_NO){
　　//实体键盘处于推出状态，在此处添加额外的处理代码
}
else if (newConfig.hardKeyboardHidden ==Configuration.HARDKEYBOARDHIDDEN_YES){
　　//实体键盘处于合上状态，在此处添加额外的处理代码
}
</code></pre>

<h2>二.重新载入问题：</h2>

<p>&#160; &#160; &#160; &#160;如果不需要从新载入，可以在AndroidManifest.xml中加入配置 android:configChanges=&ldquo;orientation|keyboardHidden"，配置 android:configChanges的作用就是如文档所说的：</p>

<blockquote><p>Specify one or more configuration changesthat the activity will handle itself. If not specified, the activity will berestarted if any of these configuration changes happen in the system。</p></blockquote>

<p>这样在程序中Activity就不会重复的调用onCreate()甚至不会调用onPause、onResume.只会调用一个 onConfigurationChanged(Configuration newConfig)。如果需要重新载入，则不需要做任何修改。不过如果需要在重新载入过程中保存之前的操作内容或数据，则需要保存之前的数据。然后在 activity的onCreate()中取出来。当然，如此就不能设置android:configChanges()了，否则就不会调用 onCreate()方法。</p>

<p>&#160; &#160; &#160; &#160;如果要彻底禁止翻转，可以设置android:screenOrientation的属性为nosensor，如此就可以忽略重力感应带来的麻烦了。不过在模拟器上不管用，在真机上是正确的。android:screenOrientation=&ldquo;portrait"则无论手机如何变动，拥有这个属性的activity都将是竖屏显示。android:screenOrientation="landscape"，为横屏显示。</p>

<p>&#160; &#160; &#160; &#160;这里提一个小知识，Android模拟器中，快捷键"Ctrl+F11/F12"可以实现转屏</p>

<h2>三.总结：</h2>

<p>总之，对于横竖屏切换的问题，统计了下，大家的解决办法是：</p>

<p>①不理会。</p>

<p>②只竖屏显示(android:screenOrientation=&ldquo;portrait&rdquo;);只横屏显示(android:screenOrientation=&ldquo;landscape&rdquo;)</p>

<p>③简单的防止重载：
   在 AndroidManifest.xml中加入：android:configChanges=&ldquo;orientation|keyboardHidden&rdquo;
   在activity中重载onConfigurationChanged事件
<code>java
@Override
public void onConfigurationChanged(Configuration config) {
 　　super.onConfigurationChanged(config);
}
</code></p>

<p>④横竖屏分别布局
   横竖屏分别布局的方法是：
   在res下新建
   layout-land 横屏
   layout-port 竖屏
   然后把layout中的xml文件分别考到以上目录，修改布局就可以了代码中不做任何更改。
   在 AndroidManifest.xml文件中的主Activity中加入
   android:configChanges=&ldquo;orientation|keyboardHidden&rdquo;
   然后在主Activity中的onConfigurationChanged加入</p>

<pre><code class="java">@Override
public void onConfigurationChanged(Configuration config) {
　　super.onConfigurationChanged(config);

    if (config.orientation == Configuration.ORIENTATION_PORTRAIT){
　　      setContentView(R.layout.main); //布局
　　      tv = (TextView) findViewById(R.id.EditText01);//控件
    }

    if (config.orientation == Configuration.ORIENTATION_LANDSCAPE){
　　      setContentView(R.layout.main); //布局
　　      tv = (TextView) findViewById(R.id.EditText01);//控件
    }
}
</code></pre>
]]></content>
  </entry>
  
</feed>
