<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Chendd's Blog]]></title>
  <link href="http://chendd.github.io/atom.xml" rel="self"/>
  <link href="http://chendd.github.io/"/>
  <updated>2016-07-28T12:00:22+08:00</updated>
  <id>http://chendd.github.io/</id>
  <author>
    <name><![CDATA[chendd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android学习日记10--裁剪区域]]></title>
    <link href="http://chendd.github.io/blog/2014/02/28/android_study_10/"/>
    <updated>2014-02-28T22:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/28/android_study_10</id>
    <content type="html"><![CDATA[<h2>裁剪区域</h2>

<p>&#160; &#160; &#160; &#160;裁剪是画布的一个函数，区域可以是矩形和圆形，也可以通过设置 path 或Region来显示自定义区域，通过不同组合，Android几乎可以支持任意现状的裁剪区域。</p>

<p>&#160; &#160; &#160; &#160;android.graphics包中定义了Point, Rect, Path, Region 这几种几何形状，Path可以为有圆弧，椭圆，二次曲线，三次曲线，线段，矩形等基本几何图形或是由这些基本几何图形组合而成，Path可以为开放或是闭合曲线。Rect提供了定义矩形的简洁方法。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//绘制一张背景图片，充满整个屏幕</span>
</span><span class='line'><span class="n">Bitmap</span> <span class="n">bitmap1</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeResource</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getResources</span><span class="o">(),</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">background</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">save</span><span class="o">();</span>
</span><span class='line'><span class="c1">// 四个参数 表示左上角的坐标和宽高</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">clipRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">30</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">restore</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">save</span><span class="o">();</span>
</span><span class='line'><span class="n">Path</span> <span class="n">path</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Path</span><span class="o">();</span>
</span><span class='line'><span class="c1">// 添加一个圆形区域 </span>
</span><span class='line'><span class="n">path</span><span class="o">.</span><span class="na">addCircle</span><span class="o">(</span><span class="mi">130</span><span class="o">,</span> <span class="mi">130</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="n">Direction</span><span class="o">.</span><span class="na">CCW</span><span class="o">);</span>
</span><span class='line'><span class="c1">// 也可以通过设置 path 来显示自定义区域</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">clipPath</span><span class="o">(</span><span class="n">path</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">restore</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果如下：</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/252027498664351.jpg" alt="image" /></p>

<p>需注意的是 裁剪区域的函数是对 整个画布的操作
为了避免对其他绘制受到影响，需对画布save保存，裁剪完之后 restore复原</p>

<p>此外也可以通过Region来进行裁剪区域的划分 第三个参数比较复杂(在最后说明)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">save</span><span class="o">();</span>
</span><span class='line'><span class="n">Region</span> <span class="n">region</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Region</span><span class="o">();</span>
</span><span class='line'><span class="c1">// op是添加区域的函数，最后一个参数表示显示的参数，有交并补差等等</span>
</span><span class='line'><span class="n">region</span><span class="o">.</span><span class="na">op</span><span class="o">(</span><span class="k">new</span> <span class="nf">Rect</span><span class="o">(</span><span class="mi">20</span><span class="o">,</span><span class="mi">20</span><span class="o">,</span><span class="mi">100</span><span class="o">,</span><span class="mi">100</span><span class="o">),</span> <span class="n">Region</span><span class="o">.</span><span class="na">Op</span><span class="o">.</span><span class="na">UNION</span><span class="o">);</span>
</span><span class='line'><span class="n">region</span><span class="o">.</span><span class="na">op</span><span class="o">(</span><span class="k">new</span> <span class="nf">Rect</span><span class="o">(</span><span class="mi">40</span><span class="o">,</span><span class="mi">20</span><span class="o">,</span><span class="mi">80</span><span class="o">,</span><span class="mi">150</span><span class="o">),</span> <span class="n">Region</span><span class="o">.</span><span class="na">Op</span><span class="o">.</span><span class="na">XOR</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">clipRegion</span><span class="o">(</span><span class="n">region</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">restore</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果如下：</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/252028493998838.jpg" alt="image" /></p>

<p>为了方便说明，把第一次clipRect的绘制范围设为A，第二次clipRect设定的范围设为B</p>

<ul>
<li>Op.DIFFERENCE，实际上就是求得的A和B的差集范围，即A－B，只有在此范围内的绘制内容才会被显示；</li>
<li>Op.REVERSE_DIFFERENCE，实际上就是求得的B和A的差集范围，即B－A，只有在此范围内的绘制内容才会被显示；；</li>
<li>Op.INTERSECT，即A和B的交集范围，只有在此范围内的绘制内容才会被显示；</li>
<li>Op.REPLACE，不论A和B的集合状况，B的范围将全部进行显示，如果和A有交集，则将覆盖A的交集范围；</li>
<li>Op.UNION，即A和B的并集范围，即两者所包括的范围的绘制内容都会被显示；</li>
<li>Op.XOR，A和B的补集范围，此例中即A除去B以外的范围，只有在此范围内的绘制内容才会被显示</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android学习日记9--BitMap操作]]></title>
    <link href="http://chendd.github.io/blog/2014/02/25/android_study_09/"/>
    <updated>2014-02-25T22:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/25/android_study_09</id>
    <content type="html"><![CDATA[<h2>Bitmap</h2>

<p>&#160; &#160; &#160; &#160;android里的图像处理重要的类，支持jpg、png、bmp等格式的图像，BitmapDrawable是封装Bitmap的一个对象，Bitmap实现在android.graphics包中。但是Bitmap类的构造函数是私有的，外面并不能实例化，只能是通过JNI(Java Native Interface JAVA本地调用)实例化。这必然是 某个辅助类提供了创建Bitmap的接口，而这个类的实现通过JNI接口来实例化Bitmap的，这个类就是BitmapFactory。利用BitmapFactory可以从一个指定文件中，利用decodeFile()解出Bitmap；也可以定义的图片资源中，利用decodeResource()解出Bitmap　　</p>

<!--more-->


<p>&#160; &#160; &#160; &#160;android支持一些方法对图像的平移、剪切、旋转、缩放等操作这样子可以用一张图片经过变化得到自己想要的，节省很多系统资源。</p>

<p>&#160; &#160; &#160; &#160;由于手机系统资源有限，没用的图像要及时回收，否则会产生OOM，isRecycled()判读该Bitmap是否可回收，recycle()强制Bitmap自我回收。</p>

<h4>1、android 系统图像的简单变化例子：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 获取图标图像的实例</span>
</span><span class='line'><span class="n">Bitmap</span> <span class="n">bitmap</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeResource</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getResources</span><span class="o">()</span>
</span><span class='line'>　　　　　　　　　　　　　　<span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">ic_launcher</span><span class="o">);</span>
</span><span class='line'><span class="c1">// 绘制图像</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'><span class="c1">// 保存当前状态</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">save</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 绕图像中点旋转90度</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">rotate</span><span class="o">(</span><span class="mi">30</span><span class="o">,</span> <span class="n">bitmap</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">2</span><span class="o">,</span> <span class="n">bitmap</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'><span class="c1">// 为了不重叠，画在(50,0)这点,x,y轴相对旋转也发生变化</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//恢复上次保存的状态与save()对应</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">restore</span><span class="o">();</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//平移</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">translate</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 缩放，参数分别表示：x轴缩放2倍，y轴缩放2倍，3，4参数表示缩放的起始点</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">scale</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">50</span><span class="o">+</span><span class="n">bitmap</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">2</span><span class="o">,</span> <span class="mi">50</span><span class="o">+</span><span class="n">bitmap</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 相对y轴镜像</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">scale</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">50</span><span class="o">+</span><span class="n">bitmap</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">2</span><span class="o">,</span> <span class="mi">50</span><span class="o">+</span><span class="n">bitmap</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果如下：</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/202006478416495.jpg" alt="image" /></p>

<h4>2、png格式和其他图像格式的区别是，png图像支持背景是透明的，</h4>

<p>可以多个图像叠加在一起，而其他格式的图片就会被旁白覆盖</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//绘制一张背景图片，充满整个屏幕</span>
</span><span class='line'><span class="n">Bitmap</span> <span class="n">bitmap1</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeResource</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getResources</span><span class="o">()</span>
</span><span class='line'>　　　　　　　　　　　　　　　　　　　　<span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">background</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// png的图片，左边螃蟹边缘是透明的，因此不会有问题</span>
</span><span class='line'><span class="n">Bitmap</span> <span class="n">bitmap2</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeResource</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getResources</span><span class="o">()</span>
</span><span class='line'>　　　　　　　　　　　　　　<span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">crab</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap2</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">200</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// jpg的图片，右边螃蟹边缘把背景遮挡了</span>
</span><span class='line'><span class="n">Bitmap</span> <span class="n">bitmap3</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeResource</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getResources</span><span class="o">()</span>
</span><span class='line'>　　　　　　　　　　　　　　<span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">carb2</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap3</span><span class="o">,</span> <span class="mi">200</span><span class="o">,</span> <span class="mi">230</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果图如下：</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/202009215387750.jpg" alt="image" /></p>

<p>左边的螃蟹图片是png格式的，右边则是jpg格式的，明显右边螃蟹还留有矩形的空白。</p>

<p>3、Bitmap通过均匀改变draw的横纵坐标或者切换图片就会呈现动画的效果,</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/161125238409409.png" alt="image" /></p>

<p>上图是一张波浪的图片</p>

<p>canvas.drawBitmap(bmp, x, y, new Paint());</p>

<p>新建个线程：x+=1，就可以看到海水在动。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/161127479021832.png" alt="image" /><img src="http://images.cnitblog.com/i/602984/201403/161127569961254.png" alt="image" /><img src="http://images.cnitblog.com/i/602984/201403/161128073712718.png" alt="image" /><img src="http://images.cnitblog.com/i/602984/201403/161128152938597.png" alt="image" /><img src="http://images.cnitblog.com/i/602984/201403/161128248241719.png" alt="image" /><img src="http://images.cnitblog.com/i/602984/201403/161128354964625.png" alt="image" /><img src="http://images.cnitblog.com/i/602984/201403/161128440747904.png" alt="image" /><img src="http://images.cnitblog.com/i/602984/201403/161128538556482.png" alt="image" /><img src="http://images.cnitblog.com/i/602984/201403/161129022463520.png" alt="image" /><img src="http://images.cnitblog.com/i/602984/201403/161129090278613.png" alt="image" /></p>

<p>上面则是9张卡通鱼的图片，分别命名fish0~fish9，通过来回不断切换图片，就会看到鱼儿在游动</p>

<p>运行效果（由于博主不会录制gif图片，囧！就截2张图，读者自己脑补吧）：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/161133207937998.png" alt="image" /> <img src="http://images.cnitblog.com/i/602984/201403/161215537618984.png" alt="image" /></p>

<p>SurfaceView主要代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="nf">MySurfaceView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated constructor stub</span>
</span><span class='line'>        <span class="n">sfh</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getHolder</span><span class="o">();</span>
</span><span class='line'>        <span class="n">sfh</span><span class="o">.</span><span class="na">addCallback</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>        <span class="n">paint</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'>        <span class="n">paint</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">WHITE</span><span class="o">);</span>
</span><span class='line'>        <span class="n">paint</span><span class="o">.</span><span class="na">setAntiAlias</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setFocusable</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">fishBmp</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">fishBmp</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeResource</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getResources</span><span class="o">(),</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">fish0</span> <span class="o">+</span> <span class="n">i</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">surfaceChanged</span><span class="o">(</span><span class="n">SurfaceHolder</span> <span class="n">holder</span><span class="o">,</span> <span class="kt">int</span> <span class="n">format</span><span class="o">,</span> <span class="kt">int</span> <span class="n">width</span><span class="o">,</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">height</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">surfaceCreated</span><span class="o">(</span><span class="n">SurfaceHolder</span> <span class="n">holder</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="n">bmp</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeResource</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getResources</span><span class="o">(),</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">water</span><span class="o">);</span>
</span><span class='line'>        <span class="n">x</span> <span class="o">=</span> <span class="o">-</span><span class="n">bmp</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//Log.v(&quot;chendd&quot;, &quot;bmp:&quot;+bmp.getWidth() );</span>
</span><span class='line'>        <span class="c1">//Log.v(&quot;chendd&quot;, &quot;this:&quot;+this.getWidth() );</span>
</span><span class='line'>        <span class="n">y</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="n">bmp</span><span class="o">.</span><span class="na">getHeight</span><span class="o">();</span>
</span><span class='line'>        <span class="n">flag</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>        <span class="c1">//实例线程</span>
</span><span class='line'>        <span class="n">th</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Thread</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">//启动线程</span>
</span><span class='line'>        <span class="n">th</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//Mydraw();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">Mydraw</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">canvas</span> <span class="o">=</span> <span class="n">sfh</span><span class="o">.</span><span class="na">lockCanvas</span><span class="o">();</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">canvas</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">canvas</span><span class="o">.</span><span class="na">drawColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">WHITE</span><span class="o">);</span>
</span><span class='line'>                <span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bmp</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">());</span>
</span><span class='line'>                <span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">fishBmp</span><span class="o">[</span><span class="n">currentFrame</span><span class="o">],</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">2</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">60</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// TODO: handle exception</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">canvas</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>                <span class="n">sfh</span><span class="o">.</span><span class="na">unlockCanvasAndPost</span><span class="o">(</span><span class="n">canvas</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">surfaceDestroyed</span><span class="o">(</span><span class="n">SurfaceHolder</span> <span class="n">holder</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onTouchEvent</span><span class="o">(</span><span class="n">MotionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="n">Mydraw</span><span class="o">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">(</span><span class="n">flag</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Mydraw</span><span class="o">();</span>
</span><span class='line'>            <span class="n">logic</span><span class="o">();</span>
</span><span class='line'>            <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">end</span> <span class="o">-</span> <span class="n">start</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">10</span> <span class="o">-</span> <span class="o">(</span><span class="n">end</span> <span class="o">-</span> <span class="n">start</span><span class="o">));</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">logic</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="c1">//Log.v(&quot;chendd&quot;, &quot;x:&quot;+x );</span>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">==</span> <span class="o">(-</span><span class="n">bmp</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">2</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">())){</span>
</span><span class='line'>            <span class="n">x</span> <span class="o">=</span> <span class="o">-</span><span class="n">bmp</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">x</span><span class="o">+=</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">currentFrame</span><span class="o">++;</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">currentFrame</span> <span class="o">&gt;=</span> <span class="n">fishBmp</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">currentFrame</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android学习日记8--Paint画笔]]></title>
    <link href="http://chendd.github.io/blog/2014/02/24/android_study_08/"/>
    <updated>2014-02-24T22:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/24/android_study_08</id>
    <content type="html"><![CDATA[<h2>Paint</h2>

<p>&#160; &#160; &#160; &#160;要绘图，首先得调整画笔，待画笔调整好之后，再将图像绘制到画布Canvas上，
这样才可以显示在手机屏幕上。Android 中的画笔是 Paint类，Paint 中包含了很多方法对其属性进行设置，</p>

<p>Paint方法一般可分两类，图形的绘制和文本的绘制
主要方法如下：（没有全部列出，大家可以查看<a href="http://android.toolib.net/reference/android/graphics/Paint.html">官方文档</a> ）</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">GREEN</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">Paint</span> <span class="n">paint1</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawCircle</span><span class="o">(</span><span class="mi">40</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="n">paint1</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置画笔无锯齿，默认有锯齿</span>
</span><span class='line'><span class="n">paint1</span><span class="o">.</span><span class="na">setAntiAlias</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawCircle</span><span class="o">(</span><span class="mi">100</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="n">paint1</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置画笔的透明度</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;无透明度&quot;</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">70</span><span class="o">,</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">());</span>
</span><span class='line'><span class="n">Paint</span> <span class="n">paint2</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'><span class="n">paint2</span><span class="o">.</span><span class="na">setAlpha</span><span class="o">(</span><span class="mh">0x77</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;半透明度&quot;</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">70</span><span class="o">,</span> <span class="n">paint2</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置绘制文本的锚点</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;锚点&quot;</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">90</span><span class="o">,</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">());</span>
</span><span class='line'><span class="n">Paint</span> <span class="n">paint3</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置以文本的中心点绘制</span>
</span><span class='line'><span class="n">paint3</span><span class="o">.</span><span class="na">setTextAlign</span><span class="o">(</span><span class="n">Paint</span><span class="o">.</span><span class="na">Align</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;锚点&quot;</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">105</span><span class="o">,</span> <span class="n">paint3</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//获取文本的长度</span>
</span><span class='line'><span class="n">Paint</span> <span class="n">paint4</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'><span class="kt">float</span> <span class="n">len</span> <span class="o">=</span><span class="n">paint4</span><span class="o">.</span><span class="na">measureText</span><span class="o">(</span><span class="s">&quot;文本宽度:&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;文本长度:&quot;</span><span class="o">+</span><span class="n">len</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">130</span><span class="o">,</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置画笔样式</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawRect</span><span class="o">(</span><span class="k">new</span> <span class="nf">Rect</span><span class="o">(</span><span class="mi">20</span><span class="o">,</span><span class="mi">140</span><span class="o">,</span><span class="mi">40</span><span class="o">,</span><span class="mi">160</span><span class="o">),</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">());</span>
</span><span class='line'><span class="n">Paint</span> <span class="n">paint5</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置画笔不填充</span>
</span><span class='line'><span class="n">paint5</span><span class="o">.</span><span class="na">setStyle</span><span class="o">(</span><span class="n">Style</span><span class="o">.</span><span class="na">STROKE</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawRect</span><span class="o">(</span><span class="k">new</span> <span class="nf">Rect</span><span class="o">(</span><span class="mi">60</span><span class="o">,</span><span class="mi">140</span><span class="o">,</span><span class="mi">80</span><span class="o">,</span><span class="mi">160</span><span class="o">),</span> <span class="n">paint5</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置画笔颜色</span>
</span><span class='line'><span class="n">Paint</span> <span class="n">paint6</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'><span class="n">paint6</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">GRAY</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;灰色&quot;</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">180</span><span class="o">,</span> <span class="n">paint6</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置画笔的粗细程度</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="mi">20</span><span class="o">,</span> <span class="mi">200</span><span class="o">,</span><span class="mi">70</span><span class="o">,</span> <span class="mi">200</span><span class="o">,</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">());</span>
</span><span class='line'><span class="n">Paint</span> <span class="n">paint7</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'><span class="n">paint7</span><span class="o">.</span><span class="na">setStrokeWidth</span><span class="o">(</span><span class="mi">7</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="mi">20</span><span class="o">,</span> <span class="mi">220</span><span class="o">,</span><span class="mi">70</span><span class="o">,</span> <span class="mi">220</span><span class="o">,</span><span class="n">paint7</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置画笔绘制文本的字体粗细</span>
</span><span class='line'><span class="n">Paint</span> <span class="n">paint8</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'><span class="n">paint8</span><span class="o">.</span><span class="na">setTextSize</span><span class="o">(</span><span class="mi">20</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;文字尺寸&quot;</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">260</span><span class="o">,</span> <span class="n">paint8</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置画笔的ARGB分量 ，a值 (透明度)</span>
</span><span class='line'><span class="n">Paint</span> <span class="n">paint9</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'><span class="n">paint9</span><span class="o">.</span><span class="na">setARGB</span><span class="o">(</span><span class="mh">0x77</span><span class="o">,</span> <span class="mh">0xff</span><span class="o">,</span> <span class="mh">0x00</span><span class="o">,</span> <span class="mh">0x00</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;红色半透明&quot;</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">290</span><span class="o">,</span> <span class="n">paint9</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/blog/602984/201402/182002322713875.png" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android学习日记7--Canvas画布]]></title>
    <link href="http://chendd.github.io/blog/2014/02/22/android_study_07/"/>
    <updated>2014-02-22T22:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/22/android_study_07</id>
    <content type="html"><![CDATA[<h4>1、Canvas</h4>

<p>&#160; &#160; &#160; &#160;Canvas类主要实现了屏幕的绘制过程，其中包含了很多实用的方法，比如绘制一条路径、区域、贴图、画点、画线、渲染文本，
当然Android官网提示大家很多方法有不同的重载版本，参数更灵活。</p>

<!--more-->


<p>&#160; &#160; &#160; &#160;2D部分是android SDK内部自己提供，3D部分是用Open GL ES(3D部分先直接pass，除非你要做些3D游戏之类的)。大部分2D使用的api都在android.graphics和android.graphics.drawable包中。</p>

<p><a href="http://android.toolib.net/reference/android/graphics/Canvas.html">API参考地址</a></p>

<p>&#160; &#160; &#160; &#160;下面是Canvas类常用的简单方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 设置画布颜色为蓝色</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//canvas.drawPoint(x, y, paint); x、y表示绘制点的坐标</span>
</span><span class='line'><span class="c1">//canvas.drawPoints(pts, paint);pts表示绘制点存储的数组，两两值表示一个坐标点</span>
</span><span class='line'><span class="c1">//canvas.drawPoints(pts, offset, count, paint);offset表示跳过哪些点,count表示实际绘制的个数</span>
</span><span class='line'><span class="kt">float</span><span class="o">[]</span> <span class="n">pts</span><span class="o">=</span> <span class="o">{</span><span class="mi">10</span><span class="o">,</span><span class="mi">10</span><span class="o">,</span><span class="mi">120</span><span class="o">,</span><span class="mi">120</span><span class="o">,</span><span class="mi">230</span><span class="o">,</span><span class="mi">230</span><span class="o">,</span><span class="mi">40</span><span class="o">,</span><span class="mi">40</span><span class="o">,</span><span class="mi">90</span><span class="o">,</span><span class="mi">90</span><span class="o">};</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawPoints</span><span class="o">(</span><span class="n">pts</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>绘制散点图：</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/181939296215102.png" alt="image" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawPoints</span><span class="o">(</span><span class="n">pts</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>跳过pts前3值后开始算4个值的数据(120,230,230,40)</p>

<p>即绘制（120，230）、(230,40)两个点</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/181940540028379.png" alt="image" /></p>

<p>绘制几何图形：</p>

<p><img src="http://images.cnitblog.com/i/602984/201404/261129023103474.png" alt="image" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="nf">GeometryView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'><span class="n">mPaint</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'><span class="c1">// 设置抗锯齿</span>
</span><span class='line'><span class="n">mPaint</span><span class="o">.</span><span class="na">setFlags</span><span class="o">(</span><span class="n">Paint</span><span class="o">.</span><span class="na">ANTI_ALIAS_FLAG</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onDraw</span><span class="o">(</span><span class="n">Canvas</span> <span class="n">canvas</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="kd">super</span><span class="o">.</span><span class="na">onDraw</span><span class="o">(</span><span class="n">canvas</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置画布颜色 也就是背景颜色</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">WHITE</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">mPaint</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;绘制无规则几何图形&quot;</span><span class="o">,</span> <span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="n">mPaint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//绘制一条线</span>
</span><span class='line'><span class="n">mPaint</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span>
</span><span class='line'><span class="n">mPaint</span><span class="o">.</span><span class="na">setStrokeWidth</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="n">mPaint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//绘制一个矩形</span>
</span><span class='line'><span class="n">mPaint</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">YELLOW</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">120</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">200</span><span class="o">,</span> <span class="n">mPaint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//绘制一个圆形</span>
</span><span class='line'><span class="n">mPaint</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawCircle</span><span class="o">(</span><span class="mi">80</span><span class="o">,</span> <span class="mi">300</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="n">mPaint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//绘制一个椭圆</span>
</span><span class='line'><span class="n">mPaint</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">CYAN</span><span class="o">);</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawOval</span><span class="o">(</span><span class="k">new</span> <span class="nf">RectF</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span><span class="mi">370</span><span class="o">,</span><span class="mi">120</span><span class="o">,</span><span class="mi">100</span><span class="o">),</span> <span class="n">mPaint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//绘制多边形</span>
</span><span class='line'><span class="n">mPaint</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span>
</span><span class='line'><span class="n">Path</span> <span class="n">path</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Path</span><span class="o">();</span>
</span><span class='line'><span class="n">path</span><span class="o">.</span><span class="na">moveTo</span><span class="o">(</span><span class="mi">150</span><span class="o">+</span><span class="mi">5</span> <span class="o">,</span> <span class="mi">400</span> <span class="o">-</span><span class="mi">50</span><span class="o">);</span>
</span><span class='line'><span class="n">path</span><span class="o">.</span><span class="na">lineTo</span><span class="o">(</span><span class="mi">150</span><span class="o">+</span><span class="mi">45</span><span class="o">,</span> <span class="mi">400</span> <span class="o">-</span> <span class="mi">50</span><span class="o">);</span>
</span><span class='line'><span class="n">path</span><span class="o">.</span><span class="na">lineTo</span><span class="o">(</span><span class="mi">150</span><span class="o">+</span><span class="mi">30</span><span class="o">,</span> <span class="mi">460</span> <span class="o">-</span> <span class="mi">50</span><span class="o">);</span>
</span><span class='line'><span class="n">path</span><span class="o">.</span><span class="na">lineTo</span><span class="o">(</span><span class="mi">150</span><span class="o">+</span><span class="mi">20</span><span class="o">,</span> <span class="mi">460</span> <span class="o">-</span> <span class="mi">50</span><span class="o">);</span>
</span><span class='line'><span class="n">path</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawPath</span><span class="o">(</span><span class="n">path</span><span class="o">,</span> <span class="n">mPaint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;此外还有好多绘制各种简单图形的方法，偷懒就不一一写了，需要的时候可以去查api文档，</p>

<p>或者在eclipse 敲canvas.draw 按 ALT+/ 提示</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/181944254378008.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;总的来说，Canvas可以绘制的对象有：弧线(arcs)、填充颜色(argb和color)、Bitmap、圆(circle和oval)、点(point)、线(line)、矩形(Rect)、图片(Picture)、圆角矩形(RoundRect)、文本(text)、顶点(Vertices)、路径(path)。通过组合这些对象我们可以画出一些简单有趣的界面出来，但是光有这些功能还是不够的，如果我要画一个仪表盘(数字围绕显示在一个圆圈中)就比较困难(不要告诉我直接贴一张仪表盘的图片上去，如果要让仪表盘指针会动呢？就没辙了吧！)。</p>

<p>&#160; &#160; &#160; &#160;幸好Android还提供了一些对Canvas位置转换的方法：rorate、scale、translate、skew(扭曲)等，而且它允许你通过获得它的转换矩阵对象(getMatrix方法)直接操作它。这些操作就像是虽然你的笔还是原来的地方画，但是画纸旋转或者移动了，所以你画的东西的方位就产生变化。为了方便一些转换操作，Canvas还提供了保存和回滚属性的方法(save和restore类似数据库commit和rollback)，比如你可以先保存目前画纸的位置(save)，然后旋转90度，向下移动100像素后画一些图形，画完后调用restore方法返回到刚才保存的位置，这些内容将在BitMap的操作中讲到。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android学习日记6--SurfaceView视图]]></title>
    <link href="http://chendd.github.io/blog/2014/02/20/android_study_06/"/>
    <updated>2014-02-20T22:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/20/android_study_06</id>
    <content type="html"><![CDATA[<h2>一、API关SurfaceView的介绍</h2>

<p>&#160; &#160; &#160; &#160;SurfaceView是视图(View)的继承类，这个视图里内嵌了一个专门用于绘制的Surface。你可以控制这个Surface的格式和尺寸。Surfaceview控制这个Surface的绘制位置。</p>

<!--more-->


<p>&#160; &#160; &#160; &#160;Surface是纵深排序的，这表明它总在自己所在窗口的后面。surfaceview提供了一个可见区域，只有在这个可见区域内 的surface部分内容才可见，可见区域外的部分不可见。surface的排版显示受到视图层级关系的影响，它的兄弟视图结点会在顶端显示。这意味者 surface的内容会被它的兄弟视图遮挡，这一特性可以用来放置遮盖物(overlays)(例如，文本和按钮等控件)。注意，如果surface上面 有透明控件，那么它的每次变化都会引起框架重新计算它和顶层控件的透明效果，这会影响性能。</p>

<p>&#160; &#160; &#160; &#160;你可以通过SurfaceHolder接口访问这个surface，getHolder()方法可以得到这个接口。surfaceview变得可见时，surface被创建；surfaceview隐藏前，surface被销毁。这样能节省资源。如果你要查看 surface被创建和销毁的时机，可以重载surfaceCreated(SurfaceHolder)和 surfaceDestroyed(SurfaceHolder)。</p>

<p>&#160; &#160; &#160; &#160;Surfaceview的核心在于提供了两个线程：UI线程和渲染线程。这里应注意：</p>

<ul>
<li>所有SurfaceView和SurfaceHolder.Callback的方法都应该在UI线程里调用，一般来说就是应用程序主线程。渲染线程所要访问的各种变量应该作同步处理。</li>
<li>由于surface可能被销毁，它只在SurfaceHolder.Callback.surfaceCreated()和 SurfaceHolder.Callback.surfaceDestroyed()之间有效，所以要确保渲染线程访问的是合法有效的surface。</li>
</ul>


<h2>二、SurfaceView流程</h2>

<p>&#160; &#160; &#160; &#160;继承SurfaceView并实现SurfaceHolder.Callback接口 &mdash;-> SurfaceView.getHolder()获得SurfaceHolder对象 &mdash;->SurfaceHolder.addCallback(callback)添加回调函数&mdash;->SurfaceHolder.lockCanvas()获得Canvas对象并锁定画布&mdash;-> Canvas绘画 &mdash;->SurfaceHolder.unlockCanvasAndPost(Canvas canvas)结束锁定画图，并提交改变，将图形显示</p>

<h2>三、SurfaceView具体实现</h2>

<p>&#160; &#160; &#160; &#160;用SurfaceView实现上篇View视图一样的例子</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/171953189042933.png" alt="image" /></p>

<p>讲解写在注释里</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">gamesurfaceview2</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.Canvas</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.Color</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.Paint</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.MotionEvent</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.SurfaceHolder</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.SurfaceHolder.Callback</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.SurfaceView</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//SurfaceView 还要继承CallBack接口</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MySurfaceView</span> <span class="kd">extends</span> <span class="n">SurfaceView</span> <span class="kd">implements</span> <span class="n">Callback</span><span class="o">,</span><span class="n">Runnable</span><span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">SurfaceHolder</span> <span class="n">sfh</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Paint</span> <span class="n">paint</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Thread</span> <span class="n">thread</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">flag</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Canvas</span> <span class="n">canvas</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">w</span><span class="o">,</span><span class="n">h</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">MySurfaceView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated constructor stub</span>
</span><span class='line'>        <span class="c1">//通过SurfaceHolder来和Can打交道</span>
</span><span class='line'>        <span class="n">sfh</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getHolder</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//添加监听</span>
</span><span class='line'>        <span class="n">sfh</span><span class="o">.</span><span class="na">addCallback</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>        <span class="n">x</span> <span class="o">=</span><span class="mi">20</span><span class="o">;</span>
</span><span class='line'>        <span class="n">y</span> <span class="o">=</span><span class="mi">20</span><span class="o">;</span>
</span><span class='line'>        <span class="n">paint</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'>        <span class="n">paint</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">WHITE</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setFocusable</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * surfaceView发生改变时执行的方法</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">surfaceChanged</span><span class="o">(</span><span class="n">SurfaceHolder</span> <span class="n">holder</span><span class="o">,</span> <span class="kt">int</span> <span class="n">format</span><span class="o">,</span> <span class="kt">int</span> <span class="n">width</span><span class="o">,</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">height</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * surfaceView创建时执行的方法</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">surfaceCreated</span><span class="o">(</span><span class="n">SurfaceHolder</span> <span class="n">holder</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="n">h</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">();</span>
</span><span class='line'>        <span class="n">w</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">();</span>
</span><span class='line'>        <span class="n">flag</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>        <span class="n">thread</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Thread</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>        <span class="n">thread</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 自己定义的绘画调用方法</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">Mydraw</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// 获取一个加锁的画布，防止被其他修改</span>
</span><span class='line'>            <span class="n">canvas</span> <span class="o">=</span> <span class="n">sfh</span><span class="o">.</span><span class="na">lockCanvas</span><span class="o">();</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">canvas</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">//-----------利用填充矩形的方式，刷屏</span>
</span><span class='line'>                <span class="c1">////绘制矩形</span>
</span><span class='line'>                <span class="c1">//canvas.drawRect(0,0,this.getWidth(),</span>
</span><span class='line'>                <span class="c1">//this.getHeight(), paint);</span>
</span><span class='line'>                <span class="c1">//-----------利用填充画布，刷屏</span>
</span><span class='line'>                <span class="c1">//        canvas.drawColor(Color.BLACK);</span>
</span><span class='line'>                <span class="c1">//-----------利用填充画布指定的颜色分量，刷屏</span>
</span><span class='line'>                <span class="c1">// 没重画图像会叠在一起</span>
</span><span class='line'>                <span class="n">canvas</span><span class="o">.</span><span class="na">drawRGB</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                <span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;Game&quot;</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// TODO: handle exception</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">canvas</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>                <span class="c1">// 解锁和提交画布</span>
</span><span class='line'>                <span class="n">sfh</span><span class="o">.</span><span class="na">unlockCanvasAndPost</span><span class="o">(</span><span class="n">canvas</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * surfaceView被销毁时执行的方法</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">surfaceDestroyed</span><span class="o">(</span><span class="n">SurfaceHolder</span> <span class="n">holder</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 触摸屏幕事件</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onTouchEvent</span><span class="o">(</span><span class="n">MotionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="n">x</span><span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">();</span>
</span><span class='line'>        <span class="n">y</span><span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 游戏逻辑</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">logic</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">(</span><span class="n">flag</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Mydraw</span><span class="o">();</span>
</span><span class='line'>            <span class="n">logic</span><span class="o">();</span>
</span><span class='line'>            <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// 50毫秒刷新一次</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">end</span> <span class="o">-</span> <span class="n">start</span> <span class="o">&lt;</span> <span class="mi">50</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">50</span> <span class="o">-</span> <span class="o">(</span><span class="n">end</span> <span class="o">-</span> <span class="n">start</span><span class="o">));</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意：当画布没有重画覆盖时，会出现如下重叠效果：</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android学习日记5--View视图]]></title>
    <link href="http://chendd.github.io/blog/2014/02/19/android_study_05/"/>
    <updated>2014-02-19T22:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/19/android_study_05</id>
    <content type="html"><![CDATA[<h2>一、android 界面开发</h2>

<h4>1、三个重要的类：View视图、Canvas画布、Paint画笔</h4>

<h4>2、android 界面开发常用三种视图</h4>

<ul>
<li>View            &ndash;只能在主线程中更新，没有缓存机制，适合画面更新较少的界面，比如有按键按下才变化的界面。</li>
<li>SurfaceView &ndash;可以设置独立的线程，有缓存机制，主要用于2D游戏</li>
<li>GLSurfaceView &ndash;主要用于3D游戏，暂时不学习</li>
</ul>


<!--more--> 


<h2>二、View框架</h2>

<p>&#160; &#160; &#160; &#160;同SWIMG、AWT一样，Android也提供大量的View组件给开发者，所有组件都是View的子类，包括以前介绍的常用控件和ViewGroup也是。ViewGroup是View的子类，所以它也具有View的特性，但它主要用来充当View的容器，将其中的View视作自己的孩子，对它的子View进行管理，当然它的孩子也可以是ViewGroup类型。ViewGroup(树根)和它的孩子们(View和ViewGroup)以树形结构形成了一个层次结构，View类有接受和处理消息的功能，android系统所产生的消息会在这些ViewGroup和 View之间传递。</p>

<h4>1、View类结构</h4>

<p>java.lang.Object
&mdash;&mdash;-android.view.View</p>

<p>直接子类：AnalogClock, ImageView, KeyboardView, ProgressBar, SurfaceView, TextView, ViewGroup, ViewStub</p>

<p>当然还有许多其他间接子类。</p>

<h4>2、ViewGroup</h4>

<p>&#160; &#160; &#160; &#160;ViewGroup继承于View，它可以包含其他的View，就像一个View的容器，我们可以调用其成员函数addView()将View当作孩子放到ViewGroup中。</p>

<p>&#160; &#160; &#160; &#160;我们经常使用的LinearLayout、relativeLayout等都是ViewGroup的子类，ViewGroup类中有一个内部类ViewGroup.LayoutParams，我们经常使用LayoutParams的子类来构造布局参数。</p>

<p>&#160; &#160; &#160; &#160;我们也可以自定义自己的布局，以方便日后使用和维护，这时我们就需要继承ViewGroup类并在派生类中重写ViewGroup的一些方法。</p>

<h4>3、自定义View</h4>

<p>&#160; &#160; &#160; &#160;有些自带组件可能无法满足需求，这时候往往需要自定义View，一般只要主要底下两点就可以了。</p>

<ul>
<li>继承View</li>
<li>重写感兴趣的方法</li>
</ul>


<p>自定义View的常用方法:</p>

<p>　　onFinishInflate() 当View中所有的子控件 均被映射成xml后触发</p>

<p>　　onMeasure(int, int) 确定所有子元素的大小</p>

<p>　　onLayout(boolean, int, int, int, int) 当View分配所有的子元素的大小和位置时触发</p>

<p>　　onSizeChanged(int, int, int, int) 当view的大小发生变化时触发</p>

<p>　　onDraw(Canvas) view渲染内容的细节</p>

<p>　　onKeyDown(int, KeyEvent) 有按键按下后触发</p>

<p>　　onKeyUp(int, KeyEvent) 有按键按下后弹起时触发</p>

<p>　　onTrackballEvent(MotionEvent) 轨迹球事件</p>

<p>　　onTouchEvent(MotionEvent) 触屏事件</p>

<p>　　onFocusChanged(boolean, int, Rect) 当View获取 或失去焦点时触发</p>

<p>　　onWindowFocusChanged(boolean) 当窗口包含的view获取或失去焦点时触发</p>

<p>　　onAttachedToWindow() 当view被附着到一个窗口时触发</p>

<p>　　onDetachedFromWindow() 当view离开附着的窗口时触发，Android123提示该方法和  onAttachedToWindow() 是相反的。</p>

<p>　　onWindowVisibilityChanged(int) 当窗口中包含的可见的view发生变化时触发</p>

<h4>4、View实例</h4>

<p>&#160; &#160; &#160; &#160;在View上 写"GameView" ,按方向键 上下左右会随之移动，触摸屏幕、拖动也会移到相应位置。</p>

<p>新建MyView类 继承View基类</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">gameview</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.Canvas</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.Color</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.Paint</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.KeyEvent</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.MotionEvent</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyView</span> <span class="kd">extends</span> <span class="n">View</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="mi">10</span><span class="o">,</span><span class="n">y</span><span class="o">=</span><span class="mi">10</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">MyView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setFocusable</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span><span class="c1">//设置当前view为焦点操作</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated constructor stub</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onDraw</span><span class="o">(</span><span class="n">Canvas</span> <span class="n">canvas</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="n">Paint</span> <span class="n">paint</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span>
</span><span class='line'>        <span class="n">paint</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span>
</span><span class='line'>        <span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;GameView&quot;</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onDraw</span><span class="o">(</span><span class="n">canvas</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onKeyDown</span><span class="o">(</span><span class="kt">int</span> <span class="n">keyCode</span><span class="o">,</span> <span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">keyCode</span> <span class="o">==</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">KEYCODE_DPAD_UP</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">y</span><span class="o">-=</span><span class="mi">2</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">keyCode</span> <span class="o">==</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">KEYCODE_DPAD_DOWN</span><span class="o">){</span>
</span><span class='line'>            <span class="n">y</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">keyCode</span> <span class="o">==</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">KEYCODE_DPAD_LEFT</span><span class="o">){</span>
</span><span class='line'>            <span class="n">x</span><span class="o">-=</span><span class="mi">2</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">keyCode</span> <span class="o">==</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">KEYCODE_DPAD_RIGHT</span><span class="o">){</span>
</span><span class='line'>            <span class="n">x</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">invalidate</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//postInvalidate();</span>
</span><span class='line'>        <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">onKeyDown</span><span class="o">(</span><span class="n">keyCode</span><span class="o">,</span> <span class="n">event</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onKeyUp</span><span class="o">(</span><span class="kt">int</span> <span class="n">keyCode</span><span class="o">,</span> <span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">onKeyUp</span><span class="o">(</span><span class="n">keyCode</span><span class="o">,</span> <span class="n">event</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onTouchEvent</span><span class="o">(</span><span class="n">MotionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">tx</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">();</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">ty</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//玩家手指点击屏幕的动作</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getAction</span><span class="o">()</span> <span class="o">==</span> <span class="n">MotionEvent</span><span class="o">.</span><span class="na">ACTION_DOWN</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">x</span> <span class="o">=</span> <span class="n">tx</span><span class="o">;</span>
</span><span class='line'>            <span class="n">y</span> <span class="o">=</span> <span class="n">ty</span><span class="o">;</span>
</span><span class='line'>            <span class="c1">//玩家手指抬起离开屏幕的动作</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getAction</span><span class="o">()</span> <span class="o">==</span> <span class="n">MotionEvent</span><span class="o">.</span><span class="na">ACTION_MOVE</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">x</span> <span class="o">=</span> <span class="n">tx</span><span class="o">;</span>
</span><span class='line'>            <span class="n">y</span> <span class="o">=</span> <span class="n">ty</span><span class="o">;</span>
</span><span class='line'>            <span class="c1">//玩家手指在屏幕上移动的动作</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getAction</span><span class="o">()</span> <span class="o">==</span> <span class="n">MotionEvent</span><span class="o">.</span><span class="na">ACTION_UP</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">x</span> <span class="o">=</span> <span class="n">tx</span><span class="o">;</span>
</span><span class='line'>            <span class="n">y</span> <span class="o">=</span> <span class="n">ty</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="c1">//        //获取用户手指触屏的X坐标赋值与文本的X坐标</span>
</span><span class='line'><span class="c1">//        x = (int)event.getX();</span>
</span><span class='line'><span class="c1">//        //获取用户手指触屏的Y坐标赋值与文本的Y坐标</span>
</span><span class='line'><span class="c1">//        y = (int)event.getY();</span>
</span><span class='line'><span class="c1">//        //重绘画布</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//重绘画布</span>
</span><span class='line'>        <span class="n">invalidate</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//postInvalidate();</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/blog/602984/201402/162058089063155.png" alt="image" /></p>

<h2>需要特别注意的知识点如下：</h2>

<h4>1、Activity全屏显示</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 去掉Activity标题栏</span>
</span><span class='line'><span class="k">this</span><span class="o">.</span><span class="na">requestWindowFeature</span><span class="o">(</span><span class="n">Window</span><span class="o">.</span><span class="na">FEATURE_NO_TITLE</span><span class="o">);</span>
</span><span class='line'><span class="c1">// 去掉 电量、时间等状态栏，全屏显示</span>
</span><span class='line'><span class="k">this</span><span class="o">.</span><span class="na">getWindow</span><span class="o">().</span><span class="na">setFlags</span><span class="o">(</span><span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">FLAG_FULLSCREEN</span><span class="o">,</span> <span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">FLAG_FULLSCREEN</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>也可以在AndroidManifest里设置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>android:theme=&quot;@android:style/Theme.NoTitleBar.Fullscreen&quot;
</span></code></pre></td></tr></table></div></figure>


<h4>2、设置模拟器方向键生效</h4>

<p>C:\Users\XX.android\avd\XX.avd
config.ini
hw.dPad=no,把no改成yes，如下：
hw.dPad=yes
重启模拟器即可
XX根据个人命名不同而不同</p>

<h4>3、重写onDraw方法</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Paint</span> <span class="n">paint</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Paint</span><span class="o">();</span><span class="c1">// 画笔类</span>
</span><span class='line'><span class="n">paint</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span><span class="c1">// 初始画布为白色，设置画笔为黑色</span>
</span><span class='line'><span class="n">canvas</span><span class="o">.</span><span class="na">drawText</span><span class="o">(</span><span class="s">&quot;GameView&quot;</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span><span class="c1">// 坐标无论横屏竖屏都是从右上角为 0,0点开始的</span>
</span><span class='line'><span class="kd">super</span><span class="o">.</span><span class="na">onDraw</span><span class="o">(</span><span class="n">canvas</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>4、onKeyDown、onKeyUp、onTouchEvent</h4>

<p>　　分别表示按钮 按下、抬起、触摸屏幕的事件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onKeyDown</span><span class="o">(</span><span class="kt">int</span> <span class="n">keyCode</span><span class="o">,</span> <span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>　　<span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">onKeyDown</span><span class="o">(</span><span class="n">keyCode</span><span class="o">,</span> <span class="n">event</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>第一个参数为键值，手机中每一个按钮都拥有一个完全独立的键值 通过按键键值就可以确定当前按下的是那一个按键。
第二个参数为按键事件，  该对象中保存着当前按键的所有信息 比如 按键发生的时间 按键发生的次数  按键发生的类型等等。
通过以上两个参数就可以拿到当前按键事件的所附带的一切信息。</p>

<p>另外两个方法的参数也一样。</p>

<p>keyCode == KeyEvent.KEYCODE_DPAD_UP 表示 向上的方向键按下</p>

<p> 其他方向键命名类似。</p>

<h4>5、设置当前view为焦点操作才能进行操作</h4>

<p>&#160; &#160; &#160; &#160;在View中须要监听按键的话必需在构造方法中给当前View 设置控制焦点 须要调用 setFocusable(true); 如果没有设置的话 onKeyDown 与onKeyUp 等跟按键有关的 永远无法监听到按键事件。 在onKeyDown 与onKeyUp 通过keyCode 的值就可以判断当前按下那一个按键 ，然后根据event 事件对象就可以拿到当前触发事件的时间等等。</p>

<h4>6、重画</h4>

<ul>
<li>invalidate();// 重绘View树，即draw()过程，在UI主线程调用，不符合单线程安全设计模式</li>
<li>postInvalidate(); //可在自己创建的线程 通过handler通知UI主线程调用</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记4--开发中的通用细节]]></title>
    <link href="http://chendd.github.io/blog/2014/02/19/android_study_04/"/>
    <updated>2014-02-19T21:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/19/android_study_04</id>
    <content type="html"><![CDATA[<h4>1、android中的计量单位</h4>

<ul>
<li>px （pixels）（像素）：是屏幕的物理像素点，与密度相关，密度大了，单位面积上的px会比较多。通常不推荐使用这个</li>
<li>pt(磅):1/72英寸,也较少用</li>
<li>in(英寸):标准长度单位</li>
<li>mm(毫米):标准长度单位</li>
</ul>


<!--more-->


<p>&#160; &#160; &#160; &#160;布局中尽量用dip(dp):独立像素 做单位
　　字体中尽量用sp：放大像素 与刻度无关做单位</p>

<p>&#160; &#160; &#160; &#160;使用 dip: device independent pixels（设备独立像素）。显示效果因不同硬件设备而不同，为了支持WVGA、HVGA和QVGA
　　推荐使用dip(dp) px: pixels(像素). HVGA用px比较多。 pt: 1pt＝1/72英寸； sp: scaled pixels(放大像素)。
　　主要用于字体显示best for textsize。</p>

<h4>2、屏幕大小</h4>

<ul>
<li><p>VGA 分辨率为480*640像素</p></li>
<li><p>HVGA 分辨率为320*480像素，全称是Half VGA</p></li>
<li><p>QVGA 分辨率为240*320像素，全称是Quarter VGA</p></li>
<li><p>WVGA 分辨率为240<em>400像素，全称是Wide Quarter VGA WVGA 分辨率达到了480</em>800像素或者480*854（宽屏）像素，全称是Wide VGA</p></li>
<li><p>WQVGA (Wide QVGA) 是对QVGA320X240分辨率的扩展, 达到400X240( 或者480X272)分辨率; 是支持16:9的宽屏应用的.</p></li>
</ul>


<h4>3、屏幕适配方法</h4>

<p>&#160; &#160; &#160; &#160;ppi（pixel per inch），翻译过来就是每英寸的距离像素点的个数。对于一张200x200像素的图片，我国我们想要显示在 200ppi 的手机上，那么占用屏幕的长和宽均为   200pix  /  (200pix / inch) = 1 inch  ,也就是说要占用 1 inch x 1 inch,如果要显示在 300ppi 的手机上，那么占用屏幕的长和宽均为  200pix  / (300pix / inch )  = 2/3 inch，也就是说对于 ppi越高的手机，单位inch上能够显示更多的像素点，因此当这两种手机显示同样多的像素点的时候，ppi 越高的手机占用的空间就越小。这就是我们想要图片在各种手机屏幕上都显示一致的效果时需要解决的问题。　</p>

<p>&#160; &#160; &#160; &#160;drawable-ldpi、drawable-mdpi、drawable-hdpi、drawable-xhdpi，drawable-xxhdpi,这几个目录对应的pppi为</p>

<p>120ppi  160ppi   240ppi    320ppi   480ppi ，也就是说如果屏幕的ppi为320，那么就会优先使用drawable-xhdpi目录下的</p>

<p>图片资源。当然手机屏幕的ppi也是多种多样，例如有的是  300ppi，有的是220ppi，这个系统会选择最接近的目录</p>

<ul>
<li><p>方法一：对每一中不同的ppi使用不同的图片，这需要我们先判断屏幕的ppi，再对图片进行处理，然后显示，显然比较麻烦。而且对于获取屏幕ppi这个参数android并没有提供给我们api调用。所以这种办法基本行不通</p></li>
<li><p>方法二:  在用eclipse开发环境生成一个android项目后，系统会给我们生成drawable-ldpi、drawable-mdpi、drawable-hdpi、drawable-xhdpi，drawable-xxhdpi,对于同一张图片资源，我们分别创建这五个版本来适应不同的屏幕。</p></li>
<li><p>方法三：方法2中需要为每个drawable目录都生成对应的图片版本，如果图片较多的话，生成不同版本的图片倒是小事更主要的缺点是会增大应用的大小，那么可不可以只在一个目录下存放图片，例如只在drawable-mdpi目录下存放图片呢答案是可以的，假设我们在drawable-hdpi（对应的ppi为160ppi）目录下存放了一个100X100的图片，那么当图片需要在320ppi的android设备上进行显示时，android系统会将自动将图片进行处理生成一个200X200的图片显示到设备上，那么他们占用的空间大小分别为  100/160  = 3/5  inch     200/320 = 3/5 inch  可以看出他们占用的长和宽都是一样的这种自动缩放的优点是只需要一张图片就能适应各种ppi类型的屏幕。缺点是当对100X100的图片进行变换成200X200的图片时肯能会造成图片的不清晰，如果提供一个drawable-xhdpi下的图片资源，图片较多的话会无形增加应用的大小，所以说如何进行选择也是一个衡量。建议是将比较重要的图片资源提供多个版本（当android设备和自己的ppi相对应的drawable下找到想要的资源时，就不会再到其他目录需找资源）。不是很重要的图片资源存储一个版本，让系统根据自己的ppi自己对图片进行适当的缩放显示。</p></li>
</ul>


<h4>4、Context</h4>

<p>&#160; &#160; &#160; &#160;Context是一个抽象类，它有很多子类，如Activity、TabActivity、Service等</p>

<p>&#160; &#160; &#160; &#160;位于android.content.Context中，其实该类为LONG型，类似Win32中的Handle句柄，很多方法需要通过 Context才能识别调用者的实例Context可以理解为句柄或上下文，主要用于加载或访问系统资源很多组件实例化都要传递它作为参数如 Toast，由于Activity是它的子类，所以直接传this即可，但是在内部类实现时一般 要传 ActivityName.this</p>

<h4>5、Resources</h4>

<p>&#160; &#160; &#160; &#160;android是一个平台，一个框架，这个框架包含许多资源，string、color、bitmap、style等resources。android的AAPT会自动为这些文件建立一个ID,在程序中就可以以使用这些ID来引用这些resources，如果你想改某个值，只需要修改这些resource而不需要修改源代码</p>

<p>&#160; &#160; &#160; &#160;Android 中的Resources都会由R.java生成ID自动管理
引用时只要 调用 getResources().getXX(ID)即可
XX表示res文件下的xml文件名;常用的有：</p>

<ul>
<li>res/drawable/ 用来存放图片文件</li>
<li>res/layout/ 用来存放布局定义文件</li>
<li>res/values/ 用来存放一些变量、参数等文件</li>
</ul>


<h4>6、R.java</h4>

<p>&#160; &#160; &#160; &#160;在R.java的注释部分， 有这样一段话：“AUTO-GENERATE FILE. DO NOT MODIFY”，这个文件是自动生成的，不要修改。
这个文件是在程序编译过程中由aapt(Android Asset Packaging Tool) 自动生成
这个文件中的属性都是public static final的，所以可以直接在Java代码中引用，每个属性都代表一个资源，看起来就像为每个资源都定义了一个ID，然后通过这个ID来访问资源
　　所有的资源文件都被编译进最后生成的二进制包中，这样能够带来很高的性能和效率</p>

<h4>7、findViewById</h4>

<p>&#160; &#160; &#160; &#160;通过ID来找到布局中的组件的方法。我们调用的findViewById()函数其实有两种（目前我只看到两种，不确定还有没有其他的），一种是Activity类中findViewById()函数。另外一种是View类中定义的findViewById()函数一般我们在oncreate()方法中使用的(XXview)findViewById(R.id.XX)既是调用的Activity中的findViewById()函数。而在其他情况写出的XXview.findViewById()中调用的是view类中的findViewById()</p>

<h4>8、LayoutInflate</h4>

<p>&#160; &#160; &#160; &#160;实例化xml布局文件中的布局，获取具体布局
一般有如下两种写法，但是本质是一样的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>　　<span class="n">LayoutInflater</span> <span class="n">inflater</span> <span class="o">=</span> <span class="n">LayoutInflater</span><span class="o">.</span><span class="na">from</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>　　<span class="n">View</span> <span class="n">layout</span> <span class="o">=</span> <span class="n">inflater</span><span class="o">.</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">main</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>　　<span class="n">LayoutInflater</span> <span class="n">inflater</span> <span class="o">=</span> <span class="o">(</span><span class="n">LayoutInflater</span><span class="o">)</span> <span class="n">getSystemService</span><span class="o">(</span><span class="n">LAYOUT_INFLATER_SERVICE</span><span class="o">);</span>
</span><span class='line'>　　<span class="n">View</span> <span class="n">layout</span> <span class="o">=</span> <span class="n">inflater</span><span class="o">.</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">main</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记3--常用控件总结]]></title>
    <link href="http://chendd.github.io/blog/2014/02/17/android_study_03_7/"/>
    <updated>2014-02-17T09:22:14+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/17/android_study_03_7</id>
    <content type="html"><![CDATA[<h2>常用控件</h2>

<h3>10、常用控件总结</h3>

<p>&#160; &#160; &#160; &#160;Android控件种类繁多，但常用的无非这几种，当然有些高级控件可能特殊点，至此，常用控件就讲这些。如果开发时遇到陌生控件再去查API文档。</p>

<p>附件是转载的控件常用属性讲解，不求记忆，但得知道有这么些属性。</p>

<!--more-->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>android:orientation
</span><span class='line'>horizontal/vertical
</span><span class='line'>设置布局水平还是垂直，默认是垂直
</span><span class='line'>
</span><span class='line'>android:checked
</span><span class='line'>true/false
</span><span class='line'>标记默认选中，如果是单选则选中最后一个
</span><span class='line'>
</span><span class='line'>android:layout_gravity
</span><span class='line'>center/right/left/bottom/top
</span><span class='line'>位置
</span><span class='line'>
</span><span class='line'>android:gravity
</span><span class='line'>center/right/left/bottom/top
</span><span class='line'>位置(android:gravity属性是对该view内容的限定．比如一个button上面的text.你可以设置该text在view的靠左，靠右等位置．该属性就干了这个．android:layout_gravity是用来设置该view相对与起父view的位置．比如一个button在linearlayout里，你想把该button放在靠左靠右等位置就可以通过该属性设置．)
</span><span class='line'>
</span><span class='line'>android:hint
</span><span class='line'>@string
</span><span class='line'>提示信息，当文本框为空的时候显示
</span><span class='line'>
</span><span class='line'>android:numeric
</span><span class='line'>integer/decimal
</span><span class='line'>只能输入整数/小数
</span><span class='line'>
</span><span class='line'>android:singleLine
</span><span class='line'>true/false
</span><span class='line'>设置单行输入，一旦设置为true，则文字不会自动换行
</span><span class='line'>
</span><span class='line'>android:password
</span><span class='line'>true/false
</span><span class='line'>设置密码框
</span><span class='line'>
</span><span class='line'>android:textColor
</span><span class='line'>#ffffff
</span><span class='line'>字体颜色
</span><span class='line'>
</span><span class='line'>android:textStyle
</span><span class='line'>bold/italic/bolditalic
</span><span class='line'>设置字形[bold(粗体) 0, italic(斜体) 1, bolditalic(又粗又斜) 2] 可以设置一个或多个，用“｜”隔开
</span><span class='line'>
</span><span class='line'>android:textSize
</span><span class='line'>20dip
</span><span class='line'>字体大小
</span><span class='line'>
</span><span class='line'>android:capitalize
</span><span class='line'>characters
</span><span class='line'>设置英文字母大写类型。此处无效果，需要弹出输入法才能看得到
</span><span class='line'>
</span><span class='line'>android:textAlign
</span><span class='line'>center/right/left
</span><span class='line'>设置文字显示位置，EditText没有这个属性，但TextView有
</span><span class='line'>
</span><span class='line'>android:autoText
</span><span class='line'>true/false
</span><span class='line'>如果设置，将自动执行输入值的拼写纠正。此处无效果，在显示输入法并输入的时候起作用。
</span><span class='line'>
</span><span class='line'>android:editable
</span><span class='line'>true/false
</span><span class='line'>是否可编辑
</span><span class='line'>
</span><span class='line'>android:textColorHighlight
</span><span class='line'>#ffffff
</span><span class='line'>被选中文字的底色
</span><span class='line'>
</span><span class='line'>android:textColorHint
</span><span class='line'>#ffffff
</span><span class='line'>设置提示信息文字的颜色，默认为灰色
</span><span class='line'>
</span><span class='line'>android:textScaleX
</span><span class='line'>1.5
</span><span class='line'>控制字与字之间的间距
</span><span class='line'>
</span><span class='line'>android:typeface
</span><span class='line'>normal/sans/serif/monospace
</span><span class='line'>设置文本字体，必须是以下常量值之一：normal 0, sans 1, serif 2, monospace(等宽字体) 3
</span><span class='line'>
</span><span class='line'>android:background
</span><span class='line'>@null
</span><span class='line'>空间背景，这里没有，指透明，将EditText自定义的背景去掉
</span><span class='line'>
</span><span class='line'>android:layout_weight
</span><span class='line'>1
</span><span class='line'>权重，控制控件之间的地位,在控制控件显示的大小时蛮有用的。
</span><span class='line'>
</span><span class='line'>android:textAppearance
</span><span class='line'>textAppearanceButton、textAppearanceInverse、textAppearanceLarge、textAppearanceLargeInverse、textAppearanceMedium、textAppearanceMediumInverse、textAppearanceSmall、textAppearanceSmallInverse
</span><span class='line'>设置文字外观。如“?android:attr/textAppearanceLargeInverse”这里引用的是系统自带的一个外观，？表示系统是否有这种外观，否则使用默认的外观。
</span><span class='line'>
</span><span class='line'>android:autoLink
</span><span class='line'>none、web、email、phone、map、all
</span><span class='line'>设置是否当文本为URL链接/email/电话号码/map时，文本显示为可点击的链接。
</span><span class='line'>
</span><span class='line'>android:cursorVisible
</span><span class='line'>true/false
</span><span class='line'>设定光标为显示/隐藏，默认显示。
</span><span class='line'>
</span><span class='line'>android:digits
</span><span class='line'>1234567890.+-*/%\n()
</span><span class='line'>设置允许输入哪些字符。
</span><span class='line'>
</span><span class='line'>android:drawableBottom
</span><span class='line'>在text的下方输出一个drawable，如图片。如果指定一个颜色的话会把text的背景设为该颜色，并且同时和background使用时覆盖后者。 
</span><span class='line'>android:drawableLeft
</span><span class='line'>
</span><span class='line'>在text的左边输出一个drawable，如图片。 
</span><span class='line'>android:drawableRight
</span><span class='line'>在text的右边输出一个drawable，如图片。
</span><span class='line'>
</span><span class='line'>android:drawableTop
</span><span class='line'>在text的正上方输出一个drawable，如图片。 
</span><span class='line'>android:drawablePadding
</span><span class='line'>
</span><span class='line'>设置text与drawable(图片)的间隔，与drawableLeft、drawableRight、drawableTop、drawableBottom一起使用，可设置为负数，单独使用没有效果。 
</span><span class='line'>android:editorExtras
</span><span class='line'>指定特定输入法的扩展，如“com.mydomain.im.SOME_FIELD”。源码跟踪至EditorInfo.extras，暂无相关实现代码。
</span><span class='line'>
</span><span class='line'>android:ellipsize
</span><span class='line'>start、end、middle、marquee
</span><span class='line'>设置当文字过长时,该控件该如何显示。有如下值设置：”start”省略号显示在开头；”end”省略号显示在结尾；”middle”省略号显示在中间；”marquee”以跑马灯的方式显示(动画横向移动)
</span><span class='line'>
</span><span class='line'>android:freezesText
</span><span class='line'>true/false
</span><span class='line'>设置保存文本的内容以及光标的位置，再到相应的Activity中加上如下两个方法，实现方法网站找一下，这里不详细说明。
</span><span class='line'>
</span><span class='line'>android:imeOptions
</span><span class='line'>normal，actionUnspecified，actionNone，actionGo，actionSearch，actionSend，actionNext，actionDone，flagNoExtractUi，flagNoAccessoryAction，flagNoEnterAction
</span><span class='line'>设置软键盘的Enter键。可用’｜’设置多个。
</span><span class='line'>
</span><span class='line'>android:imeActionId
</span><span class='line'>设置IME动作ID，在onEditorAction中捕获判断进行逻辑操作。
</span><span class='line'>
</span><span class='line'>android:imeActionLabel
</span><span class='line'>设置IME动作标签。但是不能保证一定会使用，猜想在输入法扩展的时候应该有用。
</span><span class='line'>
</span><span class='line'>android:includeFontPadding
</span><span class='line'>true/false
</span><span class='line'>设置文本是否包含顶部和底部额外空白，默认为true。
</span><span class='line'>
</span><span class='line'>android:inputMethod
</span><span class='line'>为文本指定输入法，需要完全限定名（完整的包名）
</span><span class='line'>
</span><span class='line'>android:inputType
</span><span class='line'>设置文本的类型，用于帮助输入法显示合适的键盘类型。有如下值设置：none、text、textCapCharacters字母大小、textCapWords单词首字母大小、textCapSentences仅第一个字母大小、textAutoCorrect、textAutoComplete自动完成、textMultiLine多行输入、textImeMultiLine输入法多行（如果支持）、textNoSuggestions不提示、textEmailAddress电子邮件地址、textEmailSubject邮件主题、textShortMessage短信息（会多一个表情按钮出来）、textLongMessage长讯息？、textPersonName人名、textPostalAddress地址、textPassword密码、textVisiblePassword可见密码、textWebEditText作为网页表单的文本、textFilte文本筛选过滤、textPhonetic拼音输入、numberSigned有符号数字格式、numberDecimal可带小数点的浮点格式、phone电话号码、datetime时间日期、date日期、time时间。
</span><span class='line'>
</span><span class='line'>android:linksClickable
</span><span class='line'>设置链接是否点击连接，即使设置了autoLink
</span><span class='line'>
</span><span class='line'>android:maxLines
</span><span class='line'>设置文本的最大显示行数，与width或者layout_width结合使用，超出部分自动换行，超出行数将不显示
</span><span class='line'>
</span><span class='line'>android:minLines
</span><span class='line'>设置文本的最小行数
</span><span class='line'>
</span><span class='line'>android:lineSpacingExtra
</span><span class='line'>设置行间距。
</span><span class='line'>
</span><span class='line'>android:phoneNumber
</span><span class='line'>true/false
</span><span class='line'>设置为电话号码的输入方式。
</span><span class='line'>
</span><span class='line'>android:privateImeOptions
</span><span class='line'>提供额外的输入法选项(字符串格式)。
</span><span class='line'>
</span><span class='line'>android:scrollHorizontally
</span><span class='line'>true/false
</span><span class='line'>设置文本超出TextView的宽度的情况下，是否出现横拉条。
</span><span class='line'>
</span><span class='line'>android:selectAllOnFocus
</span><span class='line'>如果文本是可选择的，让他获取焦点而不是将光标移动为文本的开始位置或者末尾位置。
</span><span class='line'>
</span><span class='line'>android:shadowColor
</span><span class='line'>指定文本阴影的颜色，需要与shadowRadius一起使用。
</span><span class='line'>
</span><span class='line'>android:shadowRadius
</span><span class='line'>设置阴影的半径。设置为0.1就变成字体的颜色了，一般设置为3.0的效果比较好。
</span><span class='line'>
</span><span class='line'>android:shadowDx
</span><span class='line'>设置阴影横向坐标开始位置。
</span><span class='line'>
</span><span class='line'>android:shadowDy
</span><span class='line'>设置阴影纵向坐标开始位置。
</span><span class='line'>
</span><span class='line'>android:textColorLink
</span><span class='line'>#ffffff
</span><span class='line'>文字链接的颜色.
</span><span class='line'>
</span><span class='line'>android:maxHeight
</span><span class='line'>设置文本区域的最大高度
</span><span class='line'>
</span><span class='line'>android:minHeight
</span><span class='line'>设置文本区域的最小高度
</span><span class='line'>
</span><span class='line'>android:maxWidth
</span><span class='line'>设置文本区域的最大宽度
</span><span class='line'>
</span><span class='line'>android:minWidth
</span><span class='line'>设置文本区域的最小宽度
</span><span class='line'>
</span><span class='line'>android:clickable
</span><span class='line'>true/false
</span><span class='line'>view是否能对click事件作出反应
</span><span class='line'>
</span><span class='line'>android:onClick
</span><span class='line'>当view被click之后，view的context的哪个方法被呼叫。通常这个context是指view所在的Activity。例如:android:onClick='sayHello'，则相应的Activity里面有一个方法public void sayHello(View view)方法，当这个view被click之后，sayHello方法就会被调用。
</span><span class='line'>
</span><span class='line'>android:longClickable
</span><span class='line'>true/false
</span><span class='line'>view是否可以对长时间的click事件作出反应。
</span><span class='line'>
</span><span class='line'>android:focusable
</span><span class='line'>view是否能响应焦点事件
</span><span class='line'>
</span><span class='line'>android:cacheColorHint
</span><span class='line'>#00000000
</span><span class='line'>滚动时，列表里面的view重绘时，用的依旧是系统默认的透明色，颜色值为#FF191919，要改变这种情况，只需要调用 listView的setCacheColorHint(0)，颜色值设置为0或者xml文件中listView的属性 Android:cacheColorHint="#00000000"即可，滚动时，重绘View的时候就不会有背景颜色。
</span><span class='line'>
</span><span class='line'>android:fadingEdgeLength
</span><span class='line'>设置边框渐变的长度。</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android学习日记3--常用控件Dialog]]></title>
    <link href="http://chendd.github.io/blog/2014/02/16/android_study_03_6/"/>
    <updated>2014-02-16T09:22:14+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/16/android_study_03_6</id>
    <content type="html"><![CDATA[<h2>常用控件</h2>

<h4>9、Dialog</h4>

<p>&#160; &#160; &#160; &#160;我们经常会需要在Android界面上弹出一些对话框，比如询问用户或者让用户选择。这些功能我们叫它Android Dialog对话框</p>

<p>对话框，要创建对话框之前首先要创建Builder类创建者，Builder是AlertDialog的子类，而且还是它的内部类。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">setPositiveButton</span> <span class="c1">//设置最左边的按钮</span>
</span><span class='line'><span class="n">setNeutralButton</span> <span class="c1">//设置中间的按钮</span>
</span><span class='line'><span class="n">setNegativeButton</span> <span class="c1">//设置最右边的按钮</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Builder</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">);</span>
</span><span class='line'>        <span class="n">builder</span><span class="o">.</span><span class="na">setIcon</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">ic_dialog_info</span><span class="o">);</span>
</span><span class='line'>        <span class="n">builder</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;dialg标题&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">//builder.setMessage(&quot;dialog对话框内容&quot;);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">builder</span><span class="o">.</span><span class="na">setPositiveButton</span><span class="o">(</span><span class="s">&quot;Yes&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="nf">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">DialogInterface</span> <span class="n">dialog</span><span class="o">,</span> <span class="kt">int</span> <span class="n">which</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//        builder.setNeutralButton(&quot;back&quot;, new OnClickListener() {</span>
</span><span class='line'><span class="c1">//            </span>
</span><span class='line'><span class="c1">//            @Override</span>
</span><span class='line'><span class="c1">//            public void onClick(DialogInterface dialog, int which) {</span>
</span><span class='line'><span class="c1">//                // TODO Auto-generated method stub</span>
</span><span class='line'><span class="c1">//                </span>
</span><span class='line'><span class="c1">//            }</span>
</span><span class='line'><span class="c1">//        });</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">builder</span><span class="o">.</span><span class="na">setNegativeButton</span><span class="o">(</span><span class="s">&quot;No&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="nf">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">DialogInterface</span> <span class="n">dialog</span><span class="o">,</span> <span class="kt">int</span> <span class="n">which</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">builder</span><span class="o">.</span><span class="na">setView</span><span class="o">(</span><span class="k">new</span> <span class="nf">CheckBox</span><span class="o">(</span><span class="k">this</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">builder</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/blog/602984/201402/151718088076765.png" alt="image" /></p>

<p>由于 Builder 设计模式特性，上面代码也可以这样简写</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//        new Builder(this)</span>
</span><span class='line'><span class="c1">//        .setIcon(android.R.drawable.ic_dialog_info)</span>
</span><span class='line'><span class="c1">//        .setTitle(&quot;dialg标题&quot;)</span>
</span><span class='line'><span class="c1">//        .setMessage(&quot;dialog对话框内容&quot;)</span>
</span><span class='line'><span class="c1">//        .setPositiveButton(&quot;yes&quot;, new OnClickListener() {</span>
</span><span class='line'><span class="c1">//        </span>
</span><span class='line'><span class="c1">//            @Override</span>
</span><span class='line'><span class="c1">//            public void onClick(DialogInterface dialog, int which) {</span>
</span><span class='line'><span class="c1">//                // TODO Auto-generated method stub</span>
</span><span class='line'><span class="c1">//                </span>
</span><span class='line'><span class="c1">//            }</span>
</span><span class='line'><span class="c1">//        })</span>
</span><span class='line'><span class="c1">//        .setNegativeButton(&quot;no&quot;, new OnClickListener() {</span>
</span><span class='line'><span class="c1">//            </span>
</span><span class='line'><span class="c1">//            @Override</span>
</span><span class='line'><span class="c1">//            public void onClick(DialogInterface dialog, int which) {</span>
</span><span class='line'><span class="c1">//                // TODO Auto-generated method stub</span>
</span><span class='line'><span class="c1">//                </span>
</span><span class='line'><span class="c1">//            }</span>
</span><span class='line'><span class="c1">//        })</span>
</span><span class='line'><span class="c1">//        .setView(new CheckBox(this))</span>
</span><span class='line'><span class="c1">//        .create()</span>
</span><span class='line'><span class="c1">//        .show();</span>
</span></code></pre></td></tr></table></div></figure>


<p>builder.setView(new CheckBox(this));只能添加一个组件</p>

<p>如果添加多个组件，会被后面的覆盖掉</p>

<p>添加某些一组组件，还有对应函数</p>

<p>添加单选框</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//        builder.setSingleChoiceItems(new String[] {&quot;单选&quot;,&quot;单选&quot;}, 1, new OnClickListener() {</span>
</span><span class='line'><span class="c1">//            </span>
</span><span class='line'><span class="c1">//            @Override</span>
</span><span class='line'><span class="c1">//            public void onClick(DialogInterface dialog, int which) {</span>
</span><span class='line'><span class="c1">//                // TODO Auto-generated method stub</span>
</span><span class='line'><span class="c1">//                </span>
</span><span class='line'><span class="c1">//            }</span>
</span><span class='line'><span class="c1">//        });</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/blog/602984/201402/151724331278207.png" alt="image" /></p>

<p>添加复选框</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//        builder.setMultiChoiceItems(new String[] {&quot;多选&quot;,&quot;多选&quot;}, new boolean[] {false,true}, new OnMultiChoiceClickListener() {</span>
</span><span class='line'><span class="c1">//            </span>
</span><span class='line'><span class="c1">//            @Override</span>
</span><span class='line'><span class="c1">//            public void onClick(DialogInterface arg0, int arg1, boolean arg2) {</span>
</span><span class='line'><span class="c1">//                // TODO Auto-generated method stub</span>
</span><span class='line'><span class="c1">//                </span>
</span><span class='line'><span class="c1">//            }</span>
</span><span class='line'><span class="c1">//        });</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/blog/602984/201402/151724595038498.png" alt="image" /></p>

<p>添加列表</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//        builder.setItems(new String[] {&quot;item1&quot;,&quot;item2&quot;,&quot;item3&quot;}, new OnClickListener() {</span>
</span><span class='line'><span class="c1">//            </span>
</span><span class='line'><span class="c1">//            @Override</span>
</span><span class='line'><span class="c1">//            public void onClick(DialogInterface arg0, int arg1) {</span>
</span><span class='line'><span class="c1">//                // TODO Auto-generated method stub</span>
</span><span class='line'><span class="c1">//                </span>
</span><span class='line'><span class="c1">//            }</span>
</span><span class='line'><span class="c1">//        });</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/blog/602984/201402/151725109813708.png" alt="image" /></p>

<p>此外，还可以自定义布局文件，当作一个组件用setView()添加</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">LayoutInflater</span> <span class="n">inflater</span> <span class="o">=</span> <span class="n">getLayoutInflater</span><span class="o">();</span>
</span><span class='line'><span class="n">View</span> <span class="n">layoutView</span> <span class="o">=</span> <span class="n">inflater</span><span class="o">.</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">dialogmain</span><span class="o">,</span> <span class="o">(</span><span class="n">ViewGroup</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">myLayout</span><span class="o">));</span>
</span><span class='line'><span class="n">builder</span><span class="o">.</span><span class="na">setView</span><span class="o">(</span><span class="n">layoutView</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;LinearLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'> <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span> <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'> <span class="na">android:background=</span><span class="s">&quot;#ffffffff&quot;</span> <span class="na">android:orientation=</span><span class="s">&quot;horizontal&quot;</span>
</span><span class='line'> <span class="na">android:id=</span><span class="s">&quot;@+id/myLayout&quot;</span><span class="nt">&gt;</span>
</span><span class='line'> <span class="nt">&lt;TextView</span>
</span><span class='line'>     <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:text=</span><span class="s">&quot;TextView&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'> <span class="nt">&lt;EditText</span>
</span><span class='line'>     <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>     <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="nt">/&gt;</span>
</span><span class='line'> <span class="nt">&lt;Button</span>
</span><span class='line'>     <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>     <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>     <span class="na">android:text=</span><span class="s">&quot;btn1&quot;</span>
</span><span class='line'>    <span class="nt">/&gt;</span>
</span><span class='line'> <span class="nt">&lt;Button</span>
</span><span class='line'>     <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>     <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>     <span class="na">android:text=</span><span class="s">&quot; btn2&quot;</span>
</span><span class='line'>    <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/LinearLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/blog/602984/201402/151725258108004.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;Android API 支持下列类型的对话框对象:</p>

<ul>
<li>警告对话框 AlertDialog:  一个可以有0到3个按钮, 一个单选框或复选框的列表的对话框. 警告对话框可以创建大多数的交互界面, 是推荐的类型.</li>
<li>进度对话框 ProgressDialog:  显示一个进度环或者一个进度条. 由于它是AlertDialog的扩展, 所以它也支持按钮.</li>
<li>日期选择对话框 DatePickerDialog:  让用户选择一个日期.</li>
<li>时间选择对话框 TimePickerDialog:  让用户选择一个时间.</li>
</ul>


<p>&#160; &#160; &#160; &#160;如果你希望自定义你的对话框, 可以扩展Dialog类</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android学习日记3--常用控件ListView]]></title>
    <link href="http://chendd.github.io/blog/2014/02/15/android_study_03_5/"/>
    <updated>2014-02-15T09:22:14+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/15/android_study_03_5</id>
    <content type="html"><![CDATA[<h2>常用控件</h2>

<h4>8、ListView</h4>

<p>&#160; &#160; &#160; &#160;列表视图，比如游戏的排行榜。列表数据可以根据屏幕大小自适应</p>

<p>列表的显示需要三个元素：</p>

<ul>
<li><p>ListVeiw:用来展示列表的View。</p></li>
<li><p>适配器:用来把数据映射到ListView上的中介。</p></li>
<li><p>数据:具体的将被映射的字符串，图片，或者基本组件。</p></li>
</ul>


<!--more-->


<p>ListView用到两种适配器：
- ArrayAdapter&ndash;简单适配器，只显示文字</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/151216210793383.png" alt="image" /></p>

<ul>
<li>SimpleAdapter&ndash;自定义适配器，可以显示自定义内容</li>
</ul>


<p><img src="http://images.cnitblog.com/blog/602984/201402/151216336356022.png" alt="image" /></p>

<ul>
<li>SimpleCursorAdapter可以认为是SimpleAdapter对数据库的简单结合，可以方面的把数据库的内容以列表的形式展示出来，暂时不讲。</li>
</ul>


<p>&#160; &#160; &#160; &#160;使用简单适配器可直接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">new</span> <span class="n">ArrayAdapter</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;(</span><span class="k">this</span><span class="o">,</span> <span class="n">android</span><span class="o">.</span><span class="na">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">simple_list_item_1</span><span class="o">,</span> <span class="n">list</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>this：当前context
android.R.layout.simple_list_item_1是系统的布局文件
list：ListView的各项数据</p>

<p>SimpleAdapter各项参数</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">new</span> <span class="nf">SimpleAdapter</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">data</span><span class="o">,</span> <span class="n">resource</span><span class="o">,</span> <span class="n">from</span><span class="o">,</span> <span class="n">to</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>context：当前context内容
data：ListView的各项数据
resource：ListView的每项布局
from：ListView的组件索引
to：ListView的组件ID
如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">new</span> <span class="nf">SimpleAdapter</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">list</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span><span class="s">&quot;item1&quot;</span><span class="o">,</span><span class="s">&quot;item2&quot;</span><span class="o">,</span><span class="s">&quot;item3&quot;</span><span class="o">,</span><span class="s">&quot;item4&quot;</span><span class="o">,</span><span class="s">&quot;item5&quot;</span><span class="o">}</span>
</span><span class='line'><span class="o">,</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">iv</span><span class="o">,</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">bigtv</span><span class="o">,</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">smalltv</span><span class="o">,</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn</span><span class="o">,</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">cb</span><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是SimpleAdapter 不能触发组件的事件，还需
自己写适配器继承BaseAdapter</p>

<p>BaseAdapter主要有四个方法
getCount &ndash;列表每一项的长度
getItem
getItemId
getView &ndash;绘制每一项的具体组件</p>

<p>例子演示自定义MyAdapter</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;LinearLayout</span>
</span><span class='line'>    <span class="na">android:orientation=</span><span class="s">&quot;horizontal&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>    <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ImageView</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/iv&quot;</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;LinearLayout</span>
</span><span class='line'>        <span class="na">android:orientation=</span><span class="s">&quot;vertical&quot;</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;TextView</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:textSize=</span><span class="s">&quot;20sp&quot;</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/bigtv&quot;</span>
</span><span class='line'>        <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TextView</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:textSize=</span><span class="s">&quot;10sp&quot;</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/smalltv&quot;</span>
</span><span class='line'>        <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;/LinearLayout&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;Button</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;button&quot;</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/btn&quot;</span>
</span><span class='line'>        <span class="na">android:focusable=</span><span class="s">&quot;false&quot;</span>
</span><span class='line'>        <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;CheckBox</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/cb&quot;</span>
</span><span class='line'>        <span class="na">android:focusable=</span><span class="s">&quot;false&quot;</span>
</span><span class='line'>        <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/LinearLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>布局文件要特别说明两个属性</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>android:textSize=&quot;10sp&quot; --设置text的大小
</span><span class='line'>android:focusable=&quot;false&quot; --设置焦点属性不可见
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">listview2</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.AlertDialog</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.LayoutInflater</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View.OnClickListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.ViewGroup</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.BaseAdapter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Button</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.CheckBox</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.CompoundButton</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.CompoundButton.OnCheckedChangeListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.ImageView</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.TextView</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyAdapter</span> <span class="kd">extends</span> <span class="n">BaseAdapter</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">LayoutInflater</span> <span class="n">mInflater</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;&gt;</span> <span class="n">list</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">layId</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">flag</span><span class="o">[];</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">itemId</span><span class="o">[];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">MyAdapter</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;&gt;</span> <span class="n">list</span><span class="o">,</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">layId</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">flag</span><span class="o">,</span> <span class="kt">int</span> <span class="n">itemId</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">mInflater</span> <span class="o">=</span> <span class="n">LayoutInflater</span><span class="o">.</span><span class="na">from</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">list</span> <span class="o">=</span> <span class="n">list</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">layId</span> <span class="o">=</span> <span class="n">layId</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">flag</span> <span class="o">=</span> <span class="n">flag</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">itemId</span> <span class="o">=</span> <span class="n">itemId</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCount</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Object</span> <span class="nf">getItem</span><span class="o">(</span><span class="kt">int</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getItemId</span><span class="o">(</span><span class="kt">int</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">View</span> <span class="nf">getView</span><span class="o">(</span><span class="kt">int</span> <span class="n">arg0</span><span class="o">,</span> <span class="n">View</span> <span class="n">arg1</span><span class="o">,</span> <span class="n">ViewGroup</span> <span class="n">arg2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="n">arg1</span> <span class="o">=</span> <span class="n">mInflater</span><span class="o">.</span><span class="na">inflate</span><span class="o">(</span><span class="n">layId</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">flag</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">arg1</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">itemId</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="k">instanceof</span> <span class="n">ImageView</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">ImageView</span> <span class="n">iv</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageView</span><span class="o">)</span><span class="n">arg1</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">itemId</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span><span class='line'>                <span class="n">iv</span><span class="o">.</span><span class="na">setBackgroundResource</span><span class="o">((</span><span class="n">Integer</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">arg0</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">flag</span><span class="o">[</span><span class="n">i</span><span class="o">]));</span>
</span><span class='line'>            <span class="o">}</span><span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">arg1</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">itemId</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="k">instanceof</span> <span class="n">TextView</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">TextView</span> <span class="n">tv</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">arg1</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">itemId</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span><span class='line'>                <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">((</span><span class="n">String</span><span class="o">)</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">arg0</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">flag</span><span class="o">[</span><span class="n">i</span><span class="o">]));</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">((</span><span class="n">Button</span><span class="o">)</span> <span class="n">arg1</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn</span><span class="o">))</span>
</span><span class='line'>            <span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="nf">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>                <span class="k">new</span> <span class="n">AlertDialog</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">ma</span><span class="o">)</span>
</span><span class='line'>                <span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;自定义SimpleAdapter&quot;</span><span class="o">)</span>
</span><span class='line'>                <span class="o">.</span><span class="na">setMessage</span><span class="o">(</span><span class="s">&quot;按钮成功触发监听事件！&quot;</span><span class="o">)</span>
</span><span class='line'>                <span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>        <span class="n">CheckBox</span> <span class="n">cb</span> <span class="o">=</span> <span class="o">(</span><span class="n">CheckBox</span><span class="o">)</span> <span class="n">arg1</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">cb</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">cb</span><span class="o">.</span><span class="na">setOnCheckedChangeListener</span><span class="o">(</span><span class="k">new</span> <span class="nf">OnCheckedChangeListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCheckedChanged</span><span class="o">(</span><span class="n">CompoundButton</span> <span class="n">buttonView</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">isChecked</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>                <span class="k">new</span> <span class="n">AlertDialog</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">ma</span><span class="o">)</span>
</span><span class='line'>                <span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;自定义 adapter&quot;</span><span class="o">)</span>
</span><span class='line'>                <span class="o">.</span><span class="na">setMessage</span><span class="o">(</span><span class="s">&quot;触发选择框&quot;</span><span class="o">)</span>
</span><span class='line'>                <span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">arg1</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>MyAdapter代码里</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">new</span> <span class="n">AlertDialog</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">ma</span><span class="o">)</span>
</span><span class='line'><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;自定义 adapter&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">.</span><span class="na">setMessage</span><span class="o">(</span><span class="s">&quot;触发选择框&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;表示弹出对话框，与Toast不同的是 该对话框要按返回才会退出，而Toast是一闪而过的，对话框在下一讲详细阐述
MainActivity.ma是定义在MainActivity的静态变量指向this自己</p>

<p>MainActivity代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">listview2</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.Menu</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.ListView</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.SimpleAdapter</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">ListView</span> <span class="n">lv</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;&gt;</span> <span class="n">list</span><span class="o">;</span>
</span><span class='line'>    <span class="c1">//private SimpleAdapter sp;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="n">MainActivity</span> <span class="n">ma</span><span class="o">;</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ma</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">lv</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ListView</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span><span class="n">Object</span><span class="o">&gt;&gt;();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;();</span>
</span><span class='line'>        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;item1&quot;</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">ic_launcher</span><span class="o">);</span>
</span><span class='line'>        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;item2&quot;</span><span class="o">,</span> <span class="s">&quot;bigtv&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;item3&quot;</span><span class="o">,</span> <span class="s">&quot;smalltv&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">map</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//sp = new SimpleAdapter(MainActivity.this, list, R.layout.activity_main, new String[] {&quot;item1&quot;,&quot;item2&quot;,&quot;item3&quot;,&quot;item4&quot;,&quot;item5&quot;}, new int[] {R.id.iv,R.id.bigtv,R.id.smalltv,R.id.btn,R.id.cb});</span>
</span><span class='line'>        <span class="c1">//lv.setAdapter(sp);</span>
</span><span class='line'>
</span><span class='line'>           <span class="c1">// --使用自定义适配器，可监听其ListView中每一项的事件监听</span>
</span><span class='line'>        <span class="n">MyAdapter</span> <span class="n">adapter</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MyAdapter</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">list</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span><span class="s">&quot;item1&quot;</span><span class="o">,</span><span class="s">&quot;item2&quot;</span><span class="o">,</span><span class="s">&quot;item3&quot;</span><span class="o">},</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">iv</span><span class="o">,</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">bigtv</span><span class="o">,</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">smalltv</span><span class="o">});</span>
</span><span class='line'>             <span class="c1">// 为列表视图设置适配器（将数据映射到列表视图中）</span>
</span><span class='line'>            <span class="n">lv</span><span class="o">.</span><span class="na">setAdapter</span><span class="o">(</span><span class="n">adapter</span><span class="o">);</span>
</span><span class='line'>             <span class="c1">// //显示列表视图</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">setContentView</span><span class="o">(</span><span class="n">lv</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onCreateOptionsMenu</span><span class="o">(</span><span class="n">Menu</span> <span class="n">menu</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Inflate the menu; this adds items to the action bar if it is present.</span>
</span><span class='line'>        <span class="n">getMenuInflater</span><span class="o">().</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">menu</span><span class="o">.</span><span class="na">main</span><span class="o">,</span> <span class="n">menu</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行效果
<img src="http://images.cnitblog.com/blog/602984/201402/151210441191376.png" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android学习日记3--常用控件tabSpec/tabHost]]></title>
    <link href="http://chendd.github.io/blog/2014/02/12/android_study_03_4/"/>
    <updated>2014-02-12T09:22:14+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/12/android_study_03_4</id>
    <content type="html"><![CDATA[<h2>常用控件</h2>

<h4>7、TabSpec和TabHost</h4>

<p>&#160; &#160; &#160; &#160;比较常用的控件，感觉手机QQ的整体布局就是这个，只不过tab放在底部而已。TabSpec相当于浏览器的分页，而TabHost就相当于分页的集合。TabSpec分页可以相当于一个独立的组件，也可以是一个布局，将每个分页装进TabHost里
Activity extends TabActivity
以前都是 继承android.app.Activity
这里为了获得Activity分页菜单，继承它，显然TabActivity和Activity有同个父类。</p>

<!--more-->


<p>创建分页菜单对象，将activity_main装进去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">tableHost</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getTabHost</span><span class="o">();</span>
</span><span class='line'><span class="n">LayoutInflater</span><span class="o">.</span><span class="na">from</span><span class="o">(</span><span class="k">this</span><span class="o">).</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">,</span><span class="n">tableHost</span><span class="o">.</span><span class="na">getTabContentView</span><span class="o">());</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过newTabSpec 来创建分页</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ts1</span> <span class="o">=</span> <span class="n">tableHost</span><span class="o">.</span><span class="na">newTabSpec</span><span class="o">(</span><span class="s">&quot;tab1&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>设置名称和背景图</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ts2</span><span class="o">.</span><span class="na">setIndicator</span><span class="o">(</span><span class="s">&quot;tab2&quot;</span><span class="o">,</span> <span class="n">getResources</span><span class="o">().</span><span class="na">getDrawable</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">bg</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>添加组件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ts2</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">et</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过addtab加进去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">tableHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">ts1</span><span class="o">);</span>
</span><span class='line'><span class="n">tableHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">ts2</span><span class="o">);</span>
</span><span class='line'><span class="n">tableHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">ts3</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>设置监听</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">tableHost</span><span class="o">.</span><span class="na">setOnTabChangedListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>arg0 表示传入的tab名称</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onTabChanged</span><span class="o">(</span><span class="n">String</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>　　<span class="k">if</span> <span class="o">(</span><span class="n">arg0</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;tab1&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>　　　　<span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;分页1&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>　　<span class="o">}</span> <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">arg0</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;tab2&quot;</span><span class="o">)){</span>
</span><span class='line'>　　　　<span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;分页2&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>　　<span class="o">}</span><span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">arg0</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;tab3&quot;</span><span class="o">)){</span>
</span><span class='line'>　　　　<span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;分页3&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>　　<span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>完整代码和运行效果如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">tabproject</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.TabActivity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.LayoutInflater</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.Menu</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.TabHost</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.TabHost.OnTabChangeListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.TabHost.TabSpec</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">TabActivity</span> <span class="kd">implements</span> <span class="n">OnTabChangeListener</span><span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">TabSpec</span> <span class="n">ts1</span><span class="o">,</span><span class="n">ts2</span><span class="o">,</span><span class="n">ts3</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">TabHost</span> <span class="n">tableHost</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">tableHost</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getTabHost</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">LayoutInflater</span><span class="o">.</span><span class="na">from</span><span class="o">(</span><span class="k">this</span><span class="o">).</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">,</span><span class="n">tableHost</span><span class="o">.</span><span class="na">getTabContentView</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ts1</span> <span class="o">=</span> <span class="n">tableHost</span><span class="o">.</span><span class="na">newTabSpec</span><span class="o">(</span><span class="s">&quot;tab1&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ts1</span><span class="o">.</span><span class="na">setIndicator</span><span class="o">(</span><span class="s">&quot;tab1&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ts1</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ts2</span> <span class="o">=</span> <span class="n">tableHost</span><span class="o">.</span><span class="na">newTabSpec</span><span class="o">(</span><span class="s">&quot;tab2&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ts2</span><span class="o">.</span><span class="na">setIndicator</span><span class="o">(</span><span class="s">&quot;tab2&quot;</span><span class="o">,</span> <span class="n">getResources</span><span class="o">().</span><span class="na">getDrawable</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">bg</span><span class="o">));</span>
</span><span class='line'>        <span class="n">ts2</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">et</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ts3</span> <span class="o">=</span> <span class="n">tableHost</span><span class="o">.</span><span class="na">newTabSpec</span><span class="o">(</span><span class="s">&quot;tab3&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ts3</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">layout</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ts3</span><span class="o">.</span><span class="na">setIndicator</span><span class="o">(</span><span class="s">&quot;tab3&quot;</span><span class="o">,</span> <span class="n">getResources</span><span class="o">().</span><span class="na">getDrawable</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">pg2</span><span class="o">));</span>
</span><span class='line'>        <span class="n">ts3</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">et</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">tableHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">ts1</span><span class="o">);</span>
</span><span class='line'>        <span class="n">tableHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">ts2</span><span class="o">);</span>
</span><span class='line'>        <span class="n">tableHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">ts3</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">tableHost</span><span class="o">.</span><span class="na">setOnTabChangedListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onCreateOptionsMenu</span><span class="o">(</span><span class="n">Menu</span> <span class="n">menu</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Inflate the menu; this adds items to the action bar if it is present.</span>
</span><span class='line'>        <span class="n">getMenuInflater</span><span class="o">().</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">menu</span><span class="o">.</span><span class="na">main</span><span class="o">,</span> <span class="n">menu</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onTabChanged</span><span class="o">(</span><span class="n">String</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">arg0</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;tab1&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;分页1&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">arg0</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;tab2&quot;</span><span class="o">)){</span>
</span><span class='line'>            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;分页2&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span><span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">arg0</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;tab3&quot;</span><span class="o">)){</span>
</span><span class='line'>            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;分页3&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/blog/602984/201402/122100189272562.png" alt="image" /></p>

<p>关于不同Tab页面的View间如何通信后面再讲。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记3--常用控件progressbar/seekbar]]></title>
    <link href="http://chendd.github.io/blog/2014/02/11/android_study_03_3/"/>
    <updated>2014-02-11T09:22:14+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/11/android_study_03_3</id>
    <content type="html"><![CDATA[<h2>常用控件</h2>

<h3>5、progressbar</h3>

<p>&#160; &#160; &#160; &#160;进度条，比较常用的组件，在某些操作的进度中的可视指示器，为用户呈现操作的进度，还它有一个次要的进度条，用来显示中间进度，如在流媒体播放的缓冲区的进度。一个进度条也可不确定其进度。在不确定模式下，进度条显示循环动画。一般有圆形和条形两种；</p>

<!--more-->


<p>默认进度条是圆形的
小圆型进度条：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>style="?android:attr/progressBarStyleSmall"</span></code></pre></td></tr></table></div></figure>


<p>大圆形进度条：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>style="?android:attr/progressBarStyleLarge"</span></code></pre></td></tr></table></div></figure>


<p>条形进度条：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>style="?android:attr/progressBarStyleHorizontal"</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>android:max="100" --最大值
</span><span class='line'>android:progress="50" --初始值
</span><span class='line'>android:secondaryProgress="60" --次进度条值</span></code></pre></td></tr></table></div></figure>


<p>常用方法：</p>

<ul>
<li>getMax()：返回这个进度条的范围的上限</li>
<li>getProgress()：返回进度</li>
<li>getSecondaryProgress()：返回次要进度</li>
<li>incrementProgressBy(int diff)：指定增加的进度</li>
<li>isIndeterminate()：指示进度条是否在不确定模式下</li>
<li>setVisibility(int v)：设置该进度条是否可视</li>
<li>onSizeChanged(int w, int h, int oldw, int oldh)：当进度值改变时引发此事件</li>
</ul>


<p>简单小例子：</p>

<p>新开个线程，让条形进度条从最小增到最大，再减到最小</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="kd">implements</span> <span class="n">Runnable</span><span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Thread</span> <span class="n">td</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">ProgressBar</span> <span class="n">pb</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">stateChange</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">pb</span> <span class="o">=</span> <span class="o">(</span><span class="n">ProgressBar</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">pd</span><span class="o">);</span>
</span><span class='line'>        <span class="n">td</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Thread</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">td</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onCreateOptionsMenu</span><span class="o">(</span><span class="n">Menu</span> <span class="n">menu</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Inflate the menu; this adds items to the action bar if it is present.</span>
</span><span class='line'>        <span class="n">getMenuInflater</span><span class="o">().</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">menu</span><span class="o">.</span><span class="na">main</span><span class="o">,</span> <span class="n">menu</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">current</span> <span class="o">=</span> <span class="n">pb</span><span class="o">.</span><span class="na">getProgress</span><span class="o">();</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="n">pb</span><span class="o">.</span><span class="na">getMax</span><span class="o">();</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">securrent</span> <span class="o">=</span> <span class="n">pb</span><span class="o">.</span><span class="na">getSecondaryProgress</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">stateChange</span> <span class="o">==</span> <span class="kc">false</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span><span class="o">(</span><span class="n">current</span> <span class="o">&gt;=</span> <span class="n">max</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">stateChange</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">pb</span><span class="o">.</span><span class="na">setProgress</span><span class="o">(</span><span class="n">current</span><span class="o">+</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">pb</span><span class="o">.</span><span class="na">setSecondaryProgress</span><span class="o">(</span><span class="n">current</span><span class="o">+</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span><span class="o">(</span><span class="n">current</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">stateChange</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">pb</span><span class="o">.</span><span class="na">setProgress</span><span class="o">(</span><span class="n">current</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">pb</span><span class="o">.</span><span class="na">setSecondaryProgress</span><span class="o">(</span><span class="n">current</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">td</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">50</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/blog/602984/201402/112122419579345.png" alt="image" /></p>

<h3>6、seekBar</h3>

<p>　　拖动条，见到的较多，如地图上，放大缩小，音乐播放时声音的放大缩小等</p>

<p>监听事件：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onStopTrackingTouch</span><span class="o">(</span><span class="n">SeekBar</span> <span class="n">seekBar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'><span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;拖动完成...&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onStartTrackingTouch</span><span class="o">(</span><span class="n">SeekBar</span> <span class="n">seekBar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'><span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;拖动中...&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onProgressChanged</span><span class="o">(</span><span class="n">SeekBar</span> <span class="n">seekBar</span><span class="o">,</span> <span class="kt">int</span> <span class="n">progress</span><span class="o">,</span>
</span><span class='line'><span class="kt">boolean</span> <span class="n">fromUser</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'><span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;当前拖动条值为:&quot;</span><span class="o">+</span><span class="n">progress</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/blog/602984/201402/112123019308018.png" alt="image" /></p>

<p>类似长型的进度条，只是可以手动拖到，也有</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">android:</span><span class="n">max</span><span class="o">=</span><span class="s">&quot;100&quot;</span> <span class="o">--</span><span class="n">最大值</span>
</span><span class='line'><span class="nl">android:</span><span class="n">progress</span><span class="o">=</span><span class="s">&quot;50&quot;</span> <span class="o">--</span><span class="n">初始值</span>
</span><span class='line'><span class="nl">android:</span><span class="n">secondaryProgress</span><span class="o">=</span><span class="s">&quot;60&quot;</span> <span class="o">--</span><span class="n">次进度条值</span>
</span></code></pre></td></tr></table></div></figure>


<p>关于滑块还有一种较常用的是RatingBar,星级滑块，一般用于评定等级。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/291420428758076.png" alt="image" /></p>

<p>用法和上面大同小异，不再多说。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记3--常用控件checkbox/radiobutton]]></title>
    <link href="http://chendd.github.io/blog/2014/02/10/android_study_03_2/"/>
    <updated>2014-02-10T09:22:14+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/10/android_study_03_2</id>
    <content type="html"><![CDATA[<h2>常用控件</h2>

<h3>3、checkbox</h3>

<p>&#160; &#160; &#160; &#160;复选框，确定是否勾选,点击一下勾选，点击第二下取消，当有一系列备选项时适合用checkbox控件，方便用户提交数据。</p>

<!--more-->


<p>贴上例子Activity的java代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">checkbox</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.Menu</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.CheckBox</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.CompoundButton</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.CompoundButton.OnCheckedChangeListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.TextView</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="kd">implements</span> <span class="n">OnCheckedChangeListener</span><span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">CheckBox</span> <span class="n">cb1</span><span class="o">,</span><span class="n">cb2</span><span class="o">,</span><span class="n">cb3</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tv</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">cb1</span> <span class="o">=</span> <span class="o">(</span><span class="n">CheckBox</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">cb1</span><span class="o">);</span>
</span><span class='line'>        <span class="n">cb2</span> <span class="o">=</span> <span class="o">(</span><span class="n">CheckBox</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">cb2</span><span class="o">);</span>
</span><span class='line'>        <span class="n">cb3</span> <span class="o">=</span> <span class="o">(</span><span class="n">CheckBox</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">cb3</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">cb1</span><span class="o">.</span><span class="na">setOnCheckedChangeListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>        <span class="n">cb2</span><span class="o">.</span><span class="na">setOnCheckedChangeListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>        <span class="n">cb3</span><span class="o">.</span><span class="na">setOnCheckedChangeListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">tv</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tv</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onCreateOptionsMenu</span><span class="o">(</span><span class="n">Menu</span> <span class="n">menu</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Inflate the menu; this adds items to the action bar if it is present.</span>
</span><span class='line'>        <span class="n">getMenuInflater</span><span class="o">().</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">menu</span><span class="o">.</span><span class="na">main</span><span class="o">,</span> <span class="n">menu</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCheckedChanged</span><span class="o">(</span><span class="n">CompoundButton</span> <span class="n">buttonView</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">isChecked</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="n">cb1</span> <span class="o">==</span> <span class="n">buttonView</span><span class="o">||</span><span class="n">cb2</span> <span class="o">==</span> <span class="n">buttonView</span><span class="o">||</span><span class="n">cb3</span> <span class="o">==</span> <span class="n">buttonView</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span><span class="o">(</span><span class="n">isChecked</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">showToast</span><span class="o">(</span><span class="n">buttonView</span><span class="o">.</span><span class="na">getText</span><span class="o">()+</span><span class="s">&quot;选中&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">showToast</span><span class="o">(</span><span class="n">buttonView</span><span class="o">.</span><span class="na">getText</span><span class="o">()+</span><span class="s">&quot;取消&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">showToast</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">str</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;用法同前面的button，不再赘述，代码新增
Toast.makeText(this, st, Toast.LENGTH_SHORT);</p>

<p>Toast译为土司，类似切片面包，用于弹出提示信息,Toast是Android中用来显示显示信息的一种机制，和Dialog不一样的是，Toast是没有焦点的，而且Toast显示的时间有限，过一定的时间就会自动消失，后面有机会再详细介绍Toast(这里有介绍：android学习日记21&ndash;消息提示之Toast和Notification)</p>

<p>效果如下：</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/102136522347792.png" alt="image" /></p>

<p>&ldquo;网球选中"就是Toast的弹出消息，爱好有很多种，可以同时选足球和网球。</p>

<h3>4、radiobutton</h3>

<p>&#160; &#160; &#160; &#160;radiobutton 与checkbox对应区别是rb是一组选择框，只能选择其中一个，而且radiobutton一般与RadioGroup一起用</p>

<p>而且rb一般是圆形的，checkbox是方形的；不同RadioGroup互不相干，一般有两个或两个以上的选项，并且有默认值。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">radiobutton</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.Menu</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.RadioButton</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.RadioGroup</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.TextView</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.RadioGroup.OnCheckedChangeListener</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="kd">implements</span> <span class="n">OnCheckedChangeListener</span><span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">RadioGroup</span> <span class="n">rg</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">RadioButton</span> <span class="n">rb1</span><span class="o">,</span><span class="n">rb2</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tv</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">rg</span> <span class="o">=</span> <span class="o">(</span><span class="n">RadioGroup</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">rg</span><span class="o">);</span>
</span><span class='line'>        <span class="n">rb1</span> <span class="o">=</span> <span class="o">(</span><span class="n">RadioButton</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">rb1</span><span class="o">);</span>
</span><span class='line'>        <span class="n">rb2</span> <span class="o">=</span> <span class="o">(</span><span class="n">RadioButton</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">rb2</span><span class="o">);</span>
</span><span class='line'>        <span class="n">tv</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tv</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">rg</span><span class="o">.</span><span class="na">setOnCheckedChangeListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onCreateOptionsMenu</span><span class="o">(</span><span class="n">Menu</span> <span class="n">menu</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Inflate the menu; this adds items to the action bar if it is present.</span>
</span><span class='line'>        <span class="n">getMenuInflater</span><span class="o">().</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">menu</span><span class="o">.</span><span class="na">main</span><span class="o">,</span> <span class="n">menu</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCheckedChanged</span><span class="o">(</span><span class="n">RadioGroup</span> <span class="n">group</span><span class="o">,</span> <span class="kt">int</span> <span class="n">checkedId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">group</span> <span class="o">==</span> <span class="n">rg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">rbstr</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">checkedId</span> <span class="o">==</span> <span class="n">rb1</span><span class="o">.</span><span class="na">getId</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">rbstr</span> <span class="o">=</span> <span class="n">rb1</span><span class="o">.</span><span class="na">getText</span><span class="o">()+</span><span class="s">&quot;选中&quot;</span><span class="o">;</span>
</span><span class='line'>                <span class="c1">//tv.setText(rbstr);</span>
</span><span class='line'>            <span class="o">}</span><span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">checkedId</span> <span class="o">==</span> <span class="n">rb2</span><span class="o">.</span><span class="na">getId</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">rbstr</span> <span class="o">=</span> <span class="n">rb2</span><span class="o">.</span><span class="na">getText</span><span class="o">()+</span><span class="s">&quot;选中&quot;</span><span class="o">;</span>
</span><span class='line'>                <span class="c1">//tv.setText(rbstr);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">showToast</span><span class="o">(</span><span class="n">rbstr</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">showToast</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">str</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果如下：</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/102137179913726.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;性别只能选男女中的一个(不考虑人妖哈！)。最好用单选框，选radiobutton。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记3--常用控件button/imagebutton]]></title>
    <link href="http://chendd.github.io/blog/2014/02/10/android_study_03_1/"/>
    <updated>2014-02-10T08:22:14+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/10/android_study_03_1</id>
    <content type="html"><![CDATA[<h2>常用控件</h2>

<p>&#160; &#160; &#160; &#160;控件是对数据和方法的封装。控件可以有自己的属性和方法。属性是控件数据的简单访问者。方法则是控件的一些简单而可见的功能。所有控件都是继承View类</p>

<p>&#160; &#160; &#160; &#160;介绍android原生提供几种常用的控件button/imagebutton、checkbox/radiobutton、progressbar/seekbar、tabSpec/tabHost、ListView、Dialog，主要为了掌握控件使用的一般规律。</p>

<!--more-->


<h3>1、button 按钮</h3>

<p>&#160; &#160; &#160; &#160;Button是各种UI中最常用的控件之一，用户可以通过触摸它来触发一系列事件，要知道一个没有点击事件的Button是没有任何意义的，</p>

<p>因为使用者的固定思维是见到它就想去点！</p>

<p>&#160; &#160; &#160; &#160;布局文件里button的xml声明:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Button</span>
</span><span class='line'>       <span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>       <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>       <span class="na">android:text=</span><span class="s">&quot;@string/btn_ok&quot;</span>
</span><span class='line'>       <span class="na">android:id=</span><span class="s">&quot;@+id/btn_ok&quot;</span><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>android:layout_width=&quot;wrap_content&quot; --自适应，据自己的值占据控件来决定大小
</span><span class='line'>android:layout_height=&quot;fill_parent&quot; --充满父控件，自动放大到与父控件一样的大小
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;其中每个组件的layout_width和layout_height属性是必须的
&#160; &#160; &#160; &#160;一般也可以是具体的大小，即：数字+单位，如android:layout_height =&ldquo;30px"，由于移动设备屏幕尺寸太多了，不推荐使用强制设定大小，通用性不好。</p>

<p>&#160; &#160; &#160; &#160;@+表示声明，新增一个id，会自动在R.java文件里创建。如 android:id=&ldquo;@+id/btn_ok&rdquo;,@表示引用 如</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>android:text=&quot;@string/hello_world&quot;
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;引用string.xml的名为hello_world的值。xml自定义值可以这样:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">&quot;hello_world&quot;</span><span class="nt">&gt;</span>Hello world!<span class="nt">&lt;/string&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;有些人会问直接 android:text=&ldquo;Hello world!"不是更方便，为什么还要引用xml文件?其实android这样设计为了国际化和编写弹性的应用程序，</p>

<p>&#160; &#160; &#160; &#160;xml解析时会讲到(了解更多XML:android学习日记23&ndash;Android XML解析)，不多做解释了。布局组件等一般设置格式：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;布局</span><span class="err">/组件名称</span>
</span><span class='line'>  <span class="na">android:属性=</span><span class="s">&quot;属性类型&quot;</span>
</span><span class='line'><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;如底下的xml：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;RelativeLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:paddingBottom=</span><span class="s">&quot;@dimen/activity_vertical_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingLeft=</span><span class="s">&quot;@dimen/activity_horizontal_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingRight=</span><span class="s">&quot;@dimen/activity_horizontal_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingTop=</span><span class="s">&quot;@dimen/activity_vertical_margin&quot;</span>
</span><span class='line'>    <span class="na">tools:context=</span><span class="s">&quot;.MainActivity&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- 线性布局  --&gt;</span>
</span><span class='line'>     <span class="nt">&lt;LinearLayout</span>
</span><span class='line'>     <span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>     <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>     <span class="na">android:orientation=</span><span class="s">&quot;horizontal&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;TextView</span>
</span><span class='line'>            <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:text=</span><span class="s">&quot;@string/hello_world&quot;</span>
</span><span class='line'>            <span class="na">android:id=</span><span class="s">&quot;@+id/tv&quot;</span>
</span><span class='line'>            <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;Button</span>
</span><span class='line'>            <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:text=</span><span class="s">&quot;@string/btn_ok&quot;</span>
</span><span class='line'>            <span class="na">android:id=</span><span class="s">&quot;@+id/btn_ok&quot;</span>
</span><span class='line'>            <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c">&lt;!-- wrap_content:自适应 --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Button</span>
</span><span class='line'>            <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:text=</span><span class="s">&quot;@string/btn_cancle&quot;</span>
</span><span class='line'>            <span class="na">android:id=</span><span class="s">&quot;@+id/btn_cancle&quot;</span>
</span><span class='line'>            <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;ImageButton</span>
</span><span class='line'>            <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:background=</span><span class="s">&quot;@drawable/blank&quot;</span>
</span><span class='line'>            <span class="na">android:id=</span><span class="s">&quot;@+id/btn_img&quot;</span>
</span><span class='line'>            <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;/LinearLayout&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/RelativeLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;几乎每个组件都是上面的声明方式。</p>

<p>&#160; &#160; &#160; &#160;java代码里定义btn_ok = (Button)findViewById(R.id.btn_ok);其他组件也可以通过类似的方法获得，前提是在布局文件里有指定id，获得的类型都是Object，记得类型转化添加监听器 可以implements OnClickListener 重写 OnClick方法来自定义按钮按下触发事件。也可以通过内部类实现:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">btn_ok</span><span class="o">.</span><span class="na">setOnClickListincer</span><span class="o">(</span><span class="k">new</span> <span class="nf">OnclickListner</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="nd">@override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">OnClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>           <span class="o">...</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;具体代码在第二点imagebutton里贴出代码。</p>

<h3>2、imagebutton</h3>

<p>&#160; &#160; &#160; &#160;可添加背景图片，其他同Button。指定背景图片为res/drawable 下名为blank的图片:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>android:background=&quot;@drawable/blank&quot;
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;注意：android res包底下的资源文件名都不能是中文或大写字母开头的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">event</span><span class="o">.</span><span class="na">getAction</span><span class="o">()==</span><span class="n">MotionEvent</span><span class="o">.</span><span class="na">ACTION_DOWN</span> <span class="c1">//监听按钮按下事件</span>
</span><span class='line'><span class="n">event</span><span class="o">.</span><span class="na">getAction</span><span class="o">()==</span><span class="n">MotionEvent</span><span class="o">.</span><span class="na">ACTION_UP</span> <span class="c1">//监听按钮弹起事件</span>
</span><span class='line'><span class="n">getResources</span><span class="o">().</span><span class="na">getDrawable</span> <span class="c1">//获得资源图片的方法</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">button</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.Menu</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.MotionEvent</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View.OnClickListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View.OnTouchListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Button</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.ImageButton</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.TextView</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span><span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tv</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Button</span> <span class="n">btn_ok</span><span class="o">,</span><span class="n">btn_cancle</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">ImageButton</span> <span class="n">btn_img</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">tv</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tv</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">btn_ok</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn_ok</span><span class="o">);</span>
</span><span class='line'>        <span class="n">btn_cancle</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn_cancle</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">btn_img</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageButton</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn_img</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 内部类 实现 监听</span>
</span><span class='line'>        <span class="n">btn_img</span><span class="o">.</span><span class="na">setOnTouchListener</span><span class="o">(</span><span class="k">new</span> <span class="nf">OnTouchListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onTouch</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">,</span> <span class="n">MotionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>                <span class="k">if</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getAction</span><span class="o">()==</span><span class="n">MotionEvent</span><span class="o">.</span><span class="na">ACTION_DOWN</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">btn_img</span><span class="o">.</span><span class="na">setBackgroundDrawable</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getDrawable</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">face1</span><span class="o">));</span>
</span><span class='line'>                <span class="o">}</span><span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getAction</span><span class="o">()==</span><span class="n">MotionEvent</span><span class="o">.</span><span class="na">ACTION_UP</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">btn_img</span><span class="o">.</span><span class="na">setBackgroundDrawable</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getDrawable</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">blank</span><span class="o">));</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 也可以 通过implements OnClickListener 实现监听</span>
</span><span class='line'>        <span class="n">btn_ok</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="nf">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>                <span class="k">if</span><span class="o">(</span><span class="n">v</span> <span class="o">==</span> <span class="n">btn_ok</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;触发确定按钮事件&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 内部类 实现监听器</span>
</span><span class='line'>        <span class="n">btn_cancle</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="nf">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>                <span class="k">if</span><span class="o">(</span><span class="n">v</span> <span class="o">==</span> <span class="n">btn_cancle</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;触发取消按钮事件&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onCreateOptionsMenu</span><span class="o">(</span><span class="n">Menu</span> <span class="n">menu</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Inflate the menu; this adds items to the action bar if it is present.</span>
</span><span class='line'>        <span class="n">getMenuInflater</span><span class="o">().</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">menu</span><span class="o">.</span><span class="na">main</span><span class="o">,</span> <span class="n">menu</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;代码运行效果：</p>

<p>点击'确定'按钮，左边textview 显示'触发确定按钮'</p>

<p>点击 imagebutton 显示笑脸，放开即还原。</p>

<p><img src="http://images.cnitblog.com/blog/602984/201402/102125438269722.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;顺便说点监听器的题外话：</p>

<ul>
<li><p>监听器是个抽象类，它包含了一个事件触发时系统会去调用的函数；</p></li>
<li><p>在子类中，根据您项目的需要重写这个函数；</p></li>
<li><p>派生后的监听器需要绑定到按钮上，就像一个耳机可以发出声音，但您不去戴它，您是听不到它发出的声音的。一般的情况是这个按钮可能需要这个监听器，而另外一个按钮需要另外一个监听器，每个监听器各司其职，但功能相似时，也可以多个按钮共同绑定一个监听器；</p></li>
<li><p>各种控件，都有常用的事件，如点击按钮，拖动一个滚动条，切换一个ListView的选项等等，他的绑定监听器的函数命名规则是setOnXXListener</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记2--Activity简介]]></title>
    <link href="http://chendd.github.io/blog/2014/02/09/android_study_02/"/>
    <updated>2014-02-09T21:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/09/android_study_02</id>
    <content type="html"><![CDATA[<h2>一、Activity活动</h2>

<p>&#160; &#160; &#160; &#160;学习Android，第一个都会接触Activity滴，Activity表示一个用户界面，是Android应用程序的入口，可以同时有多个界面，但只会显示栈顶的界面。</p>

<p>&#160; &#160; &#160; &#160;Activity是Android的重要组成部分，一个程序包括多个Activity，新建项目都会有个程序启动时就调用的MainActivity。新定义Activity需在AndroidManifest配置。</p>

<!--more-->


<p>&#160; &#160; &#160; &#160;如下是最简单的配置方式：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;activity</span>
</span><span class='line'>    <span class="na">android:name=</span><span class="s">&quot;.OtherActivity&quot;</span>
</span><span class='line'>    <span class="na">android:label=</span><span class="s">&quot;other&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/activity&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>二、Activity的生命周期</h2>

<p>&#160; &#160; &#160; &#160;Activity的生命周期交由系统管理，每个Activity都是平等的，Activity拥有四种基本状态</p>

<ul>
<li><p>Active/Running:一个新的Activity启动入栈后，它在屏幕的最前端，处于栈顶。此时它处于可见和可交互状态；</p></li>
<li><p>Pause:当Activity被一个透明的或Dialog样式的Activity覆盖时，它虽然仍与窗口管理器联系，仍然可见，但是此时它是失去焦点，不可交互的；</p></li>
<li><p>Stop:当Activity被另一个Activity覆盖时，完全不可见，并且不可交互，此时处于stop状态；</p></li>
<li><p>Kill:被系统进程杀死或者回收的状态，由于系统资源有限，越是处于栈的底层，越容易被回收；</p></li>
</ul>


<p><img src="http://images.cnitblog.com/blog/602984/201402/092143142323989.jpg" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;上面是google官方的Activity生命周期示意图，看图比较好理解和记忆Activity生命周期。结合生命周期状态来讲讲生命周期相关方法</p>

<ul>
<li><p>onCreate:Activity被启动的调用的第一个方法，作为应用程序的入口点，一般做些 数据初始化和加载用户界面的工作；</p></li>
<li><p>onStart:在onCreate之后被调用，或者一个Activity从Stop变为Active状态；</p></li>
<li><p>onResume:从Pause状态被切换为Active状态时被调用；</p></li>
<li><p>onStop:从Active状态被切换为Stop状态时被调用，一般在这里保存Activity的状态信息；</p></li>
<li><p>onDestroy:在Active被结束时调用，一般做些释放资源，清除内存等工作。</p></li>
</ul>


<p>&#160; &#160; &#160; &#160;此外还有一些不常用的方法如"重新启动 onRestart",&ldquo;暂停 onPause&rdquo;</p>

<p>&#160; &#160; &#160; &#160;我们可以新建个Activity，Android.util的 Log类可以实现Android输出Log这一操作，</p>

<p>&#160; &#160; &#160; &#160;该类提供了若干静态方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">String</span> <span class="n">tag</span><span class="o">,</span> <span class="n">String</span> <span class="n">msg</span><span class="o">);</span>
</span><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">String</span> <span class="n">tag</span><span class="o">,</span> <span class="n">String</span> <span class="n">msg</span><span class="o">);</span>
</span><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">String</span> <span class="n">tag</span><span class="o">,</span> <span class="n">String</span> <span class="n">msg</span><span class="o">);</span>
</span><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">w</span><span class="o">(</span><span class="n">String</span> <span class="n">tag</span><span class="o">,</span> <span class="n">String</span> <span class="n">msg</span><span class="o">);</span>
</span><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">String</span> <span class="n">tag</span><span class="o">,</span> <span class="n">String</span> <span class="n">msg</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;分别对应 Verbose, Debug, Info, Warning,Error.</p>

<p>tag是一个标识,可以是任意字符串,通常可以使用类名+方法名, 主要是用来在查看日志时提供一个筛选条件。
如Log.v(tag, msg)用来打印日志查看不同状态间的切换或不同方法的执行情况。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>    <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;MainActivity&quot;</span><span class="o">,</span> <span class="s">&quot;onCreate&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onStart</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">onStart</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;MainActivity&quot;</span><span class="o">,</span> <span class="s">&quot;onStart&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onStop</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">onStop</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;MainActivity&quot;</span><span class="o">,</span> <span class="s">&quot;onStop&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onResume</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">onResume</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;MainActivity&quot;</span><span class="o">,</span> <span class="s">&quot;onResume&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPause</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">onPause</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;MainActivity&quot;</span><span class="o">,</span> <span class="s">&quot;onPause&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onDestroy</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">onDestroy</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;MainActivity&quot;</span><span class="o">,</span> <span class="s">&quot;onDestroy&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>三、Activity栈</h2>

<p>&#160; &#160; &#160; &#160;Android 是通过一种 Activity 栈的方式来管理 Activity 的，一个 Activity 的实例的状态决定它在栈中的位置。处于前台的 Activity 总是在栈的顶端，当前台的 Activity 因为异常或其它原因被销毁时，处于栈第二层的 Activity 将被激活，上浮到栈顶。当新的 Activity 启动入栈时，原 Activity 会被压入到栈的第二层。一个 Activity 在栈中的位置变化反映了它在不同状态间的转换。</p>

<p>&#160; &#160; &#160; &#160;除了最顶层即处在 Active 状态的 Activity 外，其它的 Activity 都有可能在系统内存不足时被回收，一个 Activity 的实例越是处在栈的底层，它被系统回收的可能性越大。系统负责管理栈中 Activity 的实例，它根据 Activity 所处的状态来改变其在栈中的位置。</p>

<h2>四、Activity的加载模式</h2>

<p>&#160; &#160; &#160; &#160;Activity有四种加载模式(一直忽略这个细节)，使用适合的加载模式可以避免产生大量的重复的Activity，从而优化性能，减少系统资源消耗。具体为：</p>

<ul>
<li><p>standard: 标准模式(默认的)，一调用startActivity()方法就会产生一个新的实例。</p></li>
<li><p>singleTop: 检查是否已经存在了一个实例位于Activity栈的顶部，如果存在就不产生新的实例，反之则调用Activity的newInstance()方法产生一个新实例。</p></li>
<li><p>singleTask: 在一个新的Task(栈)中产生这个实例，以后每次调用都会使用此实例，而避免产生新的实例。</p></li>
<li><p>singleInstance: 这个基本上跟singleTask一样，只是有一点不同，那就是在这个模式下的Activity实例所处(新建的)Task中，只能有这一个Activity实例，而不能有其他的实例。</p></li>
</ul>


<p>　　启动模式可以Android清单文件AndroidManifest.xml中，通过<activity>中的launchMode属性进行设置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">&quot;MainActivity&quot;</span> <span class="na">android:launchMode=</span><span class="s">&quot;singleTop&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;intent-filter&gt;</span>
</span><span class='line'>        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">&quot;android.intent.category.DEFAULT&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/intent-filter&gt;</span>
</span><span class='line'><span class="nt">&lt;/activity&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>　　也可以在代码中通过一些标志进行设置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Intent</span><span class="o">(</span><span class="k">this</span><span class="o">,</span><span class="n">xxx</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="c1">//如果activity在task存在，拿到最顶端,不会启动新的Activity</span>
</span><span class='line'><span class="n">intent</span><span class="o">.</span><span class="na">addFlags</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_ACTIVITY_BROUGHT_TO_FRONT</span><span class="o">);</span>
</span><span class='line'><span class="c1">//如果activity在task存在，将Activity之上的所有Activity结束掉</span>
</span><span class='line'><span class="n">intent</span><span class="o">.</span><span class="na">addFlags</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_ACTIVITY_CLEAR_TOP</span><span class="o">);</span>
</span><span class='line'><span class="c1">//默认的跳转类型,将Activity放到一个新的Task中</span>
</span><span class='line'><span class="n">intent</span><span class="o">.</span><span class="na">addFlags</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_ACTIVITY_NEW_TASK</span><span class="o">);</span>
</span><span class='line'><span class="c1">//如果Activity已经运行到了Task，再次跳转不会在运行这个Activity</span>
</span><span class='line'><span class="n">intent</span><span class="o">.</span><span class="na">addFlags</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_ACTIVITY_SINGLE_TOP</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>五、Activity间的通信</h2>

<p>&#160; &#160; &#160; &#160;Activity.startActivity()方法可以根据传入的参数启动另外一个 Activity：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//Intent可以在不同的应用程序的Activity发送数据</span>
</span><span class='line'><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;testIntent&quot;</span><span class="o">,</span> <span class="s">&quot;Robin&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">intent</span><span class="o">.</span><span class="na">setClass</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">OtherActivity</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="c1">//从哪里跳到哪里</span>
</span><span class='line'><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">.</span><span class="na">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;另一Activity里再接收信息(新的Activity如第一点说的要在AndroidManifest配置)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Intent</span> <span class="n">intent</span><span class="o">=</span><span class="n">getIntent</span><span class="o">();</span>
</span><span class='line'><span class="n">String</span> <span class="n">value</span><span class="o">=</span><span class="n">intent</span><span class="o">.</span><span class="na">getStringExtra</span><span class="o">(</span><span class="s">&quot;testIntent&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>六、其他细节</h2>

<h5>&#160; &#160; &#160; &#160;back和home 按键对Activity作用的区别？</h5>

<p>&#160; &#160; &#160; &#160;当你一按下手机的back键的时候，系统会默认调用程序栈中最上层Activity的Destroy()方法来销毁当前Activity,当此Activity又被其它Activity启动起来的时候,会重新调用OnCreate()方法进行创建,当栈中所有Activity都弹出结束后,应用也就随之结束了。按下手机的Home键的时候,系统会默认调用程序栈中最上层Activity的stop()方法,然后整个应用程序都会被隐藏起来,当你再次点击手机桌面上应用程序图标时,系统会调用最上层Activity的OnResume()方法,此时不会重新打开程序,而是直接进入,会直接显示程序栈中最上层的Activity。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记1--综述]]></title>
    <link href="http://chendd.github.io/blog/2014/02/09/android_study_01/"/>
    <updated>2014-02-09T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/09/android_study_01</id>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;写点关于Android的知识，希望温故而知新吧！</p>

<h2>一、总体框架</h2>

<p>&#160; &#160; &#160; &#160;先上一张google提供官方的Android框架图：</p>

<!--more-->


<p>  <img src="http://images.cnitblog.com/blog/602984/201402/252217302555830.jpg" alt="image" /></p>

<p>　　Android系统架构由5部分组成，分别是：Linux Kernel、Android Runtime、Libraries、Application Framework、Applications(E文不好就不翻译了，其实这也是简单的计算机E文啦)下面分别讲述每部分的主要作用：</p>

<h3>1、Linux Kernel</h3>

<p>&#160; &#160; &#160; &#160;Android基于Linux提供核心系统服务，例如：内存管理、进程管理、网络堆栈、驱动模型。Linux Kernel也作为硬件和软件之间的抽象层，它隐藏具体硬件细节而为上层提供统一的服务。如果你只是做应用开发，就不需要深入了解Linux Kernel层。</p>

<h3>2、Android Runtime</h3>

<p>&#160; &#160; &#160; &#160;Android 包含一个核心库的集合，提供大部分在Java编程语言核心类库中可用的功能。每一个Android应用程序是Dalvik虚拟机中的实例，运行在他们自己 的进程中。Dalvik虚拟机设计成，在一个设备可以高效地运行多个虚拟机。Dalvik虚拟机可执行文件格式是.dex，dex格式是专为Dalvik 设计的一种压缩格式，适合内存和处理器速度有限的系统。大多数虚拟机包括JVM都是基于栈的，而Dalvik虚拟机则是基于寄存器的。 两种架构各有优劣，一般而言，基于栈的机器需要更多指令，而基于寄存器的机器指令更大。dx 是一套工具，可以將 Java .class 转换成 .dex 格式。一个dex文件通常会有多个.class。由于dex有時必须进行最佳化，会使文件大小增加1-4倍，以ODEX结尾。Dalvik虚拟机依赖于Linux 内核提供基本功能，如线程和底层内存管理。</p>

<h3>3、Libraries</h3>

<p>&#160; &#160; &#160; &#160;Android包含一个C/C++库的集合，供Android系统的各个组件使用。这些功能通过Android的应用程序框架（application framework）暴露给开发者。下面列出一些核心库：</p>

<ul>
<li>系统C库——标准C系统库（libc）的BSD衍生，调整为基于嵌入式Linux设备</li>
<li>媒体库——基于PacketVideo的OpenCORE。这些库支持播放和录制许多流行的音频和视频格式，以及静态图像文件，包括MPEG4、 H.264、 MP3、 AAC、 AMR、JPG、 PNG</li>
<li>界面管理——管理访问显示子系统和无缝组合多个应用程序的二维和三维图形层</li>
<li>LibWebCore——新式的Web浏览器引擎,驱动Android 浏览器和内嵌的web视图</li>
<li>SGL——基本的2D图形引擎</li>
<li>3D库——基于OpenGL ES 1.0 APIs(application programe interfaces 应用程序接口)的实现。库使用硬件3D加速或包含高度优化的3D软件光栅</li>
<li>FreeType ——位图和矢量字体渲染</li>
<li>SQLite ——所有应用程序都可以使用的强大而轻量级的关系数据库引擎

<h3>4、Application Framework</h3></li>
</ul>


<p>&#160; &#160; &#160; &#160;通过提供开放的开发平台，Android使开发者能够编制极其丰富和新颖的应用程序。开发者可以自由地利用设备硬件优势、访问位置信息、运行后台服务、设置闹钟、向状态栏添加通知等等，很多很多。开发者可以完全使用核心应用程序所使用的框架APIs。应用程序的体系结构旨在简化组件的重用，任何应用程序都能发布他的功能且任何其他应用程序可以使用这些功能（需要服从框架执行的安全限制）。这一机制允许用户替换组件。</p>

<p>&#160; &#160; &#160; &#160;所有的应用程序其实是一组服务和系统，包括：</p>

<ul>
<li>视图（View）——丰富的、可扩展的视图集合，可用于构建一个应用程序。包括包括列表、网格、文本框、按钮，甚至是内嵌的网页浏览器</li>
<li>内容提供者（Content Providers）——使应用程序能访问其他应用程序（如通讯录）的数据，或共享自己的数据</li>
<li>资源管理器（Resource Manager）——提供访问非代码资源，如本地化字符串、图形和布局文件</li>
<li>通知管理器（Notification Manager）——使所有的应用程序能够在状态栏显示自定义警告</li>
<li>活动管理器（Activity Manager）——管理应用程序生命周期,提供通用的导航回退功能
5、Applications：Android装配一个核心应用程序集合，包括电子邮件客户端、SMS程序、日历、地图、浏览器、联系人和其他设置。所有应用程序都是用Java编程语言写的。</li>
</ul>


<h2>二、开发环境简介</h2>

<h5>1、android sdk ：software development kit 软件开发包</h5>

<h5>2、ndk ：native 的dk,类似sdk 方便 C/C++ 人员编写,实现了JAVA+C的android开发</h5>

<h5>3、搭载环境需要：jdk、eclipse、android sdk、adt。</h5>

<h5>4、adt：谷歌研发的插件、Android Development Tools，集成在eclipse里才能进行android开发</h5>

<p>&#160; &#160; &#160; &#160;网上早期教程 android开发环境要自己搭载，比较麻烦，其实直接去谷歌官网下载最新sdk，</p>

<p>里面的eclipse就可以直接进行开发，因为eclipse、sdk、adt三者已经集成在一起了。当然jdk还是要自己装的。</p>

<h2>三、android project 项目结构</h2>

<p><img src="http://images.cnitblog.com/blog/602984/201402/092137176708825.png" alt="image" /></p>

<p>主要文件夹或文件功能：</p>

<h5>1、src 存放项目源代码</h5>

<h5>2、gen 目录下存放 R.java 代码</h5>

<h5>3、R.java 定义了一些常量，这些常量是对资源文件的索引，以便我们引用这些资源文件，对应res资源文件夹下 drawable、vaule、layout等基于xml的资源文件并且 R.java 是只读的，不让更改，资源文件变化会自动刷新，方便手机内存管理</h5>

<h5>4、android.jdk 是用来指向android 应用程序开发的所有api库</h5>

<h5>5、assert 表示引用外部的资源，不会在 R.java 生成索引</h5>

<h5>6、res资源文件夹下 drawable、vaule、layout分别存放 图片、字符串和布局文件，资源名称不能使用大写英文字母</h5>

<h5>7、bin文件夹存放编译后的文件，包括java编译后的.class文件、class文件被转换成针对Dalvik虚拟机优化的dex文件</h5>

<h5>8、AndroidManifest 当前项目的配置文件，xml格式，包含 编码格式、应用的icon、程序的版本号以及该程序使用到的服务如新添加个Activity，需要在这里配置，在Eclipse中可以通过Manifest Editor方便编辑（右键打开）</h5>

<p>&#160; &#160; &#160; &#160;这些文件最终会被编译成一个.apk文件即Android应用程序可执行文件Android package file, .apk文件可以安装在模拟设备或者真机上。</p>

<h2>四、配置文件AndroidManifest详解</h2>

<p><img src="http://images.cnitblog.com/blog/602984/201402/252240080928354.jpg" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;上图是androidManifest语法层次，总共分为5层：</p>

<ul>
<li>第一层：manifest，定义软件的属性，如包路径、程序版本</li>
<li>第二层：application，定义应用程序的属性和信息，如指定应用层的图标和主题，sd卡读写权限也是在这里配置，用 uses-permission</li>
<li>第三层：功能组件层，如 Activity活动，Services服务，BroadcastReciver广播接收，Provider内容提供者四大组件</li>
<li>第四层：定义该应用接收什么样的Intent(意图)请求的intent-filter</li>
<li>第五层：action意图动作的类型，category意图的属性，data意图封装的数据</li>
</ul>


<h2>五、总结</h2>

<p>&#160; &#160; &#160; &#160;今天只是做个初步的概述，记录些理论知识，比较枯燥，后面内容会深入研究和应用，fighting！！！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记0--开发需要掌握的技能]]></title>
    <link href="http://chendd.github.io/blog/2014/02/06/android_study_00/"/>
    <updated>2014-02-06T09:22:14+08:00</updated>
    <id>http://chendd.github.io/blog/2014/02/06/android_study_00</id>
    <content type="html"><![CDATA[<h2>一、开发android，我们需要哪些技能基础</h2>

<p>&#160; &#160; &#160; &#160;1、Java基础知识 2、Linux基础知识 3、数据库基础知识 4、网络协议 5、Android基础知识 6、服务器端开发知识</p>

<!--more-->


<h3>1、Java基础知识</h3>

<p>&#160; &#160; &#160; &#160;很多朋友一上手就开始学习Android，似乎太着急了一些。Android应用程序开发是以Java语言为基础的，所以没有扎实的Java基础知识，只是机械的照抄别人的代码，是没有任何意义的。万丈高楼平地而起，Java就是筑起高楼的每一块砖头。那么Java学到什么程度才算是过关呢？我个人认为至少要掌握以下两个方面的内容：</p>

<ul>
<li>Java基础语法：具体的知识点列表可以在这里查看：<a href="http://blog.sina.com.cn/s/blog_4ba5b45e0102e0n1.html">《Java知识点列表》</a>。这部分内容没有讨价还价的余地，必须烂熟于胸。至于具体的学习方法，可以看书或者是看视频，但是关键是要多加练习，无论是书上的练习还是视频里面的练习，都需要仔仔细细的完成；</li>
<li>设计模式：由于在Android系统的框架层当中，使用了大量的设计模式，如果没有这个方面的知识，对于Android的理解就会大打折扣。设计模式的种类非常之多，一个一个的全部掌握，是不现实的，必须首先掌握面向对象的基础设计原则，有了这些基础原则的支持，就可以举一反三。这部分内容可以在《Effective Java》和《Agile.Software.Development：Principles,Patterns.and.Practices》这两本书中找到。</li>
</ul>


<h3>2、Linux基础知识</h3>

<p>&#160; &#160; &#160; &#160;大家都知道，Android系统的基础是Linux操作系统。在开发过程当中，我们也需要使用到一些Linux命令。所以说一些Linux的基础知识是必须的（话说现在的程序员，不懂Linux都不好意思跟人家打招呼），推荐大家看看《鸟哥的私房菜》这本书，写的相当不错；</p>

<h3>3、数据库基础知识</h3>

<p>&#160; &#160; &#160; &#160;这个比较简单，就是一个增删改查的数据库操作，可以看一下这本书：《SQL编程练习与解答》</p>

<h3>4、网络协议</h3>

<p>&#160; &#160; &#160; &#160;至少需要学习两种基础的协议，HTTP协议与Socket协议；</p>

<h3>5、Android基础知识</h3>

<p>&#160; &#160; &#160; &#160;有了以上的铺垫，再来看Android，是不是觉得轻松了很多呢？至于基础知识的学习顺序，最好的方法就是按照Android SDK帮助文档当中的Dev Guide里面的顺序。Android应该掌握的具体知识点包括：</p>

<ul>
<li>画面(GUI)，全面了解画面的生命周期，以及所有组件的创建和事件(Event)管理。</li>
<li>数据交换(Data Exchange)，数据交换有不同的画面(Activity)间的，以及画面和Service间的，Service和Service间的，画面和系统事件间的。</li>
<li>数据存储(Data Persistent)，文件操作和数据库操作。</li>
<li>数据解析(Data Parser)，包括XML，JSON和Adobe的REST。</li>
<li>消息处理(Message Handle)，消息处理创建和控制。</li>
<li>服务(Service)，一些公共的后台处理，都可以做成相应的服务(Service)。</li>
<li>中断处理(Alarm和Schedule)，许多定点的中断处理都需要用Alarm和Schedule。</li>
<li>通讯处理(Data Transmission)，至少要会用HTTP和Web Service和服务器交换数据。</li>
<li>系统事件(System Event)，会捕获相应的系统事件，来控制设备。</li>
<li>对其他应用的调用。如声像控制，拨打电话，发邮件等</li>
</ul>


<h3>6、服务器端开发知识</h3>

<p>&#160; &#160; &#160; &#160;由于很多Android应用程序都需要服务器端的支持，所以掌握一些服务器端开发知识还是非常有必要的。至于选择哪一种服务器端知识进行学习，就比较麻烦了，因为技术的种类实在是太多了：</p>

<ul>
<li>Java EE：就是上面邮件当中所提到的SSH—Struts+Spring+Hibernate。这种技术的优点的功能完整、强大，已经使用了很多年，而且既然大家已经非常熟悉Java了，那么学习SSH看起来也顺理成章。但是使用这种技术开发服务器端程序，非常麻烦。即使是一些简单的功能，也可能需要大量的代码和配置文件来实现；</li>
<li>PHP：简单易学，开发快速。但是我们需要多学一种语言，是否得不偿失，就要大家自己判断了；</li>
<li>.NET:这项技术的特点和Java EE差不多，但是要想掌握.NET，则需要掌握c#，也是个麻烦的事情；</li>
<li>ruby on rails：这是我个人最喜欢的服务器端技术，简洁，优雅，寥寥几行代码，就可以实现很复杂的功能，但是这需要Ruby语言知识作为基础；
至于选择哪一种知识，就看大家自己的判断了，毕竟每个人想法不一样，爱好也不相同。</li>
</ul>


<h2>二、怎样去获得这些技能基础</h2>

<ul>
<li>看书，这确实是一个不错的选择。如果你想从零开始学习Java、Linux、数据库、网络协议、android基础知识……没错这些你都需要看书，看很多书（这是一句废话，跳过好了）。但是！如果把获取这些技能基础量化为100%的话，那么看书这个途径只能为你提供15%的进步。</li>
<li>看视频，这也是许多自学android开发的新手必经之路，毕竟看书只有你一个人的思维在活跃，看视频至少是两个人的思维在碰撞，你能发现你与别人的不同，如果你有心，你就能进步更多。基础知识不用我担心太多，至少想学android的，找基础知识的资料还是没有问题的。在此你也可以试着了解一些android的基础视频。也可以加入一下android的QQ群，去初步了解一下。感受一下氛围。这个我个人觉得很有意义。</li>
<li>敲代码，不为了其它的什么，就为了你能够熟练的掌握android开发工具，你是不是应该多话一点心思在上面呢？他的重要性不比“看书+看视频”的总和小，也许我就这样轻描淡写地说过去了，但是你最好不要轻描淡写地看过去，不然“返工重做”是很让你不舒服的。
思考，没错，就是“想”。想你怎么把这三块儿合在一块儿，让自己的学习效率更高；想你在学习中遇到哪些障碍，最后是怎么解决的，这很重要！</li>
</ul>


<p>&#160; &#160; &#160; &#160;当然这些只是针对Android通用应用的开发，如果做多媒体、游戏开发，则还学要自己了解其他相关知识。这篇是从其他地方转拼凑来的，写得不错，适合我等android初学者了解自己的不足和学习的方向！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress写博客步骤]]></title>
    <link href="http://chendd.github.io/blog/2012/07/26/build_octopress_in_window/"/>
    <updated>2012-07-26T18:21:11+08:00</updated>
    <id>http://chendd.github.io/blog/2012/07/26/build_octopress_in_window</id>
    <content type="html"><![CDATA[<p>使用Octopress写博客大致有一下几个步骤：</p>

<ol>
<li><p>执行rake new_post[&lsquo;title&rsquo;]来生成一个博文；</p></li>
<li><p>找对生成的markdown文件，编辑内容，当然是使用markdown语法来编辑；</p></li>
</ol>


<!--more-->


<ol>
<li><p>执行rake generate来生成文章；</p></li>
<li><p>执行rake preview在本地预览；</p></li>
<li><p>执行rake deploy发布到Github中。</p></li>
</ol>


<p>主要难点在Octopress环境的搭建，可以参考<a href="http://blog.csdn.net/u011771755/article/details/48026253">这篇文章</a>，反正遇到问题一路Google解决吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown在Octopress的常见使用]]></title>
    <link href="http://chendd.github.io/blog/2012/07/25/use_markdown_in_octopress/"/>
    <updated>2012-07-25T18:21:11+08:00</updated>
    <id>http://chendd.github.io/blog/2012/07/25/use_markdown_in_octopress</id>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;Markdown语法由于其简单，易读和清晰的脉络结构的特点，被许多网站采用，比如Github，Google Code，StackOverflow，它是一个很好的文档语言。Octopress搭建的网站使用Markdown作为源文件语言，所以我们可以用Markdown语法来编写博客，抛弃传统博客网站的富文本编辑框。</p>

<!--more-->


<p>1、#表示标题，1~6个#相当html里的标签h1~h6</p>

<pre><code>#一级标题
</code></pre>

<h1>一级标题</h1>

<pre><code>###三级标题
</code></pre>

<h3>三级标题</h3>

<p>2、*或者_表示强调，左右都加，1个表示斜体，2个表示粗体</p>

<pre><code>*斜体*
</code></pre>

<p><em>斜体</em></p>

<pre><code>__加粗__
</code></pre>

<p><strong>加粗</strong></p>

<p>3、-表示列表</p>

<pre><code>- 列表
    - 子项一
    - 子项二
</code></pre>

<ul>
<li>列表

<ul>
<li>子项一</li>
<li>子项二</li>
</ul>
</li>
</ul>


<p>4、> 表示引用</p>

<pre><code>&gt; 引用
&gt; &gt; 引用的引用 
</code></pre>

<blockquote><p>引用</p>

<blockquote><p>引用的引用</p></blockquote></blockquote>

<p>5、插入图片</p>

<pre><code>![image](https://www.dkhs.com/static/common/img/logo5.png)
</code></pre>

<p><img src="https://www.dkhs.com/static/common/img/logo5.png" alt="image" /></p>

<p>6、插入链接</p>

<pre><code>[谁牛金融链接](http://www.dkhs.com)
</code></pre>

<p><a href="http://www.dkhs.com">谁牛金融链接</a></p>

<p>7、插入视频</p>

<pre><code>&lt;video width='640' height='320' preload='metadata' controls poster='http://s3.imathis.com/video/zero-to-fancy-buttons.png'&gt;&lt;source src='http://s3.imathis.com/video/zero-to-fancy-buttons.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'&gt;&lt;/video&gt;
</code></pre>

<p><video width='640' height='320' preload='metadata' controls poster='http://s3.imathis.com/video/zero-to-fancy-buttons.png'><source src='http://s3.imathis.com/video/zero-to-fancy-buttons.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'></video></p>

<p>8、插入高亮代码</p>

<pre><code>```[language] [title] [url] [link text]
public class Zoo {
    public void say() {
        System.out.println("welcome!!!");
    }
}
```
</code></pre>

<figure class='code'><figcaption><span>Zoo.java</span><a href='https://github.com/chendd/BeatPlane/blob/master/src/com/example/model/Bullet.java'>Link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Zoo</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">say</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;welcome!!!&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>9、分割线</p>

<pre><code>---
</code></pre>

<hr />

<p>&#160;</p>

<h3>用Markdown写博客真是极好。</h3>
]]></content>
  </entry>
  
</feed>
