<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Chendd's Blog]]></title>
  <link href="http://chendd.github.io/atom.xml" rel="self"/>
  <link href="http://chendd.github.io/"/>
  <updated>2016-08-01T10:00:03+08:00</updated>
  <id>http://chendd.github.io/</id>
  <author>
    <name><![CDATA[chendd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[编写高效的Android代码]]></title>
    <link href="http://chendd.github.io/blog/2013/05/15/efficient_android_code/"/>
    <updated>2013-05-15T21:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/05/15/efficient_android_code</id>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;为什么在这就意味着没有多少剩余空间给你去浪费了，因此，在你写Androi编写Android程序时要时刻考虑执行的效率，这些系统不是想象中的那么快，并且你还要考虑它电池的续航能力。写程序的时候，要尽可能的使你的代码优化而提高效率。</p>

<p>&#160; &#160; &#160; &#160;对于如何判断一个系统的不合理，这里有两个基本的原则：</p>

<h4>1、不要做不必要做的事情。</h4>

<h4>2、尽可能的节省内存的使用。</h4>

<!--more-->


<p>&#160; &#160; &#160; &#160;下面是常用的几点优化建议：</p>

<h4>1、尽可能避免创建对象（Object）</h4>

<p>&#160; &#160; &#160; &#160;因为对象的创建并不是没有代价的，如果你在一个用户界面的循环中分配一个对象，你不得不强制的进行内存回收，那么就会使用户体验出现稍微“打嗝”的现象。</p>

<p>&#160; &#160; &#160; &#160;当从原始的输入数据中提取字符串时，试着从原始字符串返回一个子字符串，而不是创建一份拷贝。</p>

<h4>2、使用自身方法（Use Native Methods）</h4>

<p>&#160; &#160; &#160; &#160;当处理字符串的时候，不要犹豫，尽可能多的使用诸如String.indexOf()、String.lastIndexOf()这样对象自身带有的方法。因为这些方法使用C/C++来实现的，
要比在一个java循环中做同样的事情快10-100倍。</p>

<h4>3、缓冲属性调用Cache Field Lookups</h4>

<p>&#160; &#160; &#160; &#160;访问对象属性要比访问本地变量慢得多。你不应该这样写你的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="k">this</span><span class="o">.</span><span class="na">mCount</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
</span><span class='line'>      <span class="n">dumpItem</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mItems</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;而是应该这样写：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>  <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">mCount</span><span class="o">;</span>
</span><span class='line'>  <span class="n">Item</span><span class="o">[]</span> <span class="n">items</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">mItems</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">count</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
</span><span class='line'>      <span class="n">dumpItems</span><span class="o">(</span><span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;我们直接使用“this”表明这些是它的成员变量</p>

<h4>4、声明Final常量</h4>

<p>&#160; &#160; &#160; &#160;我们可以看看下面一个类顶部的声明：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">static</span> <span class="kt">int</span> <span class="n">intVal</span> <span class="o">=</span> <span class="mi">42</span><span class="o">;</span>
</span><span class='line'><span class="kd">static</span> <span class="n">String</span> <span class="n">strVal</span> <span class="o">=</span> <span class="s">&quot;Hello, world!&quot;</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;当一个类第一次使用时，编译器会调用一个类初始化方法，这个方法将42存入变量intVal，并且为strVal在类文件字符串常量表中提取一个引用，当这些值在后面引用时，就会直接属性调用。</p>

<p>&#160; &#160; &#160; &#160;我们可以用关键字“final”来改进代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">intVal</span> <span class="o">=</span> <span class="mi">42</span><span class="o">;</span>
</span><span class='line'><span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">strVal</span> <span class="o">=</span> <span class="s">&quot;Hello, world!&quot;</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;这个类将不会调用类初始化方法，因为这些常量直接写入了类文件静态属性初始化中，这个初始化直接由虚拟机来处理。代码访问intVal将会使用Integer类型的42，访问strVal将使用相对节省的“字符串常量”来替代一个属性调用。
将一个类或者方法声明为“final”并不会带来任何的执行上的好处，它能够进行一定的最优化处理。例如，如果编译器知道一个Get方法不能被子类重载，那么它就把该函数设置成Inline。</p>

<h4>5、避免浮点类型的使用</h4>

<p>&#160; &#160; &#160; &#160;嵌入式的处理器通常并不支持浮点数的处理，因此所有的“float”和“double”操作都是通过软件进行的，一些基本的浮点数的操作就需要花费毫秒级的时间。同时，即使是整数，一些芯片也只有乘法而没有除法。在这些情况下，整数的除法和取模操作都是通过软件实现。</p>

<h4>6、避免列举类型Avoid Enums</h4>

<p>&#160; &#160; &#160; &#160;列举类型非常好用，当考虑到尺寸和速度的时候，就会显得代价很高，例如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Foo</span> <span class="o">{</span>
</span><span class='line'>   <span class="kd">public</span> <span class="kd">enum</span> <span class="n">Shrubbery</span> <span class="o">{</span> <span class="n">GROUND</span><span class="o">,</span> <span class="n">CRAWLING</span><span class="o">,</span> <span class="n">HANGING</span> <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;这会转变成为一个900字节的class文件（Foo$Shrubbery.class）。第一次使用时，类的初始化要在独享上面调用方法去描述列举的每一项，每一个对象都要有它自身的静态空间，整个被储存在一个数组里面（一个叫做“$VALUE”的静态数组）。那是一大堆的代码和数据，仅仅是为了三个整数值。Shrubbery shrub = Shrubbery.GROUND;这会引起一个静态属性的调用，如果GROUND是一个静态的Final变量，编译器会把它当做一个常数嵌套在代码里面。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记25--ANR和Hander消息机制]]></title>
    <link href="http://chendd.github.io/blog/2013/03/30/android_study_25/"/>
    <updated>2013-03-30T21:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/30/android_study_25</id>
    <content type="html"><![CDATA[<h4>1、ANR(Application Not Responding)定义</h4>

<p>　　在Android上，如果你的应用程序有一段时间响应不够灵敏，系统会向用户显示一个对话框，
这个对话框称作应用程序无响应（ANR：Application Not Responding）对话框。用户可以选择“等待”而让程序继续运行，
也可以选择“强制关闭”。所以一个流畅的合理的应用程序中不能出现anr，而让用户每次都要处理这个对话框。
因此，在程序里对响应性能的设计很重要，这样系统不会显示ANR给用户。默认情况下，在android中Activity的最长执行时间是5秒，
BroadcastReceiver的最长执行时间则是10秒。</p>

<!--more-->


<p><img src="http://images.cnitblog.com/i/602984/201404/172223300108690.jpg" alt="image" /></p>

<h4>2、如何避免ANR</h4>

<p>&#160; &#160; &#160; &#160;Android应用程序通常是运行在一个单独的UI主线程里，因此，运行在主线程里的任何方法都尽可能少做事情。
特别是，Activity应该在它的关键生命周期方法（如onCreate()和onResume()）里尽可能少的去做创建操作。
潜在的耗时操作，例如网络或数据库操作，或者高耗时的计算如改变位图尺寸，应该在子线程里
（或者以数据库操作为例，通过异步请求的方式）来完成。然而，不是说你的主线程阻塞在那里等待子线程的完成——也不是调用
Thread.wait()或是Thread.sleep()。替代的方法是，主线程应该为子线程提供一个Handler，以便完成时能够提交给主线程。</p>

<h4>3、Hander 定义</h4>

<p>&#160; &#160; &#160; &#160;主要接受子线程发送的数据, 并用此数据配合主线程更新UI.
直接在UI线程中开启子线程来更新TextView显示的内容，运行程序我们会发现，如下错误：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>android.view.ViewRoot$CalledFromWrongThreadException: Only the original thread that created a view hierarchy can touch its views.</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;翻译过来就是：只有创建这个控件的线程才能去更新该控件的内容。
所有的UI线程要去负责View的创建并且维护它，例如更新冒个TextView的显示，都必须在主线程中去做，我们不能直接在UI线程中去创建子线程，
要利用消息机制：handler，如下就是handler的简单工作原理图:</p>

<p><img src="http://images.cnitblog.com/i/602984/201404/181859021979455.gif" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;Android系统中的Looper负责管理线程的消息队列和消息循环。创建的工作线程默认是没有消息队列和消息循环的，如果想让工作线程具有消息队列和消息循环，</p>

<p>&#160; &#160; &#160; &#160;就需要在线程中先调用Looper.prepare()来创建消息队列，然后调用Looper.loop()进入消息循环。下面是我们创建的工作线程：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">WorkThread</span> <span class="kd">extends</span> <span class="n">Thread</span> <span class="o">{</span>
</span><span class='line'>          <span class="kd">public</span> <span class="n">Handler</span> <span class="n">mHandler</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">Looper</span><span class="o">.</span><span class="na">prepare</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>              <span class="n">mHandler</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Handler</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleMessage</span><span class="o">(</span><span class="n">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="c1">// 处理收到的消息</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>              <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>              <span class="n">Looper</span><span class="o">.</span><span class="na">loop</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;这样一来，我们创建的工作线程就具有了消息处理机制了。运行在主线程中，Android系统会在Activity启动时为其创建一个消息队列和消息循环，就不需要</p>

<p>Looper.prepare()和Looper.loop();</p>

<h4>4、Hander 用法</h4>

<p>&#160; &#160; &#160; &#160;继承或实现Hendler类，并重写handleMessage(Message msg) 方法, 用于接受线程数据
如下实例：</p>

<p>&#160; &#160; &#160; &#160;启动后，更新后的值一直在增加</p>

<p><img src="http://images.cnitblog.com/i/602984/201404/172206262912209.png" alt="image" /></p>

<p>主要代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tv</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">UPDATE</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Handler</span> <span class="n">handler</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Handler</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleMessage</span><span class="o">(</span><span class="n">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// TODO 接收消息并且去更新UI线程上的控件内容</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">msg</span><span class="o">.</span><span class="na">what</span> <span class="o">==</span> <span class="n">UPDATE</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// Bundle b = msg.getData();</span>
</span><span class='line'>                <span class="c1">// tv.setText(b.getString(&quot;num&quot;));</span>
</span><span class='line'>                <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">msg</span><span class="o">.</span><span class="na">obj</span><span class="o">));</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="kd">super</span><span class="o">.</span><span class="na">handleMessage</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/** Called when the activity is first created. */</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>        <span class="n">tv</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tv</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">new</span> <span class="nf">Thread</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO 子线程中通过handler发送消息给handler接收，由handler去更新TextView的值</span>
</span><span class='line'>                <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">500</span><span class="o">);</span>
</span><span class='line'>                        <span class="n">Message</span> <span class="n">msg</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Message</span><span class="o">();</span>
</span><span class='line'>                        <span class="n">msg</span><span class="o">.</span><span class="na">what</span> <span class="o">=</span> <span class="n">UPDATE</span><span class="o">;</span>
</span><span class='line'>                        <span class="c1">// Bundle b = new Bundle();</span>
</span><span class='line'>                        <span class="c1">// b.putString(&quot;num&quot;, &quot;更新后的值：&quot; + i);</span>
</span><span class='line'>                        <span class="c1">// msg.setData(b);</span>
</span><span class='line'>                        <span class="n">msg</span><span class="o">.</span><span class="na">obj</span> <span class="o">=</span> <span class="s">&quot;更新后的值：&quot;</span> <span class="o">+</span> <span class="n">i</span><span class="o">;</span>
</span><span class='line'>                        <span class="n">handler</span><span class="o">.</span><span class="na">sendMessage</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;关于message，指对于Android中Handler可以传递一些内容，通过Bundle对象可以封装String、Integer以及Blob二进制对象，
我们通过在线程中使用Handler对象的sendEmptyMessage或sendMessage方法来传递一个Bundle对象到Handler处理器。
对于Handler类提供了重写方法handleMessage(Message msg) 来判断，通过msg.what来区分每条信息。
将Bundle解包来实现Handler类更新UI线程中的内容实现控件的刷新操作。相关的Handler对象有关消息发送sendXXXX相关方法如下，
同时还有postXXXX相关方法，这些和Win32中的道理基本一致，一个为发送后直接返回，一个为处理后才返回。</p>

<p>&#160; &#160; &#160; &#160;比如我们可以在message里封装Bundle对象。</p>

<p>&#160; &#160; &#160; &#160;两边传递的代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 其他Thread里发送</span>
</span><span class='line'><span class="n">Message</span> <span class="n">msg</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Message</span><span class="o">();</span>
</span><span class='line'><span class="n">Bundle</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Bundle</span><span class="o">();</span><span class="c1">// 存放数据</span>
</span><span class='line'><span class="n">b</span><span class="o">.</span><span class="na">putString</span><span class="o">(</span><span class="s">&quot;color&quot;</span><span class="o">,</span> <span class="s">&quot;我的&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// handleMessage里接收</span>
</span><span class='line'><span class="n">Bundle</span> <span class="n">b</span> <span class="o">=</span> <span class="n">msg</span><span class="o">.</span><span class="na">getData</span><span class="o">();</span>
</span><span class='line'><span class="n">String</span> <span class="n">color</span> <span class="o">=</span> <span class="n">b</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&quot;color&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>5、单线程的消息机制</h4>

<p>&#160; &#160; &#160; &#160;Hander属于多线程的消息机制，Android 单线程事件处理机制 有两种</p>

<ul>
<li>1、基于监听器的机制</li>
</ul>


<p>　　绑定特定的事件监听器，如Button的OnClickListener监听器， 监听器模型:包含事件源(EventSource)、事件(Event)、事件监听器(EventListener)。 一般内部类作为事件监听器类，主要因为 内部类可以在当前类复用;内部类可以调用外部类的组件。当然如果多个 GUI公用一个监听器类，还是使用外部类好一点，只需传入当前的context。当然大部分时间处理没什么复用价值， 更多的时候使用内部匿名类来实现。</p>

<ul>
<li>2、基于回调函数的机制</li>
</ul>


<p>　　重写回调方法，如View的OnKeyDown方法，基于回调函数的机制的事件源和事件监听器是统一的， Android为所有GUI提供一套事件处理方法，当重写回调函数处理完后必需返回true，事件才不会继续向上层调用。</p>

<p>&#160; &#160; &#160; &#160;优劣：基于回调函数 使得更具通用型、代码更加简洁， 基于回调函数 事件模型分工明确、具有更好的维护性 对于特定事件，无法使用回调函数只能使用监听器。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记24--菜单开发]]></title>
    <link href="http://chendd.github.io/blog/2013/03/30/android_study_24/"/>
    <updated>2013-03-30T21:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/30/android_study_24</id>
    <content type="html"><![CDATA[<p>　　菜单是任何应用程序必不可少的一项。按下Menu键或者长按某个View就会弹出相应菜单，当然前提是应用程序有实现菜单功能。
Android平台下的菜单有：Options Menu(选项菜单)、Submenu(子菜单)、Context Menu(上下文菜单)。
这次的案例用以前的索尼真机测试，就不贴代码和运行截图，主要贴些理论知识。菜单这块比较简单，代码实例看<a href="http://www.cnblogs.com/giuz/archive/2010/10/19/1855235.html">这里</a></p>

<!--more--> 


<h2>一、选项菜单和子菜单</h2>

<p>　　Options Menu和Submenu 是一组的，放在一起介绍，一般用于开发普通的选项菜单。</p>

<p>相关回调方法及说明：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/292323410312532.png" alt="image" /></p>

<p>涉及到相关类详解：</p>

<h4>1、Menu类</h4>

<p>　　一个Menu对象代表一个菜单，Menu对象中可以添加菜单项MenuItem，也可以添加子菜单SubMenu。常用方法如下:</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/292324064696628.png" alt="image" /></p>

<p>注意：clear() 方法用于清除已添加的菜单，通过代码运行中的clear()再add()可以用于动态配置菜单。</p>

<h4>2、MenuItem类</h4>

<p>　　一个MenuIten对象代表一个菜单项，通常MenuItem实例通过Menu的add方法获得。常用方法如下：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/292325371093303.png" alt="image" /></p>

<p>注意：Android最多支持6个MenuItem，多了以后就摆在More里面。</p>

<h4>3、SubMenu类</h4>

<p>　　一个SubMenu对象代表一个子菜单，可以理解为菜单的菜单，即Menu对象点进去弹出来的就叫子菜单，每个SubMenu实例代表一个子菜单，常用的方法如下</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/292326297037235.png" alt="image" /></p>

<p>一般用法：</p>

<ul>
<li>1、在主Activity中覆盖onCreateOptionsMenu(Menu menu)方法,子菜单也在这里添加</li>
<li>2、如果要添加点击事件，则要覆盖onOptionsItemSelected(MenuItem item)方法</li>
</ul>


<h2>二、上下文菜单</h2>

<p>　　Context Menu类似于电脑上的右键，长按某个View之后弹出来的菜单。也是继承自Menu，不同于选项菜单，
选项菜单服务于Activity，而上下文是注册到某个VIew对象上的。如果一个View对象注册了上下文菜单，用户可以通过长按两秒该View对象调出上下文菜单。</p>

<p>用法同普通菜单，方法名称由Options替换Context</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/292327403289825.png" alt="image" /></p>

<h2>三、用XML配置菜单</h2>

<p>　　注意到新建项目的MainActivity 都会重写onCreateOptionsMenu方法
里面代码：
getMenuInflater().inflate(R.menu.main, menu);
就是通过XML来设置菜单的。</p>

<p>如下在res/menu/main.xml 就是本来的配置菜单</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;menu</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;item</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/action_settings&quot;</span>
</span><span class='line'>        <span class="na">android:orderInCategory=</span><span class="s">&quot;100&quot;</span>
</span><span class='line'>        <span class="na">android:showAsAction=</span><span class="s">&quot;never&quot;</span>
</span><span class='line'>        <span class="na">android:title=</span><span class="s">&quot;@string/action_settings&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/menu&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>其他同再JAVA代码里的写法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记23--XML解析]]></title>
    <link href="http://chendd.github.io/blog/2013/03/29/android_study_23/"/>
    <updated>2013-03-29T21:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/29/android_study_23</id>
    <content type="html"><![CDATA[<h2>一、简述</h2>

<p>　　XML语言是跨平台，JAVA对XML语言支持得比较好，android系统的应用层平台是JAVA做的，所以用XML。
XML解析比较简单。XML解析就是将获取到的数据分离出来，基本的网络数据传输，需要使用XML
比如天气预报，从网上获取的是XML文件，通过XML解析可以把天气状态读出来
例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;forecast_date</span> <span class="na">data=</span><span class="s">&quot;2009-07-31&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;condition</span> <span class="na">data=</span><span class="s">&quot;晴&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;humidity</span> <span class="na">data=</span><span class="s">&quot;湿度： 65%&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>可得到 2009-07-31 晴 湿度：65%</p>

<p>还有一作用是保存你的数据，比如做个旅游网站，你需要把全国各个省、城市名称写到XML文件进行保存，在程序中通过解析读取调用。</p>

<!--more-->


<p>Android 平台上可用的XML解析有三种</p>

<ul>
<li>1、Simple API for XML(SAX)</li>
<li>2、Document Object Model(DOM)</li>
<li>3、Android附带的pull解析器</li>
</ul>


<h2>二、实例</h2>

<p>分别用三种方法解析如下persons.xml文件（文件放在assert目录下）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;persons&gt;</span>
</span><span class='line'>    <span class="nt">&lt;person</span> <span class="na">id=</span><span class="s">&quot;23&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>liming<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;age&gt;</span>30<span class="nt">&lt;/age&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/person&gt;</span>
</span><span class='line'>    <span class="nt">&lt;person</span> <span class="na">id=</span><span class="s">&quot;20&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>dehua<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;age&gt;</span>25<span class="nt">&lt;/age&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/person&gt;</span>
</span><span class='line'><span class="nt">&lt;/persons&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>还需定义个javabean 用于存放解析出来的内容</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">xml</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Person</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Integer</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Short</span> <span class="n">age</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Integer</span> <span class="nf">getId</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setId</span><span class="o">(</span><span class="n">Integer</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Short</span> <span class="nf">getAge</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">age</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAge</span><span class="o">(</span><span class="n">Short</span> <span class="n">age</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">age</span> <span class="o">=</span> <span class="n">age</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//    @Override</span>
</span><span class='line'><span class="c1">//    public String toString() {</span>
</span><span class='line'><span class="c1">//        return &quot;id:&quot; + id + &quot;, name:&quot; + name + &quot;, age:&quot; + age;</span>
</span><span class='line'><span class="c1">//    }</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>1、Simple API for XML(SAX)</h4>

<p>　　SAX是一个解析速度快并且占用内存少的XML解析器，很适合用于Android等移动设备。
SAX解析XML文件采用的是事件驱动，也就是说，它并不需要解析完整个文档，在按内容顺序解析文档的过程中，
SAX会判断当前读到的字符是否合法XML语法中的某部分，如果符合就会触发事件。所谓事件，其实就是一些回调（callback）方法，
这些方法(事件)定义在ContentHandler接口。</p>

<p>　　直接看代码:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">XMLContentHandler</span> <span class="kd">extends</span> <span class="n">DefaultHandler</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;</span> <span class="n">persons</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Person</span> <span class="n">currentPerson</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">tagName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span><span class="c1">// 当前解析的元素标签    </span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">TAG</span> <span class="o">=</span> <span class="s">&quot;XMLContentHandler&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;</span> <span class="nf">getPersons</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">persons</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* </span>
</span><span class='line'><span class="cm">     * 接收文档的开始的通知。</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">startDocument</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">SAXException</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">persons</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;();</span>
</span><span class='line'>         <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;startDocument&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* </span>
</span><span class='line'><span class="cm">     * 结束文档的开始的通知。</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">endDocument</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">SAXException</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">endDocument</span><span class="o">();</span>
</span><span class='line'>         <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;endDocument&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* </span>
</span><span class='line'><span class="cm">     * 接收字符数据的通知。</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">characters</span><span class="o">(</span><span class="kt">char</span><span class="o">[]</span> <span class="n">ch</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">length</span><span class="o">)</span>
</span><span class='line'>            <span class="kd">throws</span> <span class="n">SAXException</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">tagName</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">String</span><span class="o">(</span><span class="n">ch</span><span class="o">,</span> <span class="n">start</span><span class="o">,</span> <span class="n">length</span><span class="o">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">tagName</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">this</span><span class="o">.</span><span class="na">currentPerson</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">tagName</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;age&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">this</span><span class="o">.</span><span class="na">currentPerson</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="n">Short</span><span class="o">.</span><span class="na">parseShort</span><span class="o">(</span><span class="n">data</span><span class="o">));</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;characters(&quot;</span><span class="o">+</span><span class="n">ch</span><span class="o">.</span><span class="na">toString</span><span class="o">()+</span><span class="s">&quot;,&quot;</span><span class="o">+</span><span class="n">start</span><span class="o">+</span><span class="s">&quot;,&quot;</span><span class="o">+</span><span class="n">length</span><span class="o">+</span><span class="s">&quot;)&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * 接收元素开始的通知。</span>
</span><span class='line'><span class="cm">     * 参数意义如下： </span>
</span><span class='line'><span class="cm">     * namespaceURI：元素的命名空间 </span>
</span><span class='line'><span class="cm">     * localName ：元素的本地名称（不带前缀） </span>
</span><span class='line'><span class="cm">     * qName ：元素的限定名（带前缀）</span>
</span><span class='line'><span class="cm">     * atts ：元素的属性集合</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">startElement</span><span class="o">(</span><span class="n">String</span> <span class="n">namespaceURI</span><span class="o">,</span> <span class="n">String</span> <span class="n">localName</span><span class="o">,</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">qName</span><span class="o">,</span> <span class="n">Attributes</span> <span class="n">atts</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">SAXException</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">localName</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;person&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">currentPerson</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Person</span><span class="o">();</span>
</span><span class='line'>            <span class="n">currentPerson</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">atts</span><span class="o">.</span><span class="na">getValue</span><span class="o">(</span><span class="s">&quot;id&quot;</span><span class="o">)));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">tagName</span> <span class="o">=</span> <span class="n">localName</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;startElement(&quot;</span><span class="o">+</span><span class="n">namespaceURI</span><span class="o">+</span><span class="s">&quot;,&quot;</span><span class="o">+</span><span class="n">localName</span><span class="o">+</span><span class="s">&quot;,&quot;</span><span class="o">+</span><span class="n">qName</span><span class="o">+</span><span class="n">atts</span><span class="o">+</span><span class="s">&quot;)&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* </span>
</span><span class='line'><span class="cm">     * 接收文档的结尾的通知。</span>
</span><span class='line'><span class="cm">     * 参数意义如下：</span>
</span><span class='line'><span class="cm">     * uri ：元素的命名空间</span>
</span><span class='line'><span class="cm">     * localName ：元素的本地名称（不带前缀）</span>
</span><span class='line'><span class="cm">     * name ：元素的限定名（带前缀）</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">endElement</span><span class="o">(</span><span class="n">String</span> <span class="n">uri</span><span class="o">,</span> <span class="n">String</span> <span class="n">localName</span><span class="o">,</span> <span class="n">String</span> <span class="n">name</span><span class="o">)</span>
</span><span class='line'>            <span class="kd">throws</span> <span class="n">SAXException</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">localName</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;person&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">persons</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">currentPerson</span><span class="o">);</span>
</span><span class='line'>            <span class="n">currentPerson</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">tagName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;endElement(&quot;</span><span class="o">+</span><span class="n">uri</span><span class="o">+</span><span class="s">&quot;,&quot;</span><span class="o">+</span><span class="n">localName</span><span class="o">+</span><span class="s">&quot;,&quot;</span><span class="o">+</span><span class="n">name</span><span class="o">+</span><span class="s">&quot;)&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2、Document Object Model(DOM)</h4>

<p>　　DOM解析XML文件时，会将XML文件的所有内容读取到内存中，然后允许您使用DOM API遍历XML树、检索所需的数据。
使用DOM操作XML的代码看起来比较直观，并且，在某些方面比基于SAX的实现更加简单。但是，因为DOM需要将XML文件的所有内容读取到内存中，
所以内存的消耗比较大，特别对于运行Android的移动设备来说，因为设备的资源比较宝贵，所以建议还是采用SAX来解析XML文件，
当然，如果XML文件的内容比较小采用DOM是可行的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DomParseXML</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;</span> <span class="nf">readXML</span><span class="o">(</span><span class="n">InputStream</span> <span class="n">inStream</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;</span> <span class="n">persons</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">DocumentBuilderFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="n">DocumentBuilderFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span><span class="c1">// 获取实例</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">DocumentBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newDocumentBuilder</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Document</span> <span class="n">dom</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">inStream</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Element</span> <span class="n">root</span> <span class="o">=</span> <span class="n">dom</span><span class="o">.</span><span class="na">getDocumentElement</span><span class="o">();</span>
</span><span class='line'>            <span class="n">NodeList</span> <span class="n">items</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="na">getElementsByTagName</span><span class="o">(</span><span class="s">&quot;person&quot;</span><span class="o">);</span><span class="c1">// 查找所有person节点</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">items</span><span class="o">.</span><span class="na">getLength</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">Person</span> <span class="n">person</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Person</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// 得到第一个person节点</span>
</span><span class='line'>                <span class="n">Element</span> <span class="n">personNode</span> <span class="o">=</span> <span class="o">(</span><span class="n">Element</span><span class="o">)</span> <span class="n">items</span><span class="o">.</span><span class="na">item</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// 获取person节点的id属性值</span>
</span><span class='line'>                <span class="n">person</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="k">new</span> <span class="nf">Integer</span><span class="o">(</span><span class="n">personNode</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">&quot;id&quot;</span><span class="o">)));</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// 获取person节点下的所有子节点(标签之间的空白节点和name/age元素)</span>
</span><span class='line'>                <span class="n">NodeList</span> <span class="n">childsNodes</span> <span class="o">=</span> <span class="n">personNode</span><span class="o">.</span><span class="na">getChildNodes</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">childsNodes</span><span class="o">.</span><span class="na">getLength</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">Node</span> <span class="n">node</span> <span class="o">=</span> <span class="o">(</span><span class="n">Node</span><span class="o">)</span> <span class="n">childsNodes</span><span class="o">.</span><span class="na">item</span><span class="o">(</span><span class="n">j</span><span class="o">);</span> <span class="c1">// 判断是否为元素类型</span>
</span><span class='line'>                    <span class="k">if</span> <span class="o">(</span><span class="n">node</span><span class="o">.</span><span class="na">getNodeType</span><span class="o">()</span> <span class="o">==</span> <span class="n">Node</span><span class="o">.</span><span class="na">ELEMENT_NODE</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">Element</span> <span class="n">childNode</span> <span class="o">=</span> <span class="o">(</span><span class="n">Element</span><span class="o">)</span> <span class="n">node</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>                        <span class="c1">// 判断是否name元素</span>
</span><span class='line'>                        <span class="k">if</span> <span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">childNode</span><span class="o">.</span><span class="na">getNodeName</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                            <span class="c1">// 获取name元素下Text节点,然后从Text节点获取数据</span>
</span><span class='line'>                            <span class="n">person</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">childNode</span><span class="o">.</span><span class="na">getFirstChild</span><span class="o">()</span>
</span><span class='line'>                                    <span class="o">.</span><span class="na">getNodeValue</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>                        <span class="o">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="s">&quot;age&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">childNode</span><span class="o">.</span><span class="na">getNodeName</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">person</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="k">new</span> <span class="nf">Short</span><span class="o">(</span><span class="n">childNode</span><span class="o">.</span><span class="na">getFirstChild</span><span class="o">()</span>
</span><span class='line'>                                    <span class="o">.</span><span class="na">getNodeValue</span><span class="o">()));</span>
</span><span class='line'>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="n">persons</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">person</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">inStream</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">persons</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3、Android附带的pull解析器</h4>

<p>　　Pull解析和Sax解析很相似，都是轻量级的解析，在Android的内核中已经嵌入了Pull，所以我们不需要再添加第三方jar包来支持Pull。
Pull解析和Sax解析不一样的地方有(1)pull读取xml文件后触发相应的事件调用方法返回的是数字(2)pull可以在程序中控制想解析到哪里就可以停止解析。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PullParseXML</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;</span> <span class="nf">readXML</span><span class="o">(</span><span class="n">InputStream</span> <span class="n">inStream</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">XmlPullParserException</span><span class="o">,</span> <span class="n">IOException</span><span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;</span> <span class="n">persons</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Person</span> <span class="n">person</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">XmlPullParser</span> <span class="n">parser</span> <span class="o">=</span> <span class="n">Xml</span><span class="o">.</span><span class="na">newPullParser</span><span class="o">();</span>
</span><span class='line'>        <span class="n">parser</span><span class="o">.</span><span class="na">setInput</span><span class="o">(</span><span class="n">inStream</span><span class="o">,</span> <span class="s">&quot;UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">int</span> <span class="n">event</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="na">getEventType</span><span class="o">();</span><span class="c1">//产生第一个事件  </span>
</span><span class='line'>        <span class="k">while</span><span class="o">(</span><span class="n">event</span><span class="o">!=</span><span class="n">XmlPullParser</span><span class="o">.</span><span class="na">END_DOCUMENT</span><span class="o">){</span>
</span><span class='line'>            <span class="k">switch</span><span class="o">(</span><span class="n">event</span><span class="o">){</span>
</span><span class='line'>            <span class="k">case</span> <span class="n">XmlPullParser</span><span class="o">.</span><span class="na">START_DOCUMENT</span><span class="o">:</span><span class="c1">//判断当前事件是否是文档开始事件  </span>
</span><span class='line'>                <span class="n">persons</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;();</span><span class="c1">//初始化Persons集合  </span>
</span><span class='line'>                <span class="k">break</span><span class="o">;</span>
</span><span class='line'>            <span class="k">case</span> <span class="n">XmlPullParser</span><span class="o">.</span><span class="na">START_TAG</span><span class="o">:</span><span class="c1">//判断当前事件是否是标签元素开始事件  </span>
</span><span class='line'>                <span class="k">if</span><span class="o">(</span><span class="s">&quot;person&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">parser</span><span class="o">.</span><span class="na">getName</span><span class="o">())){</span><span class="c1">//判断开始标签元素是否是person  </span>
</span><span class='line'>                    <span class="n">person</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Person</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">person</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">parser</span><span class="o">.</span><span class="na">getAttributeValue</span><span class="o">(</span><span class="mi">0</span><span class="o">)));</span><span class="c1">//得到Person标签的属性值，并设置Person的id  </span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">if</span><span class="o">(</span><span class="n">person</span><span class="o">!=</span><span class="kc">null</span><span class="o">){</span>
</span><span class='line'>                    <span class="k">if</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">parser</span><span class="o">.</span><span class="na">getName</span><span class="o">())){</span><span class="c1">//判断开始标签元素是否是name  </span>
</span><span class='line'>                        <span class="n">person</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">parser</span><span class="o">.</span><span class="na">nextText</span><span class="o">());</span>
</span><span class='line'>                    <span class="o">}</span><span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="s">&quot;age&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">parser</span><span class="o">.</span><span class="na">getName</span><span class="o">())){</span><span class="c1">//判断开始标签元素是否是price  </span>
</span><span class='line'>                        <span class="n">person</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="n">Short</span><span class="o">.</span><span class="na">parseShort</span><span class="o">(</span><span class="n">parser</span><span class="o">.</span><span class="na">nextText</span><span class="o">()));</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">break</span><span class="o">;</span>
</span><span class='line'>            <span class="k">case</span> <span class="n">XmlPullParser</span><span class="o">.</span><span class="na">END_TAG</span><span class="o">:</span><span class="c1">//判断当前事件是否是标签元素结束事件  </span>
</span><span class='line'>                <span class="k">if</span><span class="o">(</span><span class="s">&quot;person&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">parser</span><span class="o">.</span><span class="na">getName</span><span class="o">())){</span><span class="c1">//判断结束标签元素是否是Person  </span>
</span><span class='line'>                    <span class="n">persons</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">person</span><span class="o">);</span><span class="c1">//将person添加到persons集合  </span>
</span><span class='line'>                    <span class="n">person</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">break</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">event</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="na">next</span><span class="o">();</span><span class="c1">//进入下一个元素并触发相应事件  </span>
</span><span class='line'>        <span class="o">}</span><span class="c1">//end while  </span>
</span><span class='line'>        <span class="k">return</span> <span class="n">persons</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行界面：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/291207400008256.png" alt="image" /></p>

<p>绑定按钮触发的事件代码:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>        <span class="n">textView</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">textView</span><span class="o">);</span>
</span><span class='line'>        <span class="n">sax_prase</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">sax_prase</span><span class="o">);</span>
</span><span class='line'>        <span class="n">dom_parse</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">dom_parse</span><span class="o">);</span>
</span><span class='line'>        <span class="n">pull_parse</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">pull_parse</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">inStream</span> <span class="o">=</span> <span class="n">getAssets</span><span class="o">().</span><span class="na">open</span><span class="o">(</span><span class="s">&quot;persons.xml&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//绑定按钮监听器  </span>
</span><span class='line'>        <span class="n">sax_prase</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="nf">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">persons</span> <span class="o">=</span> <span class="n">SaxParseXML</span><span class="o">(</span><span class="n">inStream</span><span class="o">);</span>
</span><span class='line'>                <span class="k">for</span> <span class="o">(</span><span class="n">Person</span> <span class="n">person</span> <span class="o">:</span> <span class="n">persons</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="n">person</span><span class="o">.</span><span class="na">getId</span><span class="o">()+</span><span class="s">&quot;:&quot;</span><span class="o">+</span><span class="n">person</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">&quot;:&quot;</span><span class="o">+</span><span class="n">person</span><span class="o">.</span><span class="na">getAge</span><span class="o">());</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>        <span class="c1">//绑定按钮监听器  </span>
</span><span class='line'>        <span class="n">dom_parse</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="nf">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">DomParseXML</span> <span class="n">domParseXML</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">DomParseXML</span><span class="o">();</span>
</span><span class='line'>                <span class="n">persons</span> <span class="o">=</span> <span class="n">domParseXML</span><span class="o">.</span><span class="na">readXML</span><span class="o">(</span><span class="n">inStream</span><span class="o">);</span>
</span><span class='line'>                <span class="k">for</span> <span class="o">(</span><span class="n">Person</span> <span class="n">person</span> <span class="o">:</span> <span class="n">persons</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="n">person</span><span class="o">.</span><span class="na">getId</span><span class="o">()+</span><span class="s">&quot;:&quot;</span><span class="o">+</span><span class="n">person</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">&quot;:&quot;</span><span class="o">+</span><span class="n">person</span><span class="o">.</span><span class="na">getAge</span><span class="o">());</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>        <span class="n">pull_parse</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="nf">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">PullParseXML</span> <span class="n">pullParseXML</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">PullParseXML</span><span class="o">();</span>
</span><span class='line'>                <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">persons</span> <span class="o">=</span> <span class="n">pullParseXML</span><span class="o">.</span><span class="na">readXML</span><span class="o">(</span><span class="n">inStream</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">XmlPullParserException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">for</span> <span class="o">(</span><span class="n">Person</span> <span class="n">person</span> <span class="o">:</span> <span class="n">persons</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="n">person</span><span class="o">.</span><span class="na">getId</span><span class="o">()+</span><span class="s">&quot;:&quot;</span><span class="o">+</span><span class="n">person</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">&quot;:&quot;</span><span class="o">+</span><span class="n">person</span><span class="o">.</span><span class="na">getAge</span><span class="o">());</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;</span> <span class="nf">SaxParseXML</span><span class="o">(</span><span class="n">InputStream</span> <span class="n">inStream</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">SAXParserFactory</span> <span class="n">spf</span> <span class="o">=</span> <span class="n">SAXParserFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
</span><span class='line'>            <span class="n">SAXParser</span> <span class="n">saxParser</span> <span class="o">=</span> <span class="n">spf</span><span class="o">.</span><span class="na">newSAXParser</span><span class="o">();</span> <span class="c1">// 创建解析器</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// 设置解析器的相关特性，http://xml.org/sax/features/namespaces = true</span>
</span><span class='line'>            <span class="c1">// 表示开启命名空间特性,缺省情况设为true，设置使代码更具可读性,但我加进去报错，索性注释掉</span>
</span><span class='line'>            <span class="c1">//saxParser.setProperty(&quot;http://xml.org/sax/features/namespaces&quot;,true);</span>
</span><span class='line'>            <span class="n">XMLContentHandler</span> <span class="n">handler</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">XMLContentHandler</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">saxParser</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">inStream</span><span class="o">,</span> <span class="n">handler</span><span class="o">);</span>
</span><span class='line'>            <span class="n">inStream</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="n">handler</span><span class="o">.</span><span class="na">getPersons</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>分别点击三个按钮用不同方法解析出来的结果：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/291210425004835.png" alt="image" /></p>

<h2>三、总结</h2>

<p>　　对于三种解析XML方法，各有千秋，倾向于PULL解析器，因为SAX解析器操作起来太笨重，DOM不适合文档较大，内存较小的场景，
唯有Pull轻巧灵活，速度快，占用内存小，使用非常顺手，Pull解析可以用于很多场合，例如接受google天气，rss新闻等。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记22--Animation动画简介]]></title>
    <link href="http://chendd.github.io/blog/2013/03/26/android_study_22/"/>
    <updated>2013-03-26T21:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/26/android_study_22</id>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;Animation动画主要有两种：帧动画(Frame Animation)和补间动画(Tween Animation)。
补间动画主要包括对位置、角度、尺寸等属性的变化，而帧动画则是通过若干帧图片轮流切换显示的。</p>

<h4>1、帧动画</h4>

<p>&#160; &#160; &#160; &#160;按顺序显示事先准备好的图片，跟动漫类似。主要用到的类AnimationDrawable，每个帧都是AnimationDrawable对象。
定义帧动画可以在代码直接进行。也可以通过XML文件定义，定义帧动画的文件存放在res/anim目录下。XML指定帧出现的顺序
及每个帧的持续时间。</p>

<!--more-->


<p>&#160; &#160; &#160; &#160;帧动画XML主要标记和属性如下:</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/262025574051823.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;需要强调的是：启动Frame Animation动画的代码rocketAnimation.start();不能在OnCreate()中，因为在OnCreate()中
AnimationDrawable还没有完全的与ImageView绑定，在OnCreate()中启动动画，就只能看到第一张图片。这里实在拖曳事件中实现的。</p>

<p>&#160; &#160; &#160; &#160;AnimationDrawable的主要方法如下：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/262028348437192.png" alt="image" />
　　</p>

<p>&#160; &#160; &#160; &#160;帧动画使用例子</p>

<p>&#160; &#160; &#160; &#160;完整帧动画XML(frame_ani.xml)代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'> <span class="nt">&lt;animation-list</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>     <span class="na">android:oneshot=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:drawable=</span><span class="s">&quot;@drawable/fish1&quot;</span> <span class="na">android:duration=</span><span class="s">&quot;200&quot;</span> <span class="na">android:visible=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:drawable=</span><span class="s">&quot;@drawable/fish1&quot;</span> <span class="na">android:duration=</span><span class="s">&quot;200&quot;</span> <span class="na">android:visible=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:drawable=</span><span class="s">&quot;@drawable/fish2&quot;</span> <span class="na">android:duration=</span><span class="s">&quot;200&quot;</span> <span class="na">android:visible=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:drawable=</span><span class="s">&quot;@drawable/fish3&quot;</span> <span class="na">android:duration=</span><span class="s">&quot;200&quot;</span> <span class="na">android:visible=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:drawable=</span><span class="s">&quot;@drawable/fish4&quot;</span> <span class="na">android:duration=</span><span class="s">&quot;200&quot;</span> <span class="na">android:visible=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:drawable=</span><span class="s">&quot;@drawable/fish5&quot;</span> <span class="na">android:duration=</span><span class="s">&quot;200&quot;</span> <span class="na">android:visible=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:drawable=</span><span class="s">&quot;@drawable/fish6&quot;</span> <span class="na">android:duration=</span><span class="s">&quot;200&quot;</span> <span class="na">android:visible=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:drawable=</span><span class="s">&quot;@drawable/fish7&quot;</span> <span class="na">android:duration=</span><span class="s">&quot;200&quot;</span> <span class="na">android:visible=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:drawable=</span><span class="s">&quot;@drawable/fish8&quot;</span> <span class="na">android:duration=</span><span class="s">&quot;200&quot;</span> <span class="na">android:visible=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;item</span> <span class="na">android:drawable=</span><span class="s">&quot;@drawable/fish8&quot;</span> <span class="na">android:duration=</span><span class="s">&quot;200&quot;</span> <span class="na">android:visible=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'> <span class="nt">&lt;/animation-list&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>启动帧动画JAVA代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>            <span class="c1">//重写onClick方法</span>
</span><span class='line'>      <span class="n">ImageView</span> <span class="n">iv</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">iv</span><span class="o">);</span>
</span><span class='line'>      <span class="n">iv</span><span class="o">.</span><span class="na">setBackgroundResource</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">anim</span><span class="o">.</span><span class="na">frame_ani</span><span class="o">);</span>
</span><span class='line'>      <span class="n">AnimationDrawable</span> <span class="n">ad</span> <span class="o">=</span> <span class="o">(</span><span class="n">AnimationDrawable</span><span class="o">)</span><span class="n">iv</span><span class="o">.</span><span class="na">getBackground</span><span class="o">();</span>
</span><span class='line'>      <span class="n">ad</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>        <span class="c1">//启动AnimationDrawable</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>点击按钮，启动帧动画，可以看见不同fish图片的切换，鱼儿在游动(自己脑补哈)。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/262029485935994.png" alt="image" /></p>

<h4>2、补间动画</h4>

<p>&#160; &#160; &#160; &#160;补间动画作用于View视图，主要包括对View对象的位置、尺寸、旋转角度、透明度的变化。补间动画涉及的类主要有Animation、AnimationSet等。
&#160; &#160; &#160; &#160;补间动画同帧动画可以在代码直接进行。也可以通过XML文件定义，推荐用XML，因为这样可读性比较高和利于扩展。
XML文件存放在res/anim下。</p>

<p>　　补间动画XML几种变化标记和属性如下:</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/262034318435727.png" alt="image" /></p>

<p>　　公有属性如下：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/262034454364374.png" alt="image" />　</p>

<p>　　补间动画使用例子：</p>

<p>完整补间动画XML代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><span class="c">&lt;!-- XML的版本以及编码方式 --&gt;</span>
</span><span class='line'><span class="nt">&lt;set</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;alpha</span>
</span><span class='line'>    <span class="na">android:fromAlpha=</span><span class="s">&quot;0.0&quot;</span>
</span><span class='line'>    <span class="na">android:toAlpha=</span><span class="s">&quot;1.0&quot;</span>
</span><span class='line'>    <span class="na">android:duration=</span><span class="s">&quot;6000&quot;</span>
</span><span class='line'>  <span class="nt">/&gt;</span> <span class="c">&lt;!-- 透明度的变换 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;scale</span>
</span><span class='line'>    <span class="na">android:interpolator=</span> <span class="s">&quot;@android:anim/accelerate_decelerate_interpolator&quot;</span>
</span><span class='line'>    <span class="na">android:fromXScale=</span><span class="s">&quot;0.0&quot;</span>
</span><span class='line'>    <span class="na">android:toXScale=</span><span class="s">&quot;1.0&quot;</span>
</span><span class='line'>    <span class="na">android:fromYScale=</span><span class="s">&quot;0.0&quot;</span>
</span><span class='line'>    <span class="na">android:toYScale=</span><span class="s">&quot;1.0&quot;</span>
</span><span class='line'>    <span class="na">android:pivotX=</span><span class="s">&quot;50%&quot;</span>
</span><span class='line'>    <span class="na">android:pivotY=</span><span class="s">&quot;50%&quot;</span>
</span><span class='line'>    <span class="na">android:fillAfter=</span><span class="s">&quot;false&quot;</span>
</span><span class='line'>    <span class="na">android:duration=</span><span class="s">&quot;9000&quot;</span>
</span><span class='line'>  <span class="nt">/&gt;</span> <span class="c">&lt;!-- 尺寸的变换 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;translate</span>
</span><span class='line'>    <span class="na">android:fromXDelta=</span><span class="s">&quot;30&quot;</span>
</span><span class='line'>    <span class="na">android:toXDelta=</span><span class="s">&quot;0&quot;</span>
</span><span class='line'>    <span class="na">android:fromYDelta=</span><span class="s">&quot;30&quot;</span>
</span><span class='line'>    <span class="na">android:toYDelta=</span><span class="s">&quot;0&quot;</span>
</span><span class='line'>    <span class="na">android:duration=</span><span class="s">&quot;10000&quot;</span>
</span><span class='line'>  <span class="nt">/&gt;</span> <span class="c">&lt;!-- 尺位置的变换 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;rotate</span>
</span><span class='line'>    <span class="na">android:interpolator=</span><span class="s">&quot;@android:anim/accelerate_decelerate_interpolator&quot;</span>
</span><span class='line'>    <span class="na">android:fromDegrees=</span><span class="s">&quot;0&quot;</span>
</span><span class='line'>    <span class="na">android:toDegrees=</span><span class="s">&quot;+360&quot;</span>
</span><span class='line'>    <span class="na">android:pivotX=</span><span class="s">&quot;50%&quot;</span>
</span><span class='line'>    <span class="na">android:pivotY=</span><span class="s">&quot;50%&quot;</span>
</span><span class='line'>    <span class="na">android:duration=</span><span class="s">&quot;10000&quot;</span>
</span><span class='line'>  <span class="nt">/&gt;</span> <span class="c">&lt;!-- 旋转变换 --&gt;</span>
</span><span class='line'><span class="nt">&lt;/set&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>启动补间动画JAVA代码:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>                <span class="c1">//重写onClick方法</span>
</span><span class='line'>       <span class="n">ImageView</span> <span class="n">iv</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">iv</span><span class="o">);</span>
</span><span class='line'>       <span class="n">Animation</span> <span class="n">animation</span> <span class="o">=</span> <span class="n">AnimationUtils</span><span class="o">.</span><span class="na">loadAnimation</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">anim</span><span class="o">.</span><span class="na">tween_ani</span><span class="o">);</span>
</span><span class='line'>       <span class="n">iv</span><span class="o">.</span><span class="na">startAnimation</span><span class="o">(</span><span class="n">animation</span><span class="o">);</span>            <span class="c1">//启动动画            </span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>点击按钮，启动补间动画，可以看见螃蟹从中心慢慢旋转显现出来。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/262039309214990.png" alt="image" /><img src="http://images.cnitblog.com/i/602984/201403/262039459996150.png" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记21--消息提示之Toast和Notification]]></title>
    <link href="http://chendd.github.io/blog/2013/03/25/android_study_21/"/>
    <updated>2013-03-25T21:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/25/android_study_21</id>
    <content type="html"><![CDATA[<h4>1、Toast</h4>

<p>&#160; &#160; &#160; &#160;Toast译为土司，类似切片面包，用于弹出比较快速的及时提示信息。当Toast被显示时，
虽然它悬浮应用程序最上方，但是并未获得焦点。它的设计就是为了提示有用的信息，而不打扰用户其他操作。
最使用简单：</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 第一个参数：当前的上下文环境。可用getApplicationContext()或this  </span>
</span><span class='line'><span class="c1">// 第二个参数：要显示的字符串。也可是R.string中字符串ID  </span>
</span><span class='line'><span class="c1">// 第三个参数：显示的时间长短。Toast默认的有两个LENGTH_LONG(长)和LENGTH_SHORT(短)，也可以使用毫秒,如2000ms</span>
</span><span class='line'><span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span> <span class="s">&quot;简单的Toast&quot;</span><span class="o">,</span><span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>当然你也可以设置图片和显示位置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">toast</span> <span class="o">=</span> <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span> <span class="s">&quot;可选位置带图片的Toast&quot;</span><span class="o">,</span>
</span><span class='line'>           <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">);</span>
</span><span class='line'><span class="c1">//第一个参数：设置toast在屏幕中显示的位置。我现在的设置是居中靠顶  </span>
</span><span class='line'><span class="c1">//第二个参数：相对于第一个参数设置toast位置的横向X轴的偏移量，正数向右偏移，负数向左偏移  </span>
</span><span class='line'><span class="c1">//第三个参数：同的第二个参数道理一样  </span>
</span><span class='line'><span class="c1">//如果你设置的偏移量超过了屏幕的范围，toast将在屏幕内靠近超出的那个边界显示</span>
</span><span class='line'><span class="n">toast</span><span class="o">.</span><span class="na">setGravity</span><span class="o">(</span><span class="n">Gravity</span><span class="o">.</span><span class="na">CENTER</span><span class="o">,</span> <span class="o">-</span><span class="mi">50</span><span class="o">,</span> <span class="mi">100</span><span class="o">);</span>
</span><span class='line'><span class="c1">//获得toast的布局 </span>
</span><span class='line'><span class="n">LinearLayout</span> <span class="n">toastView</span> <span class="o">=</span> <span class="o">(</span><span class="n">LinearLayout</span><span class="o">)</span> <span class="n">toast</span><span class="o">.</span><span class="na">getView</span><span class="o">();</span>
</span><span class='line'><span class="c1">//设置图片 </span>
</span><span class='line'><span class="n">ImageView</span> <span class="n">imageCodeProject</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ImageView</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">());</span>
</span><span class='line'><span class="n">imageCodeProject</span><span class="o">.</span><span class="na">setImageResource</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">ic_launcher</span><span class="o">);</span>
</span><span class='line'><span class="c1">//添加图片 </span>
</span><span class='line'><span class="n">toastView</span><span class="o">.</span><span class="na">addView</span><span class="o">(</span><span class="n">imageCodeProject</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'><span class="n">toast</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/i/602984/201403/252000307171089.png" alt="image" /></p>

<p>或者自定义Toast显示：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//LayoutInflater这个类用来实例化XML文件到其相应的视图对象的布局</span>
</span><span class='line'><span class="n">LayoutInflater</span> <span class="n">inflater</span> <span class="o">=</span> <span class="n">getLayoutInflater</span><span class="o">();</span>
</span><span class='line'><span class="n">View</span> <span class="n">layout</span> <span class="o">=</span> <span class="n">inflater</span><span class="o">.</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">custom</span><span class="o">,</span>
</span><span class='line'>           <span class="o">(</span><span class="n">ViewGroup</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">llToast</span><span class="o">));</span>
</span><span class='line'><span class="n">ImageView</span> <span class="n">image</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageView</span><span class="o">)</span> <span class="n">layout</span>
</span><span class='line'>           <span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tvImageToast</span><span class="o">);</span>
</span><span class='line'><span class="n">image</span><span class="o">.</span><span class="na">setImageResource</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">ic_launcher</span><span class="o">);</span>
</span><span class='line'><span class="n">TextView</span> <span class="n">title</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span> <span class="n">layout</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tvTitleToast</span><span class="o">);</span>
</span><span class='line'><span class="c1">//设置标题</span>
</span><span class='line'><span class="n">title</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;Attention&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">TextView</span> <span class="n">text</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span> <span class="n">layout</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tvTextToast</span><span class="o">);</span>
</span><span class='line'><span class="c1">//设置内容</span>
</span><span class='line'><span class="n">text</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;完全自定义Toast&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">toast</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Toast</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">());</span>
</span><span class='line'><span class="n">toast</span><span class="o">.</span><span class="na">setGravity</span><span class="o">(</span><span class="n">Gravity</span><span class="o">.</span><span class="na">RIGHT</span> <span class="o">|</span> <span class="n">Gravity</span><span class="o">.</span><span class="na">TOP</span><span class="o">,</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">40</span><span class="o">);</span>
</span><span class='line'><span class="n">toast</span><span class="o">.</span><span class="na">setDuration</span><span class="o">(</span><span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">);</span>
</span><span class='line'><span class="n">toast</span><span class="o">.</span><span class="na">setView</span><span class="o">(</span><span class="n">layout</span><span class="o">);</span>
</span><span class='line'><span class="n">toast</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/i/602984/201403/252000488732475.png" alt="image" /></p>

<p>Toast提示消息也可以来自其他线程：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Handler</span> <span class="n">handler</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Handler</span><span class="o">();</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">showToast</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">handler</span><span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="k">new</span> <span class="nf">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span> <span class="s">&quot;我来自其他线程！&quot;</span><span class="o">,</span>
</span><span class='line'>                        <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/i/602984/201403/252001046234263.png" alt="image" /></p>

<h4>2、Notification</h4>

<p>&#160; &#160; &#160; &#160;Notification位于手机状态栏。状态栏位于手机屏幕的最上层，通常显示电池电量、信号强度等信息。
按住状态栏往下拉就可以打开查看系统提示信息。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/252001363571067.png" alt="image" /></p>

<p>如果要添加一个Notification,需要了解NotificationManager和Notification</p>

<ul>
<li>a、NotificationManager(通知管理器)
NotificationManager负责通知用户事件的发生.
NotificationManager有三个公共方法:

<ul>
<li>cancel(int id) 取消以前显示的一个通知.假如是一个短暂的通知，试图将隐藏，假如是一个持久的通知，将从状态条中移走.</li>
<li>cancelAll() 取消以前显示的所有通知.</li>
<li>notify(int id, Notification notification) 把通知持久的发送到状态条上.</li>
</ul>
</li>
<li>b、Notification代表着一个通知
Notification的属性：

<ul>
<li>audioStreamType 当声音响起时，所用的音频流的类型</li>
<li>contentIntent 当通知条目被点击，就执行这个被设置的Intent.</li>
<li>contentView 当通知被显示在状态条上的时候，同时这个被设置的视图被显示.</li>
<li>defaults 指定哪个值要被设置成默认的.</li>
<li>deleteIntent 当用户点击"Clear All Notifications"按钮区删除所有的通知的时候，这个被设置的Intent被执行.</li>
<li>icon 状态条所用的图片.</li>
<li>iconLevel 假如状态条的图片有几个级别，就设置这里.</li>
<li>ledARGB LED灯的颜色.</li>
<li>ledOffMS LED关闭时的闪光时间（以毫秒计算）</li>
<li>ledOnMS LED开始时的闪光时间（以毫秒计算）</li>
<li>number 这个通知代表事件的号码</li>
<li>sound 通知的声音</li>
<li>tickerText 通知被显示在状态条时，所显示的信息</li>
<li>vibrate 振动模式.</li>
<li>when 通知的时间戳.</li>
</ul>
</li>
</ul>


<p>完整设置Notification代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Intent</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Intent</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">NotifiedActivity</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="c1">// pendingIntent是一种特殊的Intent。主要的区别在于Intent的执行立刻的，而pendingIntent的执行不是立刻的</span>
</span><span class='line'><span class="n">PendingIntent</span> <span class="n">pi</span> <span class="o">=</span> <span class="n">PendingIntent</span><span class="o">.</span><span class="na">getActivity</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'><span class="c1">//创建一个Notification对象</span>
</span><span class='line'><span class="n">Notification</span> <span class="n">myNotification</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Notification</span><span class="o">();</span>
</span><span class='line'><span class="c1">//Notification的图标</span>
</span><span class='line'><span class="n">myNotification</span><span class="o">.</span><span class="na">icon</span><span class="o">=</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">header</span><span class="o">;</span>
</span><span class='line'><span class="c1">//Notification的显示内容</span>
</span><span class='line'><span class="n">myNotification</span><span class="o">.</span><span class="na">tickerText</span><span class="o">=</span><span class="s">&quot;点击查看&quot;</span><span class="o">;</span>
</span><span class='line'><span class="c1">//通知时发出的默认声音</span>
</span><span class='line'><span class="n">myNotification</span><span class="o">.</span><span class="na">defaults</span><span class="o">=</span><span class="n">Notification</span><span class="o">.</span><span class="na">DEFAULT_SOUND</span><span class="o">;</span>
</span><span class='line'><span class="c1">//设置通知显示的参数</span>
</span><span class='line'><span class="n">myNotification</span><span class="o">.</span><span class="na">setLatestEventInfo</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;示例&quot;</span><span class="o">,</span> <span class="s">&quot;点击查看&quot;</span><span class="o">,</span> <span class="n">pi</span><span class="o">);</span>
</span><span class='line'><span class="c1">//通知管理器</span>
</span><span class='line'><span class="n">NotificationManager</span> <span class="n">notificationManager</span> <span class="o">=</span> <span class="o">(</span><span class="n">NotificationManager</span><span class="o">)</span><span class="n">getSystemService</span><span class="o">(</span><span class="n">NOTIFICATION_SERVICE</span><span class="o">);</span>
</span><span class='line'><span class="c1">//发送Notification</span>
</span><span class='line'><span class="n">notificationManager</span><span class="o">.</span><span class="na">notify</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">myNotification</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行效果：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/252003506393911.png" alt="image" /></p>

<p>点击添加Notification，</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/252005226543599.png" alt="image" /></p>

<p>点击启动另一个Activity查看Notification</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/252005396233915.png" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记20--连接组件之Intent和IntentFilter]]></title>
    <link href="http://chendd.github.io/blog/2013/03/24/android_study_20/"/>
    <updated>2013-03-24T21:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/24/android_study_20</id>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;上次刚了解完Android的四大组件，现在学习组件间通信的Intent和IntentFilter</p>

<h2>一、Intent</h2>

<h4>1、简述</h4>

<p>&#160; &#160; &#160; &#160;Intent(意图)在应用程序运行时连接两个不同组件，是一种运行时的绑定机制。一般应用是通过Intent向Android系统
发出某种请求，根据查询各个组件声明的IntentFilter，找到组件并运行它。</p>

<!--more--> 


<h4>2、使用机制</h4>

<p>&#160; &#160; &#160; &#160;前面介绍的四大组件中的Activity、Services、BroadcasReceiver的通信全部使用的是Intent，但是各个组件使用Intent的机制不同。</p>

<ul>
<li>a、Activity
　　当需要激活一个Activity组件时，需要调用Context.startActivity或Context.startActivityForResult方法来传递Intent</li>
<li>b、Service
　　当需要启动或绑定一个Service组件时，会通过Context.startService和Context.bindService方法实现Intent的传递</li>
<li>c、BroadcastReceiver
　　通过Context.sendBroadcast()、sendOrderBroadcast()或sendStickyBroadcast()方法传递的，当BroadcastIntent被广播后，
　　所有IntentFilter过滤条件满足的组件将被激活。</li>
</ul>


<p>&#160; &#160; &#160; &#160;在以上的三种情况下，当Intent被传递出后，Android系统会找到适合的activity，service,或者是多个broadcast receiver去响应这个intent。
这三种情况不会存在重叠的部分，它们相互独立，互不干扰。</p>

<h4>3、组成要素</h4>

<p>&#160; &#160; &#160; &#160;Intent是由组件名称、Action、Data、Category、Extra及Flag六部分组成的。</p>

<ul>
<li>a、组件名称
　　实际上就是一个ComponentName对象，用于标识唯一的应用程序组件，即指明期望的Intent组件，
它是目标的组件的完整限定名（包名+类名） 例如： &ldquo;com.android,.test.TestActivity&rdquo;,该字段是可选的
如果没有写，Android要通过IntentFilter(相当于过滤器，后面详细介绍)，比较intent对象和组件关联结构去选择相应的组件，
所以组件名称为空的也要写IntentFilter。</li>
</ul>


<p>可以通过 setComponent() , setClass() 或者 setClassName()进行设置。 可以通过 getComponent() 进行读取</p>

<ul>
<li>b、Action
&#160; &#160; &#160; &#160;表示所触发动作名称的常量字符串，Android已定义的如下图：</li>
</ul>


<p><img src="http://images.cnitblog.com/i/602984/201403/242001416239578.gif" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;开发人员也可以自定义Action，自定义的action 应该包含包名作为前缀： 例如"com.example.project.SHOW_COLOR"</p>

<ul>
<li>c、Data
&#160; &#160; &#160; &#160;主要是对Intent消息中数据的封装，主要描述Intent的动作所操作到的数据URI和类型，不同类型的Action会有不同Data的封装，
例如打电话的Intent的动作会封装</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tel://格式的电话URI，而ACTION_VIEW的Intent中Data则会封装http:格式的URI。正确的Data封装对Intent匹配请求同样非常重要</span></code></pre></td></tr></table></div></figure>


<ul>
<li>d、Category
&#160; &#160; &#160; &#160;是对目标组件类别信息的描述，同样是常量字符串。一个Intent中可以包含多个Category。与Category相关的方法有三个，addCategory()、removeCategory()、getCategorys()
　　Android已定义的如下图：</li>
</ul>


<p><img src="http://images.cnitblog.com/i/602984/201403/242001588114596.gif" alt="image" /></p>

<ul>
<li><p>e、Extra
&#160; &#160; &#160; &#160;封装一些额外的附加信息，这些信息是以键值对形式存在的。Intent可以通过putExtras()、getExtras()方法来存储和获取Extra。</p></li>
<li><p>f、Flag
&#160; &#160; &#160; &#160;有关系统如何启动组件的标志位。</p></li>
</ul>


<h2>二、IntentFilter</h2>

<p>&#160; &#160; &#160; &#160;为了能支持隐式Intent(即组件名称为空)，需要声明IntentFilter。它的使用方法非常简单，仅声明该应用接收什么样的Intent请求即可。
IntentFilter过滤Intent时，一般通过Action、Data及Category三个进行测试：</p>

<ul>
<li>a、Action测试,一个Intent只能设置一种Action，但是一个IntentFilter却可设置多个Action过滤。当IntentFilter设置多个Action时，只需一个满足即可完成验证。
如果Intent中没有包含Action、只要IntentFilter中含有Action时，便可以成功，反过来IntentFilter中没有任何Action，所有Intent都不能通过测试。</li>
<li>b、Data测试,包含两部分，即数据的URI和数据类型，而数据URI又被分成三部分进行匹配(Schema://host:port/path),只有指定的这些全部匹配时,Data测试才会成功</li>
<li>c、Category测试,IntentFilter同样可以设置多个Category，当Intent中的Category与IntentFilter中的一个Category完全匹配时，便会通过Category的测试，Filter可以列出额外的category，但是不能漏掉 Intent 对象包含的任意一个Category，但当IntentFilter没有设置Category时，只能和没有设置Category的Intent相匹配。</li>
</ul>


<p>&#160; &#160; &#160; &#160;原则上，一个没有任何categorys的 Intent将总是通过此测试。大多数情况下是正确的。然而也有例外，android对待所有传入startActivity()中的隐式视图都认为它们至少包含了一个"android.intent.category.DEFAULT". . 因此，希望接收这些隐式意图的activities必须在在它们的 intent filters 中包含”android.intent.category.DEFAULT” 有（对于含"android.intent.action.MAIN" and &ldquo;android.intent.category.LAUNCHER"的filter 则是例外。因为它们标记了此activity开启了一个新的task和将出现在 auncher screen。它们也可以包含“com.intent.category.DEFAULT”,但没必要）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记19--四大组件之BroadcastReciver(广播接收者)]]></title>
    <link href="http://chendd.github.io/blog/2013/03/22/android_study_19_2/"/>
    <updated>2013-03-22T21:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/22/android_study_19_2</id>
    <content type="html"><![CDATA[<h2>二、BroadcastReciver(广播接收者)</h2>

<h4>1、简述</h4>

<p>&#160; &#160; &#160; &#160;BroadcastReciver位于android.content包下，主要用于对广播消息(Intent)的过滤并响应的控件。可以理解为全局的监听器。
BroadcastReceiver 自身并不实现图形用户界面，但是当它收到某个广播消息后，BroadcastReceiver可以启动Activity作为响应，
或者启动Service服务等等。</p>

<!--more--> 


<h4>2、运行原理</h4>

<p>&#160; &#160; &#160; &#160;当其他应用程序发出广播消息之后，所有注册了BroadcastReciver的应用程序将会检测注册时的(过滤器)IntentFilter是否与发出的广播消息相匹配，匹配则会调用BroadcastReciver的onReceive()方法进行处理。所以开发BroadcastReciver应用，主要是对onReceive()方法的实现</p>

<h4>3、生命周期</h4>

<p>&#160; &#160; &#160; &#160;生命周期不像Activity那么复杂，一般生命周期是：启动(被其他程序调用，接收到匹配的广播)&ndash;>运行(执行onReceive()方法)&ndash;>结束(释放资源)
每次广播到来时,会重新创建BroadcastReceiver对象 ,并且调用onReceive()方法,执行完以后,该对象即被销毁。当onReceive()方法在10秒内没有执行完毕，
Android会认为该程序无响应。所以在BroadcastReceiver里不能做一些比较耗时的操作,否侧会弹出 ANR(Application NoResponse)的对话框。</p>

<h4>4、广播的类型</h4>

<p>&#160; &#160; &#160; &#160;主要有以下两种类型:</p>

<ul>
<li>a、普通广播
　　普通广播对于多个接收者来说是完全异步的，通常每个接收者都无需等待即可以接收到广播，接收者相互之间不会有影响。对于这种广播，接收者无法终止广播，即无法阻止其他接收者的接收动作,也无法将处理结果传递给下一个接收者。</li>
<li>b、有序广播
　　有序广播比较特殊，它每次只发送到优先级较高的接收者那里，然后由优先级高的接受者再传播到优先级低的接收者那里，优先级高的接收者有能力终止这个广播，并且优先级高的广播可以传递消息给优先级底的广播。</li>
</ul>


<h4>5、广播的收发</h4>

<ul>
<li>a、发送广播:构建Intent对象，可调用sendBroadcast(Intent)方法将广播发出。另外还有sendOrderedBroadcast()，sendStickyBroadcast()等方法</li>
<li>b、接收广播:通过定义一个继承BroadcastReceiver类来实现，继承该类后覆盖其onReceiver方法，并在该方法中响应事件</li>
</ul>


<h4>6、广播的注册</h4>

<p>&#160; &#160; &#160; &#160;创建完BroadcastReceiver之后，还不能够使它进入工作状态，我们需要为它注册一个指定的广播地址,否则无法接收广播
　　一般有如下两种注册:</p>

<ul>
<li>a、静态注册</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;receiver</span> <span class="na">android:name=</span><span class="s">&quot;.MyReceiver&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;intent-filter&gt;</span>
</span><span class='line'>      <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">&quot;android.intent.action.MY_BROADCAST&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">&quot;android.intent.category.DEFAULT&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/intent-filter&gt;</span>
</span><span class='line'><span class="nt">&lt;/receiver&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>b、动态注册</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">MyReceiver</span> <span class="n">receiver</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MyReceiver</span><span class="o">();</span>
</span><span class='line'><span class="n">IntentFilter</span> <span class="n">filter</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">IntentFilter</span><span class="o">();</span>
</span><span class='line'><span class="n">filter</span><span class="o">.</span><span class="na">addAction</span><span class="o">(</span><span class="s">&quot;android.intent.action.MY_BROADCAST&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">registerReceiver</span><span class="o">(</span><span class="n">receiver</span><span class="o">,</span> <span class="n">filter</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>　　两种注册方法的区别是静态注册是常驻内存的，应用关闭是也可以接收广播，而动态注册是根着程序的生命周期，所以当这个程序退出时如果没有解除注册，系统会报一个异常，提示我们是否忘记解除注册。这时要加入解除注册的代码:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onDestroy</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">super</span><span class="o">.</span><span class="na">onDestroy</span><span class="o">();</span>
</span><span class='line'>  <span class="n">unregisterReceiver</span><span class="o">(</span><span class="n">receiver</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>7、运行实例</p>

<p>写个例子，运行程序时发送广播，后台日志打印消息。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/221645021152216.png" alt="image" /></p>

<p>MyReceiver代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyReceiver</span> <span class="kd">extends</span> <span class="n">BroadcastReceiver</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">TAG</span> <span class="o">=</span> <span class="s">&quot;MyReceiver&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onReceive</span><span class="o">(</span><span class="n">Context</span> <span class="n">arg0</span><span class="o">,</span> <span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">msg</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getStringExtra</span><span class="o">(</span><span class="s">&quot;msg&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="n">msg</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Activity发送广播代码:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Intent</span><span class="o">(</span><span class="s">&quot;android.intent.action.MY_BROADCAST&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;msg&quot;</span><span class="o">,</span> <span class="s">&quot;Hello Receiver!&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">sendBroadcast</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>直接用静态注册广播。上述例子的广播是我们自己写的。Android提供许多丰富的原生广播地址。常用如下：</p>

<ul>
<li>开机启动:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="n">action</span> <span class="nl">android:</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;android.intent.action.BOOT_COMPLETED&quot;</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>网络连接:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="n">action</span> <span class="nl">android:</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;android.net.conn.CONNECTIVITY_CHANGE&quot;</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>电量变化:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="n">action</span> <span class="nl">android:</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;android.intent.action.BATTERY_CHANGED&quot;</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>时间改变:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="n">action</span> <span class="nl">android:</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;android.intent.action.DATE_CHANGED&quot;</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>只要更改自定义Receiver就可以触发一些相应事件。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记19--四大组件之Services(服务)]]></title>
    <link href="http://chendd.github.io/blog/2013/03/22/android_study_19_1/"/>
    <updated>2013-03-22T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/22/android_study_19_1</id>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;一个Android应用主要由四个基本组件组成，Android四大基本组件分别是Activity，Content Provider内容提供者，Service服务，BroadcastReceiver广播接收器。其中Activity和Content Provider在前面都有介绍过。这里主要讲讲Service服务和BroadcastReceiver广播接收器。</p>

<h2>一、Services(服务)</h2>

<!--more-->


<h4>1、简述</h4>

<p>&#160; &#160; &#160; &#160;Services(服务)简单来说就是剥夺界面的Activity。它和Activity很多概念都是相似的，都是封装有一个完整的功能逻辑实现。
Services是运行在后台的一段代码，它可以运行在它自己的进程,也可以运行在其他应用程序进程的上下文（context）里面，
其它的组件可以绑定到一个服务（Service）上面，通过远程过程调用（RPC）来调用这个方法。常见的Services如后台音乐播放，
后台计算数据。</p>

<h4>2、运行原理</h4>

<p>&#160; &#160; &#160; &#160;有两种运行方式，原理如下：</p>

<ul>
<li>a、使用Context.startService()来启动一个Service，从而可以在后台调用Service。同时，系统也将保持这个Service一直执行，
　　　  直到这个Service运行结束。</li>
<li>b、使用Context.bindService()方法，连接到一个Service上（如果这个Service还没有运行将启动它）。当连接到一个Service之后，
　　     我们还可以Service提供的接口与它进行通讯。</li>
</ul>


<h4>3、生命周期</h4>

<p>　　官方生命周期的图示:</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/221040533348708.png" alt="image" />　　</p>

<ul>
<li>a、startService后，即使调用startService的进程结束了，Service仍然还存在，直到有进程调用stopService，或者Service自己自杀(stopSelf())。</li>
<li>b、bindService后，Service就和调用bindService的进程同生共死了，也就是说当调用bindService的进程死了，那么它bind的Service也要跟着被结束，
　　　  当然期间也可以调用unbindservice让 Service结束。</li>
<li>c、两种方式混合使用时，比如说你startService了，我bindService了，那么只有你stopService了而且我也unbindservice了，这个Service才会被结束。</li>
</ul>


<h4>4、使用步骤</h4>

<ul>
<li><p>a、继承service类(位于android.app包下，一般用它的子类IntentService)</p></li>
<li><p>b、AndroidManifast.xml配置清单文件中<application>节点里对服务进行配置</p></li>
</ul>


<p>　　　 <service name=".SMSService"/>
- c、服务不能自己运行,需要通过Contex.startService()或Contex.bindService()启动服务</p>

<p>&#160; &#160; &#160; &#160;通过startService()方法启动的服务于调用者没有关系,即使调用者关闭了,服务仍然运行想停止服务要调用Context.stopService(),
此时系统会调用onDestory(),使用此方法启动时,服务首次启动系统先调用服务的onCreate()&ndash;>onStart(),如果服务已经启动再次调用只会触发onStart()方法
使用bindService()启动的服务与调用者绑定,只要调用者关闭服务就终止,使用此方法启动时,服务首次启动系统先调用服务的onCreate()&ndash;>onBind(),
如果服务已经启动再次调用不会再触发这2个方法,调用者退出时系统会调用服务的onUnbind()&ndash;>onDestory(),想主动解除绑定可使用Contex.unbindService(),
系统依次调用onUnbind()&ndash;>onDestory();</p>

<p>&#160; &#160; &#160; &#160;区别使用 startService()还是bindService()就要看是否要和调用者进行通信，由于startService()和访问者不存在太多联系，所有有进行通信的要用bindService()。</p>

<p>通过Service提供IBinder OnBind(Intent intent) 返回要通信的数据，在OnServiceConnected()方法 返回该Binder给调用者。</p>

<h4>5、运行实例</h4>

<p>&#160; &#160; &#160; &#160;运用两种启动Service服务写个后台播放音乐的例子</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/221327089598932.png" alt="image" /></p>

<p>MyServices主要代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">TAG</span> <span class="o">=</span> <span class="s">&quot;MyService&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="n">MediaPlayer</span> <span class="n">player</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">IBinder</span> <span class="nf">onBind</span><span class="o">(</span><span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;My Service Created&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onCreate&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">player</span> <span class="o">=</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">raw</span><span class="o">.</span><span class="na">ten_year</span><span class="o">);</span><span class="c1">//运行例子是，需要替换具体音乐的名称  </span>
</span><span class='line'>        <span class="n">player</span><span class="o">.</span><span class="na">setLooping</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span> <span class="c1">// Set looping  </span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onDestroy</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;My Service Stopped&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onDestroy&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">player</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onStart</span><span class="o">(</span><span class="n">Intent</span> <span class="n">intent</span><span class="o">,</span> <span class="kt">int</span> <span class="n">startid</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;My Service Started&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onStart&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">player</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>MyBindService主要代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">TAG</span> <span class="o">=</span> <span class="s">&quot;MyBindService&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="n">MediaPlayer</span> <span class="n">player</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="n">MyBinder</span> <span class="n">mybinder</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MyBinder</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">class</span> <span class="nc">MyBinder</span> <span class="kd">extends</span> <span class="n">Binder</span><span class="o">{</span><span class="c1">//需要新建个内部的Binder类</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="n">MyBindService</span> <span class="nf">getService</span><span class="o">(){</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">MyBindService</span><span class="o">.</span><span class="na">this</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">IBinder</span> <span class="nf">onBind</span><span class="o">(</span><span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">mybinder</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;My Service Created&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onCreate&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">player</span> <span class="o">=</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">raw</span><span class="o">.</span><span class="na">ten_year</span><span class="o">);</span><span class="c1">//运行例子是，需要替换音乐的名称  </span>
</span><span class='line'>        <span class="n">player</span><span class="o">.</span><span class="na">setLooping</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span> <span class="c1">// Set looping   </span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">playMusic</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">player</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;playMusic&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onDestroy</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;My Service Stopped&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onDestroy&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">player</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onStart</span><span class="o">(</span><span class="n">Intent</span> <span class="n">intent</span><span class="o">,</span> <span class="kt">int</span> <span class="n">startid</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;My Service Started&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onStart&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Activity注册按钮事件，调用Service服务：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ServiceConnection</span> <span class="n">conn</span><span class="o">=</span><span class="k">new</span> <span class="nf">ServiceConnection</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onServiceDisconnected</span><span class="o">(</span><span class="n">ComponentName</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onServiceConnected</span><span class="o">(</span><span class="n">ComponentName</span> <span class="n">arg0</span><span class="o">,</span> <span class="n">IBinder</span> <span class="n">binder</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>            <span class="n">MyBinder</span> <span class="n">mBinder</span> <span class="o">=</span> <span class="o">(</span><span class="n">MyBinder</span><span class="o">)</span> <span class="n">binder</span><span class="o">;</span>
</span><span class='line'>            <span class="n">MyBindService</span> <span class="n">mService</span> <span class="o">=</span> <span class="n">mBinder</span><span class="o">.</span><span class="na">getService</span><span class="o">();</span><span class="c1">//取到自己的Service</span>
</span><span class='line'>            <span class="n">mService</span><span class="o">.</span><span class="na">playMusic</span><span class="o">();</span> <span class="c1">// 调用服务要执行的方法</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">src</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="o">(</span><span class="n">src</span><span class="o">.</span><span class="na">getId</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn_start</span><span class="o">:</span>
</span><span class='line'>            <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onClick: start srvice&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">startService</span><span class="o">(</span><span class="k">new</span> <span class="nf">Intent</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">MyService</span><span class="o">.</span><span class="na">class</span><span class="o">));</span>
</span><span class='line'>            <span class="k">break</span><span class="o">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn_stop</span><span class="o">:</span>
</span><span class='line'>            <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onClick: stop srvice&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">stopService</span><span class="o">(</span><span class="k">new</span> <span class="nf">Intent</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">MyService</span><span class="o">.</span><span class="na">class</span><span class="o">));</span>
</span><span class='line'>            <span class="k">break</span><span class="o">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn_bind</span><span class="o">:</span>
</span><span class='line'>            <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onClick: bind srvice&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">bindService</span><span class="o">(</span><span class="k">new</span> <span class="nf">Intent</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span><span class="n">MyBindService</span><span class="o">.</span><span class="na">class</span><span class="o">),</span> <span class="n">conn</span><span class="o">,</span><span class="n">BIND_AUTO_CREATE</span><span class="o">);</span>
</span><span class='line'>            <span class="k">break</span><span class="o">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn_unbind</span><span class="o">:</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onClick: unbind srvice&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">unbindService</span><span class="o">(</span><span class="n">conn</span><span class="o">);</span>
</span><span class='line'>                <span class="n">flag</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>          <span class="k">break</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意：unbind()调用是要进行判断，没bind()后不能多次调用unbind()，否则会报异常:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">IllegalArgumentException</span><span class="o">:</span> <span class="n">Service</span> <span class="n">not</span> <span class="n">registered</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后别忘了AndroidManifast.xml里声明服务：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>    <span class="nt">&lt;service</span> <span class="na">android:enabled=</span><span class="s">&quot;true&quot;</span> <span class="na">android:name=</span><span class="s">&quot;.MyService&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;service</span> <span class="na">android:enabled=</span><span class="s">&quot;true&quot;</span> <span class="na">android:name=</span><span class="s">&quot;.MyBindService&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>依次点击四个按钮打印的日志：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>03-22 07:19:44.116: V/ServicesDemo(18347): onClick: start srvice
</span><span class='line'>03-22 07:19:44.166: V/MyService(18347): onStart
</span><span class='line'>03-22 07:19:48.807: V/ServicesDemo(18347): onClick: stop srvice
</span><span class='line'>03-22 07:19:48.837: V/MyService(18347): onDestroy
</span><span class='line'>03-22 07:19:50.957: V/ServicesDemo(18347): onClick: bind srvice
</span><span class='line'>03-22 07:19:50.997: V/MyBindService(18347): onCreate
</span><span class='line'>03-22 07:19:51.067: V/MyBindService(18347): playMusic
</span><span class='line'>03-22 07:19:55.997: V/ServicesDemo(18347): onClick: unbind srvice
</span><span class='line'>03-22 07:19:56.097: V/MyBindService(18347): onDestroy
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;这里可以同时start srvice和bind srvice，这时就有两个相同的服务，根据调用的不同时间，播放不同进度的音乐。</p>

<p>&#160; &#160; &#160; &#160;调用系统服务getSystemService是Activity中的方法，根据传入的name来取得对应的服务对象，这些服务名称参数都是Context类中的常量：</p>

<p>传入的Name 返回的对象 说明</p>

<pre><code>WINDOW_SERVICE WindowManager 管理打开的窗口程序
LAYOUT_INFLATER_SERVICE LayoutInflater 取得xml里定义的view
ACTIVITY_SERVICE ActivityManager 管理应用程序的系统状态
POWER_SERVICE PowerManger 电源的服务
ALARM_SERVICE AlarmManager 闹钟的服务
NOTIFICATION_SERVICE NotificationManager 状态栏的服务
KEYGUARD_SERVICE KeyguardManager 键盘锁的服务
LOCATION_SERVICE LocationManager 位置的服务，如GPS
SEARCH_SERVICE SearchManager 搜索的服务
VEBRATOR_SERVICE Vebrator 手机震动的服务
CONNECTIVITY_SERVICE Connectivity 网络连接的服务
WIFI_SERVICE WifiManager Wi-Fi服务
TELEPHONY_SERVICE TeleponyManager 电话服务
</code></pre>

<p>BroadcastReceiver广播接收器放在下一篇介绍吧！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记18--Adapter简介]]></title>
    <link href="http://chendd.github.io/blog/2013/03/19/android_study_18/"/>
    <updated>2013-03-19T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/19/android_study_18</id>
    <content type="html"><![CDATA[<h2>一、Adapter</h2>

<h4>1、简述</h4>

<p>&#160; &#160; &#160; &#160;最近学的GridView和Gallery 都有用到Adapter适配器，发现它貌似蛮重要的。专门上网搜了下有关Adapter的资料。android绝大多数应用是JAVA语言编写的，Adapter在JAVA里是专门的一种设计模式，目的是使两个原本没有关联的类结合一起使用。
比如水管A是25mm的，水管B是40mm的，假设水管厚度不计，怎样连接两种水管一起使用？这时就需要适配器C，适配器C类似水管，一头25mm，另一头40mm，这样就可以连接A、B水管一起使用了。</p>

<!--more-->


<h4>2、Android中的Adapter</h4>

<p>&#160; &#160; &#160; &#160;Android里的Adapter是View视图与data数据之间的桥梁，Adapter提供对数据的访问，也负责为每一项数据产生一个对应的视图。下图是Data、Adapter、View三者的关系：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/181940309126689.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;Andpter类结构体系：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/181940563966771.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;在这些适配器中，BaseAdapter由于比较灵活用得最多，SimpleCursorAdapter貌似也挺常用的，允许绑定游标来显示数据。</p>

<h4>3、Adapter重要方法</h4>

<p>&#160; &#160; &#160; &#160;无论重写哪种Adapter，一般都要重写底下四个方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 所表示的数据的项数</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">getCount</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 返回指定位置的数据项</span>
</span><span class='line'><span class="n">Object</span> <span class="nf">getItem</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 返回指定位置的数据项的ID</span>
</span><span class='line'><span class="kt">long</span> <span class="nf">getItemId</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 为每一个数据项产生相应的视图</span>
</span><span class='line'><span class="n">View</span> <span class="nf">getView</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">,</span> <span class="n">View</span> <span class="n">convertView</span><span class="o">,</span> <span class="n">ViewGroup</span> <span class="n">parent</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;有网友查看源码发现其中getItem(),和getItemId()这两个方法对于android来讲是没有用的，单纯是为了客户端调用的方便。就上我上一篇重写getItem()和getItemId()来设置初始position发现不起作用。</p>

<h4>4、简单例子：</h4>

<p>&#160; &#160; &#160; &#160;关于扩展BaseAdapter自定义的代码参考ListView、GridView、Gallery文章都有，这边不再贴出来。主要贴出如何构造一个SimpleCursorAdapter来显示联系人信息代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">listView</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ListView</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// 系统里的表</span>
</span><span class='line'>        <span class="n">Cursor</span> <span class="n">cursor</span> <span class="o">=</span> <span class="n">getContentResolver</span><span class="o">().</span><span class="na">query</span><span class="o">(</span><span class="n">People</span><span class="o">.</span><span class="na">CONTENT_URI</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span>
</span><span class='line'>                <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">startManagingCursor</span><span class="o">(</span><span class="n">cursor</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ListAdapter</span> <span class="n">listAdapter</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">SimpleCursorAdapter</span><span class="o">(</span><span class="k">this</span><span class="o">,</span><span class="c1">//上下文</span>
</span><span class='line'>                <span class="n">android</span><span class="o">.</span><span class="na">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">simple_expandable_list_item_1</span><span class="o">,</span><span class="c1">//要显示ListView的样式</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">cursor</span><span class="o">,</span><span class="c1">// 数据源</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span> <span class="n">People</span><span class="o">.</span><span class="na">NAME</span> <span class="o">},</span><span class="c1">// 对应的字段</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span> <span class="n">android</span><span class="o">.</span><span class="na">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">text1</span> <span class="o">});</span><span class="c1">// 显示哪个控件上</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">listView</span><span class="o">.</span><span class="na">setAdapter</span><span class="o">(</span><span class="n">listAdapter</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">listView</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>新增两个联系人，运行效果:</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/182009187561690.png" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记17--Gallery(画廊视图)]]></title>
    <link href="http://chendd.github.io/blog/2013/03/18/android_study_17/"/>
    <updated>2013-03-18T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/18/android_study_17</id>
    <content type="html"><![CDATA[<h2>一、Gallery</h2>

<h4>1、简述</h4>

<p>&#160; &#160; &#160; &#160;Gallery有道翻译为画廊，就叫它画廊控件，主要用来可切换的图片展示，左右滑动可以选择上一张或下一张图片。个人感觉蛮实用的，不过google貌似不推荐使用啊！</p>

<!--more-->


<p><img src="http://images.cnitblog.com/i/602984/201403/172021185521942.png" alt="image" /></p>

<h4>2、常用属性和对应方法如下：</h4>

<p><img src="http://images.cnitblog.com/i/602984/201403/172003163182303.png" alt="image" /></p>

<h4>3、简单例子：</h4>

<p>实现如下例子，C.C女王图片坐镇</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/172004219121997.png" alt="image" /></p>

<p>Activity代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 要展示图片的ID数组</span>
</span><span class='line'>    <span class="kt">int</span><span class="o">[]</span> <span class="n">imageIDs</span><span class="o">={</span>
</span><span class='line'>            <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">item0</span><span class="o">,</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">item1</span><span class="o">,</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">item2</span><span class="o">,</span>
</span><span class='line'>            <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">item3</span><span class="o">,</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">item4</span><span class="o">,</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">item5</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Gallery</span> <span class="n">gl</span><span class="o">=(</span><span class="n">Gallery</span><span class="o">)</span><span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">Gallery01</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// 适配器</span>
</span><span class='line'>        <span class="n">BaseAdapter</span> <span class="n">ba</span><span class="o">=</span><span class="k">new</span> <span class="nf">BaseAdapter</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">//主要是重写getView 方法</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="n">View</span> <span class="nf">getView</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">,</span> <span class="n">View</span> <span class="n">arg1</span><span class="o">,</span> <span class="n">ViewGroup</span> <span class="n">arg2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>                <span class="n">ImageView</span> <span class="n">iv</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ImageView</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;gallery&quot;</span><span class="o">,</span> <span class="n">position</span><span class="o">+</span><span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">iv</span><span class="o">.</span><span class="na">setImageResource</span><span class="o">(</span><span class="n">imageIDs</span><span class="o">[</span><span class="n">position</span><span class="o">]);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">iv</span><span class="o">.</span><span class="na">setScaleType</span><span class="o">(</span><span class="n">ImageView</span><span class="o">.</span><span class="na">ScaleType</span><span class="o">.</span><span class="na">FIT_XY</span><span class="o">);</span>
</span><span class='line'>                <span class="n">iv</span><span class="o">.</span><span class="na">setLayoutParams</span><span class="o">(</span><span class="k">new</span> <span class="n">Gallery</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">(</span><span class="mi">188</span><span class="o">,</span><span class="mi">250</span><span class="o">));</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">iv</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getItemId</span><span class="o">(</span><span class="kt">int</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>                <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="n">Object</span> <span class="nf">getItem</span><span class="o">(</span><span class="kt">int</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCount</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">//return imageIDs.length;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">gl</span><span class="o">.</span><span class="na">setAdapter</span><span class="o">(</span><span class="n">ba</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 设置监听</span>
</span><span class='line'>        <span class="n">gl</span><span class="o">.</span><span class="na">setOnItemClickListener</span><span class="o">(</span>
</span><span class='line'>                <span class="k">new</span> <span class="nf">OnItemClickListener</span><span class="o">(){</span>
</span><span class='line'>                    <span class="nd">@Override</span>
</span><span class='line'>                    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onItemClick</span><span class="o">(</span><span class="n">AdapterView</span><span class="o">&lt;?&gt;</span> <span class="n">arg0</span><span class="o">,</span> <span class="n">View</span> <span class="n">arg1</span><span class="o">,</span>
</span><span class='line'>                            <span class="kt">int</span> <span class="n">arg2</span><span class="o">,</span> <span class="kt">long</span> <span class="n">arg3</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">Gallery</span> <span class="n">gl</span><span class="o">=(</span><span class="n">Gallery</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">Gallery01</span><span class="o">);</span>
</span><span class='line'>                        <span class="n">gl</span><span class="o">.</span><span class="na">setSelection</span><span class="o">(</span><span class="n">arg2</span><span class="o">);</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>        <span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>布局文件较简单：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;LinearLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">android:orientation=</span><span class="s">&quot;vertical&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>    <span class="na">android:gravity=</span><span class="s">&quot;center_vertical&quot;</span>
</span><span class='line'>    <span class="nt">&gt;</span>
</span><span class='line'>   <span class="nt">&lt;Gallery</span>
</span><span class='line'>      <span class="na">android:id=</span><span class="s">&quot;@+id/Gallery01&quot;</span>
</span><span class='line'>      <span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>      <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="na">android:spacing=</span><span class="s">&quot;10dip&quot;</span>
</span><span class='line'>      <span class="na">android:unselectedAlpha=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/LinearLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>4、扩展例子：</h4>

<p>&#160; &#160; &#160; &#160;但是这样做有个弊端，就是图片滑动到最后一张就结束了，如果我想要查看第一张就得一张张的退回去
比较麻烦，不人性化。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/172007199747565.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;我们要实现循环切换图片，从最后一张可跳到第一张去。这时就要修改getCount和getView方法
getCount方法用于返回图像总数，这个总数不能大于图像的实际数（可以小于图像的实际数），否则会抛出越界异常。
当Gallery组件要显示某一个图像时，就会调用getView方法，并将当前的图像索引（position参数）传入该方法。
一般getView方法用于返回每一个显示图像的组件（ImageView对象）。从这一点可以看出，Gallery组件是即时显示图像的，
而不是一下将所有的图像都显示出来。在getView方法中除了创建了ImageView对象，还用从imageIDs数组中获得了相应的图像资源ID来设置在ImageView中显示的图像。</p>

<p>&#160; &#160; &#160; &#160;实现循环切换主要就是当position等于最后一张图片时，它的下一张又回到第一张position = 0，这时我们想到了取余可以实现，
即position%imageIDs.length，值就在0~imageIDs.length-1之间，此时还要设置getCount的值为无穷大，防止抛出越界异常，
设return Integer.MAX_VALUE。</p>

<p>具体修改代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="n">View</span> <span class="nf">getView</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">,</span> <span class="n">View</span> <span class="n">arg1</span><span class="o">,</span> <span class="n">ViewGroup</span> <span class="n">arg2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>                <span class="n">ImageView</span> <span class="n">iv</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ImageView</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;gallery&quot;</span><span class="o">,</span> <span class="n">position</span><span class="o">+</span><span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">//iv.setImageResource(imageIDs[position]);</span>
</span><span class='line'>                <span class="c1">//通过取余来循环取得imageIDs数组中的图像资源ID</span>
</span><span class='line'>                <span class="n">iv</span><span class="o">.</span><span class="na">setImageResource</span><span class="o">(</span><span class="n">imageIDs</span><span class="o">[</span><span class="n">position</span><span class="o">%</span><span class="n">imageIDs</span><span class="o">.</span><span class="na">length</span><span class="o">]);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">iv</span><span class="o">.</span><span class="na">setScaleType</span><span class="o">(</span><span class="n">ImageView</span><span class="o">.</span><span class="na">ScaleType</span><span class="o">.</span><span class="na">FIT_XY</span><span class="o">);</span>
</span><span class='line'>                <span class="n">iv</span><span class="o">.</span><span class="na">setLayoutParams</span><span class="o">(</span><span class="k">new</span> <span class="n">Gallery</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">(</span><span class="mi">188</span><span class="o">,</span><span class="mi">250</span><span class="o">));</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">iv</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCount</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">//return imageIDs.length;</span>
</span><span class='line'>                <span class="c1">// 返回一个很大的值，例如，Integer.MAX_VALUE</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>实现效果：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/172011025066014.png" alt="image" /></p>

<p>如果有人爱钻牛角尖就会发现，apk启动时第一张不能切换到最后一张。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/172012271774180.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;我曾想getItemId返回的position一开始不是0，而是中间值就行了，比如设为position+imageIDs.length<em>10，在getView()传入position和getItemId返回的position设为position+imageIDs.length</em>10均告失败，日志打印的position初始值都为0，不起作用，还是不能跳到最后一张。后来上网搜了下Gallery有个setSelection可以设置当前position，加入代码，显示成功。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">gl</span><span class="o">.</span><span class="na">setSelection</span><span class="o">(</span><span class="n">imageIDs</span><span class="o">.</span><span class="na">length</span><span class="o">*</span><span class="mi">10</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://images.cnitblog.com/i/602984/201403/172029441462881.png" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记16--GridView(网格视图)]]></title>
    <link href="http://chendd.github.io/blog/2013/03/17/android_study_16/"/>
    <updated>2013-03-17T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/17/android_study_16</id>
    <content type="html"><![CDATA[<h2>一、GridView</h2>

<h4>1、简述　　</h4>

<p>&#160; &#160; &#160; &#160;GridView按照行列来显示图片或文本的一种视图，排列其实有点类似TableLayout布局，不过和TableLayout还是差别很大的,倒比较像二维的ListView。位于android.widget包下，常常用来实现类似九宫格的图像。
实现手法和ListView有点相似，用Apapter把数据绑定到控件上，为容器提供子视图，利用视图的数据和元数据来构建每个子视图自定义Adapter显示。</p>

<!--more-->


<p>&#160; &#160; &#160; &#160;如果需要自定义适配器 可以扩展抽象类BaseAdapter。</p>

<h4>2、常用属性和对应方法如下：</h4>

<p><img src="http://images.cnitblog.com/i/602984/201403/162158428083277.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;下面用实例化SimpleAdapter和继承抽象类BaseAdapter方法实现下图的例子：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/162200143404280.png" alt="image" /></p>

<h4>3、实例化SimpleAdapter实现</h4>

<p> Activity代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">GridView</span> <span class="n">gv</span><span class="o">;</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>       <span class="c1">// TODO Auto-generated method stub </span>
</span><span class='line'>       <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>       <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">gridview</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>       <span class="c1">//准备要添加的数据条目 </span>
</span><span class='line'>       <span class="n">List</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;&gt;</span> <span class="n">items</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span><span class="n">Object</span><span class="o">&gt;&gt;();</span>
</span><span class='line'>       <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">9</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>         <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">item</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;();</span>
</span><span class='line'>         <span class="n">item</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;imageItem&quot;</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">ic_launcher</span><span class="o">);</span><span class="c1">//添加图像资源的ID   </span>
</span><span class='line'>         <span class="n">item</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;textItem&quot;</span><span class="o">,</span> <span class="s">&quot;icon&quot;</span> <span class="o">+</span> <span class="n">i</span><span class="o">);</span><span class="c1">//按序号添加ItemText   </span>
</span><span class='line'>         <span class="n">items</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">item</span><span class="o">);</span>
</span><span class='line'>       <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//实例化SimpleAdapter适配器 </span>
</span><span class='line'>       <span class="n">SimpleAdapter</span> <span class="n">adapter</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">SimpleAdapter</span><span class="o">(</span><span class="k">this</span><span class="o">,</span>
</span><span class='line'>                                                   <span class="n">items</span><span class="o">,</span>
</span><span class='line'>                                                   <span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">grid_item</span><span class="o">,</span>
</span><span class='line'>                                                   <span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">&quot;imageItem&quot;</span><span class="o">,</span> <span class="s">&quot;textItem&quot;</span><span class="o">},</span>
</span><span class='line'>                                                   <span class="k">new</span> <span class="kt">int</span><span class="o">[]{</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">image_item</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">text_item</span><span class="o">});</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>       <span class="c1">//获得GridView实例 </span>
</span><span class='line'>       <span class="n">gv</span> <span class="o">=</span> <span class="o">(</span><span class="n">GridView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">mygridview</span><span class="o">);</span>
</span><span class='line'>       <span class="c1">//为GridView设置适配器 </span>
</span><span class='line'>       <span class="n">gv</span><span class="o">.</span><span class="na">setAdapter</span><span class="o">(</span><span class="n">adapter</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>单个组件XML:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;RelativeLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>   <span class="na">android:id=</span><span class="s">&quot;@+id/RelativeLayout1&quot;</span>
</span><span class='line'>   <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>   <span class="na">android:layout_height=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>   <span class="na">android:paddingBottom=</span><span class="s">&quot;6dip&quot;</span>
</span><span class='line'>   <span class="nt">&gt;</span>
</span><span class='line'>   <span class="nt">&lt;ImageView</span>
</span><span class='line'>      <span class="na">android:id=</span><span class="s">&quot;@+id/image_item&quot;</span>
</span><span class='line'>      <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="na">android:layout_centerHorizontal=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>      <span class="na">android:src=</span><span class="s">&quot;@drawable/ic_launcher&quot;</span>
</span><span class='line'>      <span class="nt">/&gt;</span>
</span><span class='line'>   <span class="nt">&lt;TextView</span>
</span><span class='line'>      <span class="na">android:id=</span><span class="s">&quot;@+id/text_item&quot;</span>
</span><span class='line'>      <span class="na">android:layout_below=</span><span class="s">&quot;@+id/image_item&quot;</span>
</span><span class='line'>      <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="na">android:layout_centerHorizontal=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>      <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/RelativeLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>页面主布局XML：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;LinearLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>   <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>   <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>   <span class="nt">&gt;</span>
</span><span class='line'>   <span class="nt">&lt;GridView</span>
</span><span class='line'>      <span class="na">android:id=</span><span class="s">&quot;@+id/mygridview&quot;</span>
</span><span class='line'>      <span class="na">android:numColumns=</span><span class="s">&quot;3&quot;</span>
</span><span class='line'>      <span class="na">android:gravity=</span><span class="s">&quot;center_horizontal&quot;</span>
</span><span class='line'>      <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="na">android:stretchMode=</span><span class="s">&quot;columnWidth&quot;</span>
</span><span class='line'>      <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/LinearLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>4、继承抽象类BaseAdapter实现</h4>

<p>替换成自己GridAdapter代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//       //准备要添加的数据条目 </span>
</span><span class='line'><span class="c1">//       List&lt;Map&lt;String, Object&gt;&gt; items = new ArrayList&lt;Map&lt;String,Object&gt;&gt;(); </span>
</span><span class='line'><span class="c1">//       for (int i = 0; i &lt; 9; i++) { </span>
</span><span class='line'><span class="c1">//         Map&lt;String, Object&gt; item = new HashMap&lt;String, Object&gt;(); </span>
</span><span class='line'><span class="c1">//         item.put(&quot;imageItem&quot;, R.drawable.ic_launcher);//添加图像资源的ID   </span>
</span><span class='line'><span class="c1">//         item.put(&quot;textItem&quot;, &quot;icon&quot; + i);//按序号添加ItemText   </span>
</span><span class='line'><span class="c1">//         items.add(item); </span>
</span><span class='line'><span class="c1">//       } </span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//      //实例化SimpleAdapter适配器 </span>
</span><span class='line'><span class="c1">//       SimpleAdapter adapter = new SimpleAdapter(this,  </span>
</span><span class='line'><span class="c1">//                                                   items,  </span>
</span><span class='line'><span class="c1">//                                                   R.layout.grid_item,  </span>
</span><span class='line'><span class="c1">//                                                   new String[]{&quot;imageItem&quot;, &quot;textItem&quot;},  </span>
</span><span class='line'><span class="c1">//                                                   new int[]{R.id.image_item, R.id.text_item}); </span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">GridInfo</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">GridInfo</span><span class="o">&gt;();</span>
</span><span class='line'>       <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">9</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>           <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nf">GridInfo</span><span class="o">(</span><span class="s">&quot;icon&quot;</span><span class="o">+</span><span class="n">i</span><span class="o">));</span>
</span><span class='line'>       <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>       <span class="n">GridAdapter</span> <span class="n">adapter</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">GridAdapter</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>       <span class="n">adapter</span><span class="o">.</span><span class="na">setList</span><span class="o">(</span><span class="n">list</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>补上GridAdapter代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">GridAdapter</span> <span class="kd">extends</span> <span class="n">BaseAdapter</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">class</span> <span class="nc">GridHolder</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">ImageView</span> <span class="n">appImage</span><span class="o">;</span>
</span><span class='line'>        <span class="n">TextView</span> <span class="n">appName</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Context</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">GridInfo</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">LayoutInflater</span> <span class="n">mInflater</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">GridAdapter</span><span class="o">(</span><span class="n">Context</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">();</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">context</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setList</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">GridInfo</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">list</span> <span class="o">=</span> <span class="n">list</span><span class="o">;</span>
</span><span class='line'>        <span class="n">mInflater</span> <span class="o">=</span> <span class="o">(</span><span class="n">LayoutInflater</span><span class="o">)</span> <span class="n">context</span>
</span><span class='line'>                <span class="o">.</span><span class="na">getSystemService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">LAYOUT_INFLATER_SERVICE</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCount</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub  </span>
</span><span class='line'>        <span class="k">return</span> <span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Object</span> <span class="nf">getItem</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getItemId</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">index</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">View</span> <span class="nf">getView</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">,</span> <span class="n">View</span> <span class="n">convertView</span><span class="o">,</span> <span class="n">ViewGroup</span> <span class="n">parent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">GridHolder</span> <span class="n">holder</span><span class="o">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">convertView</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">convertView</span> <span class="o">=</span> <span class="n">mInflater</span><span class="o">.</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">grid_item</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>            <span class="n">holder</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">GridHolder</span><span class="o">();</span>
</span><span class='line'>            <span class="n">holder</span><span class="o">.</span><span class="na">appImage</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageView</span><span class="o">)</span><span class="n">convertView</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">image_item</span><span class="o">);</span>
</span><span class='line'>            <span class="n">holder</span><span class="o">.</span><span class="na">appName</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">convertView</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">text_item</span><span class="o">);</span>
</span><span class='line'>            <span class="n">convertView</span><span class="o">.</span><span class="na">setTag</span><span class="o">(</span><span class="n">holder</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">}</span><span class="k">else</span><span class="o">{</span>
</span><span class='line'>             <span class="n">holder</span> <span class="o">=</span> <span class="o">(</span><span class="n">GridHolder</span><span class="o">)</span> <span class="n">convertView</span><span class="o">.</span><span class="na">getTag</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">GridInfo</span> <span class="n">info</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">info</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">holder</span><span class="o">.</span><span class="na">appName</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">info</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">convertView</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>比较麻烦还是重写getView()方法。里面的GridInfo只是普通的JAVA bean类。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记15--WebView(网络视图)]]></title>
    <link href="http://chendd.github.io/blog/2013/03/16/android_study_15/"/>
    <updated>2013-03-16T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/16/android_study_15</id>
    <content type="html"><![CDATA[<h2>一、WebView</h2>

<h4>1、简述</h4>

<p>&#160; &#160; &#160; &#160;WebView(网络视图)内置WebKit引擎，能加载显示网页，还支持JS，并且能够在Android平台使用AJAX
WebView可以在布局中声明，也可以在Activity中直接实例化</p>

<!--more-->


<h4>2、主要步骤</h4>

<p>&#160; &#160; &#160; &#160;使用WebView 的主要步骤：</p>

<ul>
<li>1.在布局文件中声明WebView，通过findViewById或在Activity中实例化WebView组件：WebView webView = new WebView(this);</li>
<li>2.调用WebView的loadUrl()方法，设置WevView要显示的网页：
互联网用：webView.loadUrl(&ldquo;<a href="http://www.google.com">http://www.google.com</a>&rdquo;);
本地文件用：webView.loadUrl(&ldquo;file:///android_asset/Todos.html&rdquo;); 本地文件存放在：assets 文件中</li>
<li>3.调用Activity的setContentView( )方法来显示网页视图</li>
<li>4.用WebView点链接看了很多页以后为了让WebView支持回退功能，需要覆盖覆盖Activity类的onKeyDown()方法，如果不做任何处理，点击系统回退剪键，整个浏览器会调用finish()而结束自身，而不是回退到上一页面</li>
<li>5.需要在AndroidManifest.xml文件中添加权限，否则会出现Web page not available错误。
<uses-permission android:name="android.permission.INTERNET" /></li>
</ul>


<h4>3、实例演示</h4>

<p>Activity代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">getWindow</span><span class="o">().</span><span class="na">requestFeature</span><span class="o">(</span><span class="n">Window</span><span class="o">.</span><span class="na">FEATURE_PROGRESS</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>        <span class="n">wv</span> <span class="o">=</span> <span class="o">(</span><span class="n">WebView</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">wv</span><span class="o">);</span>
</span><span class='line'>        <span class="n">wv</span><span class="o">.</span><span class="na">setWebChromeClient</span><span class="o">(</span><span class="k">new</span> <span class="nf">WebChromeClient</span><span class="o">()</span> <span class="o">{</span> <span class="c1">// 为WebView设置WebChromeClient</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onProgressChanged</span><span class="o">(</span><span class="n">WebView</span> <span class="n">view</span><span class="o">,</span> <span class="kt">int</span> <span class="n">newProgress</span><span class="o">)</span> <span class="o">{</span><span class="c1">// 重写onProgressChanged方法</span>
</span><span class='line'>                <span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">.</span><span class="na">setProgress</span><span class="o">(</span><span class="n">newProgress</span> <span class="o">*</span> <span class="mi">100</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>        <span class="n">wv</span><span class="o">.</span><span class="na">setWebViewClient</span><span class="o">(</span><span class="k">new</span> <span class="nf">WebViewClient</span><span class="o">()</span> <span class="o">{</span> <span class="c1">// 为WebView设置WebViewClient</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onReceivedError</span><span class="o">(</span><span class="n">WebView</span> <span class="n">view</span><span class="o">,</span> <span class="kt">int</span> <span class="n">errorCode</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">String</span> <span class="n">description</span><span class="o">,</span> <span class="n">String</span> <span class="n">failingUrl</span><span class="o">)</span> <span class="o">{</span><span class="c1">// 重写onReceivedError方法</span>
</span><span class='line'>                <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;Sorry!&quot;</span> <span class="o">+</span> <span class="n">description</span><span class="o">,</span>
</span><span class='line'>                        <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>        <span class="n">Button</span> <span class="n">btn</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn</span><span class="o">);</span> <span class="c1">// 获取Button对象</span>
</span><span class='line'>        <span class="n">btn</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span> <span class="c1">// 为Button对象设置OnClickListener监听器</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">EditText</span> <span class="n">et</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">et</span><span class="o">);</span> <span class="c1">// 获得WebView对象</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">url</span> <span class="o">=</span> <span class="n">et</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">().</span><span class="na">trim</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">URLUtil</span><span class="o">.</span><span class="na">isNetworkUrl</span><span class="o">(</span><span class="n">url</span><span class="o">))</span> <span class="o">{</span> <span class="c1">// 判断是否是网址</span>
</span><span class='line'>                    <span class="n">wv</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="n">url</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;对不起，您输入的网址有错。&quot;</span><span class="o">,</span>
</span><span class='line'>                            <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">et</span><span class="o">.</span><span class="na">requestFocus</span><span class="o">();</span> <span class="c1">// 将焦点移到EditText</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>        <span class="c1">// 设置前进后退按钮</span>
</span><span class='line'>        <span class="n">Button</span> <span class="n">btnForward</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnForward</span><span class="o">);</span>
</span><span class='line'>        <span class="n">btnForward</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">wv</span><span class="o">.</span><span class="na">canGoForward</span><span class="o">())</span> <span class="o">{</span> <span class="c1">// 判断是否能够前进</span>
</span><span class='line'>                    <span class="n">wv</span><span class="o">.</span><span class="na">goForward</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;对不起，您现在不能前进！&quot;</span><span class="o">,</span>
</span><span class='line'>                            <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>        <span class="n">Button</span> <span class="n">btnBack</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnBack</span><span class="o">);</span>
</span><span class='line'>        <span class="n">btnBack</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">wv</span><span class="o">.</span><span class="na">canGoBack</span><span class="o">())</span> <span class="o">{</span> <span class="c1">// 判断是否能够前进</span>
</span><span class='line'>                    <span class="n">wv</span><span class="o">.</span><span class="na">goBack</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;对不起，您现在不能后退！&quot;</span><span class="o">,</span>
</span><span class='line'>                            <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;第一次输入网址运行报错：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/151919224807731.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;原因是没有在AndroidManifest配置权限，加入权限：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>再次输入博客园首页网址点击'浏览'：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/151921391838701.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;竟然出现一张美女图片，无意中发现个彩蛋，网址输成<a href="http://www.cnblog.com/">http://www.cnblog.com/</a>  ，漏了个s</p>

<p>重新输入网址浏览：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/151924470437076.png" alt="image" /></p>

<p>上面有个进度条显示网页加载进度，多输入几个网址测试'前进'，'后退'的功能。再输入本地文件测试，显示以前写的待办事项网页</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/151926573559664.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;注意：在输入本地文件网址时，代码要把判断是否是网址URLUtil.isNetworkUrl(url)去掉，因为不会识别file:///为网址</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">URLUtil</span><span class="o">.</span><span class="na">isNetworkUrl</span><span class="o">(</span><span class="n">url</span><span class="o">))</span> <span class="o">{</span> <span class="c1">// 判断是否是网址</span>
</span><span class='line'>  <span class="n">wv</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="n">url</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;对不起，您输入的网址有错。&quot;</span><span class="o">,</span>
</span><span class='line'>            <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>    <span class="n">et</span><span class="o">.</span><span class="na">requestFocus</span><span class="o">();</span> <span class="c1">// 将焦点移到EditText</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记14--网络通信]]></title>
    <link href="http://chendd.github.io/blog/2013/03/15/android_study_14/"/>
    <updated>2013-03-15T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/15/android_study_14</id>
    <content type="html"><![CDATA[<h2>一、Android网络通信</h2>

<p>&#160; &#160; &#160; &#160;android网络通信一般有三种：java.net.<em>(标准Java接口)、org.apache接口(基于http协议)和android.net.</em>(Android网络接口)，涉及到包括流、数据包套接字(socket)、Internet协议、常见Http处理等。android 内置HttpClient，简化和网站间的交互。但是不支持Web Services,需要利用ksoap2_android才能支持。</p>

<!--more-->


<h4>1、使用Socket进行通信</h4>

<p>&#160; &#160; &#160; &#160;Socket通常也称作"套接字"，用于描述IP地址和端口，是一个通信链的句柄。Android Socket开发和JAVA Socket开发类似
无非是创建一个Socket服务端和Socket客户端进行通信。
Socket服务端代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">try</span><span class="o">{</span>
</span><span class='line'>            <span class="c1">// 新建服务器Socket</span>
</span><span class='line'>            <span class="n">ServerSocket</span> <span class="n">ss</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ServerSocket</span><span class="o">(</span><span class="mi">8888</span><span class="o">);</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Listening...&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
</span><span class='line'>                <span class="c1">// 监听是否有客户端连上</span>
</span><span class='line'>                <span class="n">Socket</span> <span class="n">socket</span> <span class="o">=</span> <span class="n">ss</span><span class="o">.</span><span class="na">accept</span><span class="o">();</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Client Connected...&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">DataOutputStream</span> <span class="n">dout</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">DataOutputStream</span><span class="o">(</span><span class="n">socket</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">());</span>
</span><span class='line'>                <span class="n">Date</span> <span class="n">d</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Date</span><span class="o">();</span>
</span><span class='line'>                <span class="c1">// 演示传送个 当前时间给客户端</span>
</span><span class='line'>                <span class="n">dout</span><span class="o">.</span><span class="na">writeUTF</span><span class="o">(</span><span class="n">d</span><span class="o">.</span><span class="na">toLocaleString</span><span class="o">());</span>
</span><span class='line'>                <span class="n">dout</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>                <span class="n">socket</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">catch</span><span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">){</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Socket客户端代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">connectToServer</span><span class="o">(){</span>                    <span class="c1">//方法：连接客户端</span>
</span><span class='line'>            <span class="k">try</span><span class="o">{</span>
</span><span class='line'>                <span class="n">Socket</span> <span class="n">socket</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Socket</span><span class="o">(</span><span class="s">&quot;10.0.2.2&quot;</span><span class="o">,</span> <span class="mi">8888</span><span class="o">);</span><span class="c1">//创建Socket对象</span>
</span><span class='line'>                <span class="n">DataInputStream</span> <span class="n">din</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">DataInputStream</span><span class="o">(</span><span class="n">socket</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">());</span>    <span class="c1">//获得DataInputStream对象</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">msg</span> <span class="o">=</span> <span class="n">din</span><span class="o">.</span><span class="na">readUTF</span><span class="o">();</span>                             <span class="c1">//读取服务端发来的消息</span>
</span><span class='line'>                <span class="n">EditText</span> <span class="n">et</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">et</span><span class="o">);</span>        <span class="c1">//获得EditText对象</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">et</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>                                    <span class="c1">//设置EditText对象</span>
</span><span class='line'>                <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">et</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;error data&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="k">catch</span><span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">){</span>                                        <span class="c1">//捕获并打印异常</span>
</span><span class='line'>                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;服务端是普通JAVA项目，先启动服务端，再启动客户端Android项目，客户端连上服务端，把当前时间数据从服务端发往客户端显示出来</p>

<p>注意：服务器与客户端无法链接的可能原因有：</p>

<ul>
<li>a、AndroidManifest没有加访问网络的权限：<uses-permission android:name="android.permission.INTERNET"></uses-- permission></li>
<li>b、IP地址要使用：10.0.2.2，不能用localhost</li>
<li>c、模拟器不能配置代理</li>
</ul>


<h4>2、使用Http进行通信</h4>

<p>&#160; &#160; &#160; &#160;使用HttpClient在Android客户端访问Web，有点html知识都知道，提交表单有两种方式
get和post，Android客户端访问Web也是这两种方式。在本机先建个web应用(方便演示)。
data.jsp的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%@</span><span class="n">page</span> <span class="n">language</span><span class="o">=</span><span class="s">&quot;java&quot;</span> <span class="n">import</span><span class="o">=</span><span class="s">&quot;java.util.*&quot;</span> <span class="n">pageEncoding</span><span class="o">=</span><span class="s">&quot;utf-8&quot;</span><span class="k">%&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'><span class="nt">&lt;title&gt;</span>
</span><span class='line'>Http Test
</span><span class='line'><span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'><span class="k">&lt;%</span>
</span><span class='line'><span class="n">String</span> <span class="n">type</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&quot;parameter&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">String</span><span class="o">(</span><span class="n">type</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">&quot;iso-8859-1&quot;</span><span class="o">),</span><span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;&lt;h1&gt;&quot;</span> <span class="o">+</span> <span class="n">result</span> <span class="o">+</span> <span class="s">&quot;&lt;/h1&gt;&quot;</span><span class="o">);</span>
</span><span class='line'><span class="k">%&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>启动tomcat，访问<a href="http://192.168.1.101:8080/test/data.jsp?parameter=%E5%8F%91%E9%80%81%E7%9A%84%E5%8F%82%E6%95%B0">http://192.168.1.101:8080/test/data.jsp?parameter=%E5%8F%91%E9%80%81%E7%9A%84%E5%8F%82%E6%95%B0</a></p>

<p><img src="http://images.cnitblog.com/i/602984/201403/151234538404137.png" alt="image" /></p>

<p>注意：192.168.1.101是我本机的IP，要替换成自己的IP。</p>

<p> 按钮监听代码:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//绑定按钮监听器  </span>
</span><span class='line'>        <span class="n">get</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="nf">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">//注意：此处ip不能用127.0.0.1或localhost,Android模拟器已将它自己作为了localhost  </span>
</span><span class='line'>                <span class="n">String</span> <span class="n">uri</span> <span class="o">=</span> <span class="s">&quot;http://192.168.1.101:8080/test/data.jsp?parameter=以Get方式发送请求&quot;</span><span class="o">;</span>
</span><span class='line'>                <span class="n">textView</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">get</span><span class="o">(</span><span class="n">uri</span><span class="o">));</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>        <span class="c1">//绑定按钮监听器  </span>
</span><span class='line'>        <span class="n">post</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="nf">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">uri</span> <span class="o">=</span> <span class="s">&quot;http://192.168.1.101:8080/test/data.jsp&quot;</span><span class="o">;</span>
</span><span class='line'>                <span class="n">textView</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">post</span><span class="o">(</span><span class="n">uri</span><span class="o">));</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p> get方式请求代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/** </span>
</span><span class='line'><span class="cm">     * 以get方式发送请求，访问web </span>
</span><span class='line'><span class="cm">     * @param uri web地址 </span>
</span><span class='line'><span class="cm">     * @return 响应数据 </span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">get</span><span class="o">(</span><span class="n">String</span> <span class="n">uri</span><span class="o">){</span>
</span><span class='line'>        <span class="n">BufferedReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">StringBuffer</span> <span class="n">sb</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">HttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">DefaultHttpClient</span><span class="o">();</span>
</span><span class='line'>        <span class="n">HttpGet</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">HttpGet</span><span class="o">(</span><span class="n">uri</span><span class="o">);</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">//发送请求，得到响应  </span>
</span><span class='line'>            <span class="n">HttpResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">//请求成功  </span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">().</span><span class="na">getStatusCode</span><span class="o">()</span> <span class="o">==</span> <span class="n">HttpStatus</span><span class="o">.</span><span class="na">SC_OK</span><span class="o">){</span>
</span><span class='line'>                <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getEntity</span><span class="o">().</span><span class="na">getContent</span><span class="o">()));</span>
</span><span class='line'>                <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">StringBuffer</span><span class="o">();</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">line</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">NL</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;line.separator&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="k">while</span><span class="o">((</span><span class="n">line</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
</span><span class='line'>                    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">line</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClientProtocolException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">finally</span><span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">reader</span><span class="o">){</span>
</span><span class='line'>                    <span class="n">reader</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">reader</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">sb</span><span class="o">){</span>
</span><span class='line'>            <span class="n">result</span> <span class="o">=</span>  <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p> post方式请求代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/** </span>
</span><span class='line'><span class="cm">     * 以post方式发送请求，访问web </span>
</span><span class='line'><span class="cm">     * @param uri web地址 </span>
</span><span class='line'><span class="cm">     * @return 响应数据 </span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">post</span><span class="o">(</span><span class="n">String</span> <span class="n">uri</span><span class="o">){</span>
</span><span class='line'>        <span class="n">BufferedReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">StringBuffer</span> <span class="n">sb</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">HttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">DefaultHttpClient</span><span class="o">();</span>
</span><span class='line'>        <span class="n">HttpPost</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">HttpPost</span><span class="o">(</span><span class="n">uri</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//保存要传递的参数  </span>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">NameValuePair</span><span class="o">&gt;</span> <span class="n">params</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">NameValuePair</span><span class="o">&gt;();</span>
</span><span class='line'>        <span class="c1">//添加参数  </span>
</span><span class='line'>        <span class="n">params</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nf">BasicNameValuePair</span><span class="o">(</span><span class="s">&quot;parameter&quot;</span><span class="o">,</span><span class="s">&quot;以Post方式发送请求&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">//设置字符集  </span>
</span><span class='line'>            <span class="n">HttpEntity</span> <span class="n">entity</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">UrlEncodedFormEntity</span><span class="o">(</span><span class="n">params</span><span class="o">,</span><span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="c1">//请求对象  </span>
</span><span class='line'>            <span class="n">request</span><span class="o">.</span><span class="na">setEntity</span><span class="o">(</span><span class="n">entity</span><span class="o">);</span>
</span><span class='line'>            <span class="c1">//发送请求  </span>
</span><span class='line'>            <span class="n">HttpResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">//请求成功  </span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">().</span><span class="na">getStatusCode</span><span class="o">()</span> <span class="o">==</span> <span class="n">HttpStatus</span><span class="o">.</span><span class="na">SC_OK</span><span class="o">){</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;post success&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getEntity</span><span class="o">().</span><span class="na">getContent</span><span class="o">()));</span>
</span><span class='line'>                <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">StringBuffer</span><span class="o">();</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">line</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">NL</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;line.separator&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="k">while</span><span class="o">((</span><span class="n">line</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
</span><span class='line'>                    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">line</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClientProtocolException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">finally</span><span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">//关闭流  </span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">reader</span><span class="o">){</span>
</span><span class='line'>                    <span class="n">reader</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">reader</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">sb</span><span class="o">){</span>
</span><span class='line'>            <span class="n">result</span> <span class="o">=</span>  <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>点击'get'按钮：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/151240451685606.png" alt="image" /></p>

<p>点击'post'按钮</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/151240579655195.png" alt="image" /></p>

<h4>3、获取http网络资源</h4>

<p>&#160; &#160; &#160; &#160;其实这里就是前面讲Android数据存储的最后一种：网络存储。将txt文件和png图片放在tomcat服务器上，模拟器通过http路径去获取资源显示出来。</p>

<p>获取路径为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">stringURL</span> <span class="o">=</span> <span class="s">&quot;http://192.168.1.101:8080/test/test.txt&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">bitmapURL</span> <span class="o">=</span> <span class="s">&quot;http://192.168.1.101:8080/test/crab.png&quot;</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>获取文本资源代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//方法，根据指定URL字符串获取网络资源</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getStringURLResources</span><span class="o">(){</span>
</span><span class='line'>        <span class="k">try</span><span class="o">{</span>
</span><span class='line'>            <span class="n">URL</span> <span class="n">myUrl</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">URL</span><span class="o">(</span><span class="n">stringURL</span><span class="o">);</span>
</span><span class='line'>            <span class="n">URLConnection</span> <span class="n">myConn</span> <span class="o">=</span> <span class="n">myUrl</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>    <span class="c1">//打开连接</span>
</span><span class='line'>            <span class="n">InputStream</span> <span class="n">in</span> <span class="o">=</span> <span class="n">myConn</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>        <span class="c1">//获取输入流</span>
</span><span class='line'>            <span class="n">BufferedInputStream</span> <span class="n">bis</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">BufferedInputStream</span><span class="o">(</span><span class="n">in</span><span class="o">);</span><span class="c1">//获取BufferedInputStream对象</span>
</span><span class='line'>            <span class="n">ByteArrayBuffer</span> <span class="n">baf</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ByteArrayBuffer</span><span class="o">(</span><span class="n">bis</span><span class="o">.</span><span class="na">available</span><span class="o">());</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">data</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>            <span class="k">while</span><span class="o">((</span><span class="n">data</span> <span class="o">=</span> <span class="n">bis</span><span class="o">.</span><span class="na">read</span><span class="o">())!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">){</span>        <span class="c1">//读取BufferedInputStream中数据</span>
</span><span class='line'>                <span class="n">baf</span><span class="o">.</span><span class="na">append</span><span class="o">((</span><span class="kt">byte</span><span class="o">)</span><span class="n">data</span><span class="o">);</span>                <span class="c1">//将数据读取到ByteArrayBuffer中</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">msg</span> <span class="o">=</span> <span class="n">EncodingUtils</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">baf</span><span class="o">.</span><span class="na">toByteArray</span><span class="o">(),</span> <span class="s">&quot;GBK&quot;</span><span class="o">);</span>    <span class="c1">//转换为字符串，用UTF-8中文会乱码</span>
</span><span class='line'>            <span class="n">EditText</span> <span class="n">et</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">et</span><span class="o">);</span>        <span class="c1">//获得EditText对象</span>
</span><span class='line'>            <span class="n">et</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>                        <span class="c1">//设置EditText控件中的内容</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">catch</span><span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">){</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>获取图片资源代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">getBitmapURLResources</span><span class="o">(){</span>
</span><span class='line'>        <span class="k">try</span><span class="o">{</span>
</span><span class='line'>            <span class="n">URL</span> <span class="n">myUrl</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">URL</span><span class="o">(</span><span class="n">bitmapURL</span><span class="o">);</span>    <span class="c1">//创建URL对象</span>
</span><span class='line'>            <span class="n">URLConnection</span> <span class="n">myConn</span> <span class="o">=</span> <span class="n">myUrl</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>            <span class="c1">//打开连接</span>
</span><span class='line'>            <span class="n">InputStream</span> <span class="n">in</span> <span class="o">=</span> <span class="n">myConn</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>            <span class="c1">//获得InputStream对象</span>
</span><span class='line'>            <span class="n">Bitmap</span> <span class="n">bmp</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeStream</span><span class="o">(</span><span class="n">in</span><span class="o">);</span>        <span class="c1">//创建Bitmap</span>
</span><span class='line'>            <span class="n">ImageView</span> <span class="n">iv</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">iv</span><span class="o">);</span>    <span class="c1">//获得ImageView对象</span>
</span><span class='line'>            <span class="n">iv</span><span class="o">.</span><span class="na">setImageBitmap</span><span class="o">(</span><span class="n">bmp</span><span class="o">);</span>                    <span class="c1">//设置ImageView显示的内容</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">catch</span><span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">){</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意：String msg = EncodingUtils.getString(baf.toByteArray(), &ldquo;GBK&rdquo;);//转换为字符串，用UTF-8中文会乱码</p>

<p>运行效果：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/151250158712853.png" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记13--数据存储之File存储]]></title>
    <link href="http://chendd.github.io/blog/2013/03/13/android_study_13_4/"/>
    <updated>2013-03-13T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/13/android_study_13_4</id>
    <content type="html"><![CDATA[<h2>4、文件存储File</h2>

<p>&#160; &#160; &#160; &#160;File即传统的I/O 流存储文件，Activity提供了openFileOutput()方法可以用于把数据输出到文件中，
具体的实现过程与在J2SE环境中保存数据到文件中是一样的。</p>

<p>&#160; &#160; &#160; &#160;下面例子演示 如何保存文件、读取文件和把文件保存在SD卡上。</p>

<p> <!--more-->　　</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/142228035435470.png" alt="image" /></p>

<h4>(1) 保存文件</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">save</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">FileOutputStream</span> <span class="n">output</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">openFileOutput</span><span class="o">(</span><span class="s">&quot;test.txt&quot;</span><span class="o">,</span> <span class="n">Context</span><span class="o">.</span><span class="na">MODE_WORLD_READABLE</span><span class="o">);</span>
</span><span class='line'>            <span class="n">output</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
</span><span class='line'>            <span class="n">output</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span><span class="s">&quot;Saved&quot;</span><span class="o">,</span><span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// TODO: handle exception</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;openFileOutput()方法的第一参数用于指定文件名称，不能包含路径分隔符“/” ，如果文件不存在，Android 会自动创建它。
创建的文件保存在/data/data/<package name>/files目录，如： /data/data/com.example.filesave/files/test.txt</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/132023545892953.png" alt="image" /></p>

<p>openFileOutput()方法的第二参数用于指定操作模式，有四种模式，分别为：</p>

<ul>
<li>Context.MODE_PRIVATE</li>
<li>Context.MODE_APPEND</li>
<li>Context.MODE_WORLD_READABLE</li>
<li>Context.MODE_WORLD_WRITEABLE</li>
<li>Context.MODE_PRIVATE：为默认操作模式，代表该文件是私有数据，只能被应用本身访问，在该模式下，写入的内容会覆盖原文件的内容，</li>
</ul>


<p>&#160; &#160; &#160; &#160;如果想把新写入的内容追加到原文件中。可以使用Context.MODE_APPEND
Context.MODE_APPEND：模式会检查文件是否存在，存在就往文件追加内容，否则就创建新文件。
Context.MODE_WORLD_READABLE和Context.MODE_WORLD_WRITEABLE用来控制其他应用是否有权限读写该文件。
MODE_WORLD_READABLE：表示当前文件可以被其他应用读取；MODE_WORLD_WRITEABLE：表示当前文件可以被其他应用写入。
如果希望文件被其他应用读和写，可以传入：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">openFileOutput</span><span class="o">(</span><span class="s">&quot;test.txt&quot;</span><span class="o">,</span> <span class="n">Context</span><span class="o">.</span><span class="na">MODE_WORLD_READABLE</span> <span class="o">+</span> <span class="n">Context</span><span class="o">.</span><span class="na">MODE_WORLD_WRITEABLE</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;android有一套自己的安全模型，当应用程序(.apk)在安装时系统就会分配给他一个userid，当该应用要去访问其他资源比如文件的时候，就需要userid匹配。默认情况下，</p>

<p>&#160; &#160; &#160; &#160;任何应用创建的文件，sharedpreferences，数据库都应该是私有的（位于/data/data/<package name>/files），其他程序无法访问。
除非在创建时指定了Context.MODE_WORLD_READABLE或者Context.MODE_WORLD_WRITEABLE ，只有这样其他程序才能正确访问。</p>

<h4>(2) 读取文件</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="n">String</span> <span class="nf">load</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">FileInputStream</span> <span class="n">input</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">openFileInput</span><span class="o">(</span><span class="s">&quot;test.txt&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">ByteArrayOutputStream</span> <span class="n">byteOutput</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ByteArrayOutputStream</span><span class="o">();</span>
</span><span class='line'>            <span class="kt">byte</span><span class="o">[]</span> <span class="n">buffer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">1024</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">while</span> <span class="o">((</span><span class="n">length</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buffer</span><span class="o">))!=-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">byteOutput</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">buffer</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="n">length</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">input</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>            <span class="n">byteOutput</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">str</span> <span class="o">=</span> <span class="n">byteOutput</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span><span class="s">&quot;Load&quot;</span><span class="o">,</span><span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">str</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;对于私有文件只能被创建该文件的应用访问，如果希望文件能被其他应用读和写，可以在创建文件时，指定Context.MODE_WORLD_READABLE和Context.MODE_WORLD_WRITEABLE权限。
Activity还提供了getCacheDir()和getFilesDir()方法：</p>

<ul>
<li>getCacheDir()方法用于获取/data/data/<package name>/cache目录</li>
<li>getFilesDir()方法用于获取/data/data/<package name>/files目录。</li>
</ul>


<p>打印文件读取的内容：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/132034007243345.png" alt="image" /></p>

<p>(3) 创建SD卡　　</p>

<p>&#160; &#160; &#160; &#160;使用Activity的openFileOutput()方法保存文件，文件是存放在手机空间上，一般手机的存储空间不是很大，存放些小文件还行，如果要存放像视频这样的大文件，是不可行的。对于像视频这样的大文件，我们可以把它存放在SDCard。 SDCard是干什么的？你可以把它看作是插在手机上的移动硬盘或U盘。</p>

<p>创建模拟器SD卡有两种方法</p>

<p>第一种：用命令行创建</p>

<ul>
<li>1.打开你安装Android的文件夹找到tools这个文件夹，复制路径</li>
<li>2.设置命令提示符的默认路径为你复制的路径</li>
<li><p>3.在后面输入如下命令（注意空格）：</p>

<p>  mksdcard 256M C:\Users\chendd\Desktop\sdcard.img
  256M是你要设置SD卡的大小，后面是你创建虚拟SD卡的路径。
  回车，这样就创建好了SD卡的镜像文件，还要让Android模拟器知道这个SD卡在什么地方，命令如下：
  dir C:\Users\chendd\Desktop\sdcard.img
  再次回车</p></li>
<li><p>4、设置模拟器,edit里SD Card 选择File，然后browse你的sdcard.img，再edit AVD结束。</p></li>
</ul>


<p>但是我这样创建这个时候File Exprorer下的sdcard的permissions变成了d&mdash;&mdash;&ndash;,没有读写权限，囧！</p>

<p>第二种：直接在AVD manager创建</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/142238519804602.png" alt="image" /></p>

<p>创建60M的内存卡sdcard的permissions变成了d&mdash;rwxr-x，可以读写，这样创建简单霸气！</p>

<p>在程序中访问SDCard，你需要申请访问SDCard的权限。
在AndroidManifest.xml中加入访问SDCard的权限如下:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- 在SDCard中创建与删除文件权限 --&gt;</span>
</span><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.MOUNT_UNMOUNT_FILESYSTEMS&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="c">&lt;!-- 往SDCard写入数据权限 --&gt;</span>
</span><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>(4) 保存文件在SD卡上
　　要往SDCard存放文件，程序必须先判断手机是否装有SDCard，并且可以进行读写</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">save_sd</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">File</span> <span class="n">sdCardDir</span> <span class="o">=</span> <span class="n">Environment</span><span class="o">.</span><span class="na">getExternalStorageDirectory</span><span class="o">();</span><span class="c1">//获取SDCard目录</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">File</span> <span class="n">saveFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="n">sdCardDir</span><span class="o">,</span> <span class="s">&quot;testsd.txt&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">FileOutputStream</span> <span class="n">outStream</span><span class="o">;</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span><span class="o">(!</span><span class="n">saveFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="n">saveFile</span><span class="o">.</span><span class="na">createNewFile</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">outStream</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">FileOutputStream</span><span class="o">(</span><span class="n">saveFile</span><span class="o">);</span>
</span><span class='line'>            <span class="n">outStream</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
</span><span class='line'>            <span class="n">outStream</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span><span class="s">&quot;Save_sd&quot;</span><span class="o">,</span><span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;Environment.getExternalStorageState()方法用于获取SDCard的状态，如果手机装有SDCard，并且可以进行读写，那么方法返回的状态等于Environment.MEDIA_MOUNTED。</p>

<p>&#160; &#160; &#160; &#160;Environment.getExternalStorageDirectory()方法用于获取SDCard的目录，当然要获取SDCard的目录，你也可以这样写：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">File</span> <span class="n">sdCardDir</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="s">&quot;/sdcard&quot;</span><span class="o">);</span> <span class="c1">//获取SDCard目录</span>
</span><span class='line'>
</span><span class='line'><span class="n">File</span> <span class="n">saveFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="n">sdCardDir</span><span class="o">,</span> <span class="s">&quot;test.txt&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 第一种写法更灵活</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//上面两句代码可以合成一句： File saveFile = new File(&quot;/sdcard/a.txt&quot;);</span>
</span><span class='line'>
</span><span class='line'><span class="n">FileOutputStream</span> <span class="n">outStream</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">FileOutputStream</span><span class="o">(</span><span class="n">saveFile</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">outStream</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">&quot;test&quot;</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'><span class="n">outStream</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>文件对SD卡的读写一路报太多错误，在下一篇整理出来。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记13--数据存储之ContentProvide]]></title>
    <link href="http://chendd.github.io/blog/2013/03/08/android_study_13_3/"/>
    <updated>2013-03-08T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/08/android_study_13_3</id>
    <content type="html"><![CDATA[<h4>3、ContentProvider</h4>

<p>&#160; &#160; &#160; &#160;数据在Android当中是私有的，当然这些数据包括文件数据和数据库数据以及一些其他类型的数据。ContentProvider实现多应用程序间的数据共享类
一般利用ContentProvider为需要共享的数据定义一个URI(统一资源定位符)
然后其他程序通过Context获得ContentResolver并将数据的URI传入即可</p>

<!--more-->


<p>&#160; &#160; &#160; &#160;Android已为一些常用的数据创建ContentProvider,这些ContentProvider位于
android.provider包下，常用的就是手机上联系人信息，但是要取得相应的权限自己的应用程序才能访问
具体设置是在AndroidManifest.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.READ_CONTACTS&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;对于ContentProvide重要的是数据模型和URI
数据模型:ContentProvide为所需要的数据创建表，每行代表一条记录，每条记录有唯一的'_ID'标识
URI:每个ContentProvide对外提供一个URI来标识自己的数据集</p>

<p>URI特点：</p>

<ul>
<li>1、无法改变的标准前缀，包括；"content://&ldquo;、"tel://"等。当前缀是"content://"时，说明通过一个Content Provider控制这些数据</li>
<li>2、URI的标识，它通过authorities属性声明，用于定义了是哪个ContentProvider提供这些数据。对于第三方应用程序，为了保证URI标识的唯一性，它必须是一个完整的类名(数据路径)。例如;&ldquo;content://com.example.contentprovide.myprovider&rdquo;
3、如果URI中包含表示需要获取的记录的<em>ID；则就返回该id对应的数据，如果没有</em>ID，就表示返回全部</li>
</ul>


<p>举个例子，如：</p>

<p>所有联系人的URI： content://contacts/people</p>

<p>某个联系人的URI: content://contacts/people/5</p>

<p>具体使用步骤：</p>

<h4>1、在当前应用程序中定义一个ContentProvider</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyProvider</span> <span class="kd">extends</span> <span class="n">ContentProvider</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">delete</span><span class="o">(</span><span class="n">Uri</span> <span class="n">arg0</span><span class="o">,</span> <span class="n">String</span> <span class="n">arg1</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">arg2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getType</span><span class="o">(</span><span class="n">Uri</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Uri</span> <span class="nf">insert</span><span class="o">(</span><span class="n">Uri</span> <span class="n">arg0</span><span class="o">,</span> <span class="n">ContentValues</span> <span class="n">arg1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 创建数据库，建表和插入数据</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onCreate</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="n">SQLiteDatabase</span> <span class="n">db</span> <span class="o">=</span><span class="k">this</span><span class="o">.</span><span class="na">getContext</span><span class="o">().</span><span class="na">openOrCreateDatabase</span><span class="o">(</span><span class="s">&quot;mydb.db&quot;</span><span class="o">,</span> <span class="n">Context</span><span class="o">.</span><span class="na">MODE_PRIVATE</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="na">execSQL</span><span class="o">(</span><span class="s">&quot;create table tab(_id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL)&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ContentValues</span> <span class="n">values</span> <span class="o">=</span><span class="k">new</span> <span class="nf">ContentValues</span><span class="o">();</span>
</span><span class='line'>        <span class="n">values</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">,</span> <span class="s">&quot;Hello ContentProvider!&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="s">&quot;tab&quot;</span><span class="o">,</span> <span class="s">&quot;_id&quot;</span><span class="o">,</span> <span class="n">values</span><span class="o">);</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 查询</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Cursor</span> <span class="nf">query</span><span class="o">(</span><span class="n">Uri</span> <span class="n">arg0</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">arg1</span><span class="o">,</span> <span class="n">String</span> <span class="n">arg2</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">arg3</span><span class="o">,</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">arg4</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>         <span class="n">SQLiteDatabase</span> <span class="n">db</span> <span class="o">=</span><span class="k">this</span><span class="o">.</span><span class="na">getContext</span><span class="o">().</span><span class="na">openOrCreateDatabase</span><span class="o">(</span><span class="s">&quot;mydb.db&quot;</span><span class="o">,</span> <span class="n">Context</span><span class="o">.</span><span class="na">MODE_PRIVATE</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>         <span class="n">Cursor</span> <span class="n">c</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="s">&quot;tab&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>         <span class="k">return</span> <span class="n">c</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">update</span><span class="o">(</span><span class="n">Uri</span> <span class="n">arg0</span><span class="o">,</span> <span class="n">ContentValues</span> <span class="n">arg1</span><span class="o">,</span> <span class="n">String</span> <span class="n">arg2</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">arg3</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p> 这里为了演示方便只实现创建和查询两个简单的方法</p>

<h4>2、在当前应用程序的AndroidManifest.xml中注册此ContentProvider</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="n">provider</span> <span class="nl">android:</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;.MyProvider&quot;</span> <span class="nl">android:</span><span class="n">authorities</span><span class="o">=</span><span class="s">&quot;com.example.contentprovider.MyProvider&quot;</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>3、其他应用程序通过ContentResolver和Uri来获取此ContentProvider的数据</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 获取当前context</span>
</span><span class='line'>        <span class="n">Context</span> <span class="n">context</span> <span class="o">=</span> <span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 得到ContentResolver对象</span>
</span><span class='line'>        <span class="n">ContentResolver</span> <span class="n">resolver</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getContentResolver</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// uri格式 &quot;content://&quot;、数据的路径、标示ID(可选)</span>
</span><span class='line'>        <span class="n">Uri</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">&quot;content://com.example.contentprovider.MyProvider&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Cursor</span> <span class="n">c</span> <span class="o">=</span> <span class="n">resolver</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">uri</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 打印获取数据</span>
</span><span class='line'>        <span class="n">c</span><span class="o">.</span><span class="na">moveToFirst</span><span class="o">();</span>
</span><span class='line'>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">c</span><span class="o">.</span><span class="na">getCount</span><span class="o">();</span> <span class="n">i</span><span class="o">++){</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getColumnIndexOrThrow</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">);</span>
</span><span class='line'>                     <span class="n">String</span> <span class="n">src</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
</span><span class='line'>                     <span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">,</span> <span class="n">src</span><span class="o">);</span>
</span><span class='line'>                     <span class="n">c</span><span class="o">.</span><span class="na">moveToNext</span><span class="o">();</span>
</span><span class='line'>                 <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>日志打印：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/081525138782729.png" alt="image" /></p>

<p>　　上面MyProvider代码和应用程序MainActivity代码不放在同一个包下是想说明ContentProvider不同程序间的数据共享，</p>

<p>但是注册获取权限那段代码要放在调用的程序包里。</p>

<p>　　其实通过代码可以看出为了共享数据库．可以让数据库披上ContentProvider外衣，主要还是通过SQLiteDatabase去操作数据库。</p>

<p>当然对于已封装的共享数据。我们只要设置获取权限，通过ContentResolver就可以直接调用。</p>

<h4>4、获取系统的联系人、媒体库信息</h4>

<p>　　对于系统程序的联系人、多媒体等信息可通过指定的Uri来获取。</p>

<p>　　数据附录是获取本地联系人信息代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="n">String</span> <span class="nf">getContactInfo</span><span class="o">(){</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">result</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">ContentResolver</span> <span class="n">resolver</span><span class="o">=</span><span class="n">getContentResolver</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//查询联系人</span>
</span><span class='line'>        <span class="n">Cursor</span> <span class="n">cursor</span><span class="o">=</span><span class="n">resolver</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">Contacts</span><span class="o">.</span><span class="na">CONTENT_URI</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">idIndex</span><span class="o">=</span><span class="n">cursor</span><span class="o">.</span><span class="na">getColumnIndex</span><span class="o">(</span><span class="n">Contacts</span><span class="o">.</span><span class="na">_ID</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// 取得联系人名字 (显示出来的名字)，实际内容在 ContactsContract.Contacts中</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">nameIndex</span><span class="o">=</span><span class="n">cursor</span><span class="o">.</span><span class="na">getColumnIndex</span><span class="o">(</span><span class="n">Contacts</span><span class="o">.</span><span class="na">DISPLAY_NAME</span><span class="o">);</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="n">cursor</span><span class="o">.</span><span class="na">moveToFirst</span><span class="o">();(!</span><span class="n">cursor</span><span class="o">.</span><span class="na">isAfterLast</span><span class="o">());</span><span class="n">cursor</span><span class="o">.</span><span class="na">moveToNext</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">//获取联系人ID</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">contactId</span> <span class="o">=</span><span class="n">cursor</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">idIndex</span><span class="o">);</span>
</span><span class='line'>            <span class="n">result</span><span class="o">=</span><span class="n">result</span><span class="o">+</span><span class="n">contactId</span><span class="o">+</span><span class="s">&quot;\t\t\t&quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="n">result</span><span class="o">=</span><span class="n">result</span><span class="o">+</span><span class="n">cursor</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">nameIndex</span><span class="o">)+</span><span class="s">&quot;\t\t\t&quot;</span><span class="o">;</span>
</span><span class='line'>             <span class="c1">// 根据联系人ID查询对应的电话号码  </span>
</span><span class='line'>            <span class="n">Cursor</span> <span class="n">phoneNumbers</span> <span class="o">=</span> <span class="n">resolver</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">CommonDataKinds</span><span class="o">.</span><span class="na">Phone</span><span class="o">.</span><span class="na">CONTENT_URI</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">CommonDataKinds</span><span class="o">.</span><span class="na">Phone</span><span class="o">.</span><span class="na">CONTACT_ID</span> <span class="o">+</span> <span class="s">&quot; = &quot;</span> <span class="o">+</span> <span class="n">contactId</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>            <span class="c1">// 取得电话号码(可能存在多个号码)    </span>
</span><span class='line'>            <span class="k">while</span> <span class="o">(</span><span class="n">phoneNumbers</span><span class="o">.</span><span class="na">moveToNext</span><span class="o">())</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">strPhoneNumber</span> <span class="o">=</span> <span class="n">phoneNumbers</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">phoneNumbers</span><span class="o">.</span><span class="na">getColumnIndex</span><span class="o">(</span><span class="n">CommonDataKinds</span><span class="o">.</span><span class="na">Phone</span><span class="o">.</span><span class="na">NUMBER</span><span class="o">));</span>
</span><span class='line'>                <span class="n">result</span><span class="o">=</span><span class="n">result</span><span class="o">+</span><span class="n">strPhoneNumber</span><span class="o">+</span><span class="s">&quot;\t\t\t&quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">phoneNumbers</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// 根据联系人ID查询对应的email  </span>
</span><span class='line'>            <span class="n">Cursor</span> <span class="n">emails</span> <span class="o">=</span> <span class="n">resolver</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">CommonDataKinds</span><span class="o">.</span><span class="na">Email</span><span class="o">.</span><span class="na">CONTENT_URI</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">CommonDataKinds</span><span class="o">.</span><span class="na">Email</span><span class="o">.</span><span class="na">CONTACT_ID</span> <span class="o">+</span> <span class="s">&quot; = &quot;</span> <span class="o">+</span> <span class="n">contactId</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>            <span class="c1">// 取得email(可能存在多个email)    </span>
</span><span class='line'>            <span class="k">while</span> <span class="o">(</span><span class="n">emails</span><span class="o">.</span><span class="na">moveToNext</span><span class="o">())</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">strEmail</span> <span class="o">=</span> <span class="n">emails</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">emails</span><span class="o">.</span><span class="na">getColumnIndex</span><span class="o">(</span><span class="n">CommonDataKinds</span><span class="o">.</span><span class="na">Email</span><span class="o">.</span><span class="na">DATA</span><span class="o">));</span>
</span><span class='line'>                <span class="n">result</span><span class="o">=</span><span class="n">result</span><span class="o">+</span><span class="n">strEmail</span><span class="o">+</span><span class="s">&quot;\t\t\t&quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">emails</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>            <span class="n">result</span><span class="o">=</span><span class="n">result</span><span class="o">+</span><span class="s">&quot;\n&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">cursor</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>5、监听ContentProvider的数据改变</h4>

<p>　　随着ContentProvider的共享数据可能发生改变，要提供给有使用该共享数据的相应，具体步骤如下：</p>

<ul>
<li><p>在ContentProvider类的insert\update\delete方法加入this.getContext().getContentResolver().notifyChange(URI,null);
其中URI表示监听的URI
null表示发送消息给任何人；</p></li>
<li><p>在访问者的类中调用如下方法：
context.getContentResolver().registerContentObserver(uri,true,new ContentObserver(new Handler()));</p></li>
<li>创建内部类继承ContentObserver并重写下面两个方法：

<ul>
<li>带有Handler的构造函数；</li>
<li>public void onChange(boolean selfChange); 此函数在内容提供者发出改变信号时就会被调用
参数selfChange为如果是自己改变的原因，则为true；如果不是自己改变的，则为false；</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记13--数据存储之SQLite]]></title>
    <link href="http://chendd.github.io/blog/2013/03/07/android_study_13_2/"/>
    <updated>2013-03-07T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/07/android_study_13_2</id>
    <content type="html"><![CDATA[<h4>2、SQLite</h4>

<p>&#160; &#160; &#160; &#160;开源轻量级数据库，支持92-SQL标准，主要用于嵌入式系统，只占几百K系统资源此外，SQLite 不支持一些标准的 SQL 功能，特别是外键约束（FOREIGN KEY constrains），嵌套 transcaction 和 RIGHT OUTER JOIN 和 FULL OUTER JOIN, 还有一些 ALTER TABLE 功能</p>

<p>&#160; &#160; &#160; &#160;许多开源项目（(Mozilla, PHP, Python）都使用了 SQLite.SQLite 由以下几个组件组成：SQL 编译器、内核、后端以及附件</p>

<!--more-->


<p>&#160; &#160; &#160; &#160;具有如下特性：</p>

<ul>
<li>轻量性：只需要一个动态库，就可以享受全部功能，而且动态库尺寸也很小</li>
<li>独立性：核心引擎不需要依赖第三方软件</li>
<li>隔离性：数据库所有信息（表、视图、触发器）都放在同一个文件里</li>
<li>跨平台：支持大部分操作系统，也可以在PC端使用</li>
<li>安全性：独占性和共享锁来实现事务处理，支持多进程读取数据，只能一个进程修改</li>
</ul>


<p>&#160; &#160; &#160; &#160;有五种常用数据类型：</p>

<ul>
<li>NULL：空值</li>
<li>INTEGER：整形</li>
<li>REAL：浮点型</li>
<li>VARCHAR:字符型</li>
<li>BLOB：大数据</li>
</ul>


<p>注意：SQLite不支持BOOLEAN和DATE，因此可以用0,1代替BOOLEAN(其它数据库也经常这么干)
INTEGER或VARCHAR代替DATE，更多<a href="http://www.sqlite.org/">参考资料</a></p>

<p>在Android系统中提供了android.database.sqlite包，用于进行SQLite数据库的增、删、改、查工作。其主要方法如下：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/072326293931382.png" alt="image" /></p>

<p>1、创建数据库连接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 创建数据库的两种方法，推荐第一种，第二种使用绝对路径，较繁杂</span>
</span><span class='line'><span class="n">SQLiteDatabase</span> <span class="n">db</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">openOrCreateDatabase</span><span class="o">(</span><span class="s">&quot;test_db.db&quot;</span><span class="o">,</span> <span class="n">Context</span><span class="o">.</span><span class="na">MODE_PRIVATE</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'><span class="n">SQLiteDatabase</span> <span class="n">db2</span> <span class="o">=</span> <span class="n">SQLiteDatabase</span><span class="o">.</span><span class="na">openOrCreateDatabase</span><span class="o">(</span><span class="s">&quot;/data/data/com.example.sqlite/databases/test_db2.db&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>创建完/data/data/com.example.sqlite/databases/ 会有两个数据库文件。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/072256268934722.png" alt="image" /></p>

<p>2、创建tab表，有两个字段<em>id和name,其中</em>id为自增序列,name不为空。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 创建tab表</span>
</span><span class='line'><span class="n">db</span><span class="o">.</span><span class="na">execSQL</span><span class="o">(</span><span class="s">&quot;create table tab(_id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL)&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>3、插入数据</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//插入数据</span>
</span><span class='line'><span class="c1">// 类似map,键值对存储数据</span>
</span><span class='line'><span class="n">ContentValues</span> <span class="n">values</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ContentValues</span><span class="o">();</span>
</span><span class='line'><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">values</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">,</span> <span class="s">&quot;test&quot;</span><span class="o">+</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">// 插入到数据库，参数：表名， 指定表中的某列列名，数据</span>
</span><span class='line'>      <span class="n">db</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="s">&quot;tab&quot;</span><span class="o">,</span> <span class="s">&quot;_id&quot;</span><span class="o">,</span> <span class="n">values</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>4、修改数据</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 修改</span>
</span><span class='line'><span class="n">ContentValues</span> <span class="n">values2</span> <span class="o">=</span><span class="k">new</span> <span class="nf">ContentValues</span><span class="o">();</span>
</span><span class='line'><span class="n">values2</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">,</span> <span class="s">&quot;name&quot;</span><span class="o">);</span>
</span><span class='line'><span class="c1">// 更改数据,参数分别：表名、新数据、where条件、子句(可为null)</span>
</span><span class='line'><span class="n">db</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="s">&quot;tab&quot;</span><span class="o">,</span> <span class="n">values2</span><span class="o">,</span> <span class="s">&quot;_id=1&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'><span class="c1">// where条件?为占位符，最后一个参数可替换占位符</span>
</span><span class='line'><span class="n">db</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="s">&quot;tab&quot;</span><span class="o">,</span> <span class="n">values2</span><span class="o">,</span> <span class="s">&quot;_id=?&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">&quot;10&quot;</span><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>将数据库文件拷贝到本地电脑可以用 SQLite Expert Personal 3查看，修改后_id为0和10的name列 值都改掉了。</p>

<p>由于我程序执行了4次，多插入3遍，因此有20条记录。</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/072259083931916.png" alt="image" /></p>

<p>5、查询数据</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//查询数据两种方法query、rawQuery</span>
</span><span class='line'><span class="c1">// Cursor指游标，学过数据库的都知道吧,后面跟一系列参数，目标表名、where子句、order by子句、having子句等可不记，用第二种方法</span>
</span><span class='line'><span class="n">Cursor</span> <span class="n">c</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="s">&quot;tab&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'><span class="c1">// 在第一次读取Cursor对象中的数据时，一定要先移动游标，否则此游标的位置在第一条记录之前，会引发异常</span>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="na">moveToFirst</span><span class="o">();</span>
</span><span class='line'><span class="k">while</span><span class="o">(!</span><span class="n">c</span><span class="o">.</span><span class="na">isAfterLast</span><span class="o">()){</span>
</span><span class='line'><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getColumnIndex</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="s">&quot;SQLite&quot;</span><span class="o">,</span> <span class="n">c</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">index</span><span class="o">));</span>
</span><span class='line'>      <span class="n">c</span><span class="o">.</span><span class="na">moveToNext</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//推荐用这种，不需记那么多参数</span>
</span><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="na">rawQuery</span><span class="o">(</span><span class="s">&quot;select * from tab&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="na">moveToFirst</span><span class="o">();</span>
</span><span class='line'><span class="k">while</span><span class="o">(!</span><span class="n">c</span><span class="o">.</span><span class="na">isAfterLast</span><span class="o">()){</span>
</span><span class='line'>   <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getColumnIndex</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">);</span>
</span><span class='line'>       <span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="s">&quot;SQLite&quot;</span><span class="o">,</span> <span class="n">c</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">index</span><span class="o">));</span>
</span><span class='line'>       <span class="n">c</span><span class="o">.</span><span class="na">moveToNext</span><span class="o">();</span>
</span><span class='line'>   <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>日子打印结果：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/072308325965984.png" alt="image" /></p>

<p>针对游标的常用方法说明：</p>

<p>6、删除数据和关闭连接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 删除数据</span>
</span><span class='line'><span class="n">db</span><span class="o">.</span><span class="na">delete</span><span class="o">(</span><span class="s">&quot;tab&quot;</span><span class="o">,</span> <span class="s">&quot;_id=? or name=?&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">&quot;8&quot;</span><span class="o">,</span> <span class="s">&quot;test0&quot;</span><span class="o">});</span>
</span><span class='line'><span class="c1">// 关闭数据库连接，释放资源</span>
</span><span class='line'><span class="n">db</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;实际开发是继承数据库的辅助类SQLiteOpenHelper来方便操作的，主要做的工作就是重写以下两个方法：</p>

<p>onCreate(SQLiteDatabase db) : 当数据库被首次创建时执行该方法，一般将创建表等初始化操作在该方法中执行。
onUpgrade(SQLiteDatabse dv, int oldVersion,int new Version)：当打开数据库时传入的版本号与当前的版本号不同时会调用该方法。</p>

<p>&#160; &#160; &#160; &#160;除了上述两个必须要实现的方法外，还可以选择性地实现onOpen 方法，该方法会在每次打开数据库时被调用。</p>

<p>一般的代码结构:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DatabaseHelper</span> <span class="kd">extends</span> <span class="n">SQLiteOpenHelper</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DB_NAME</span> <span class="o">=</span> <span class="s">&quot;mydata.db&quot;</span><span class="o">;</span> <span class="c1">//数据库名称</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">version</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="c1">//数据库版本</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">DatabaseHelper</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">DB_NAME</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="n">version</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated constructor stub</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">SQLiteDatabase</span> <span class="n">db</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">&quot;create table user(username varchar(20) not null , password varchar(60) not null );&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="na">execSQL</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onUpgrade</span><span class="o">(</span><span class="n">SQLiteDatabase</span> <span class="n">db</span><span class="o">,</span> <span class="kt">int</span> <span class="n">oldVersion</span><span class="o">,</span> <span class="kt">int</span> <span class="n">newVersion</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记13--数据存储之SharedPreference]]></title>
    <link href="http://chendd.github.io/blog/2013/03/04/android_study_13_1/"/>
    <updated>2013-03-04T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/04/android_study_13_1</id>
    <content type="html"><![CDATA[<h2>android 数据存储</h2>

<p>&#160; &#160; &#160; &#160;作为一个完整的应用程序，数据存储必不可少。android 提供了五种不同的数据存储方式:SharedPreferences、SQLite、ContentProvider、文件存储、网络存储。</p>

<h4>1、SharedPreference</h4>

<p>&#160; &#160; &#160; &#160;用来存储简单的配置信息，如用户名/密码，以键值对的方式存储，存储位置在/data/data/&lt;包名>/shared_prefs目录下
SharedPreferences对象本身只能获取数据而不支持存储和修改，存储修改是通过Editor对象实现。实现SharedPreferences存储的步骤如下：</p>

<!--more-->


<ul>
<li>根据Context获取SharedPreferences对象</li>
<li>利用edit()方法获取Editor对象。</li>
<li>通过Editor对象存储key-value键值对数据。</li>
<li>通过commit()方法提交数据。</li>
</ul>


<p>实例演示：</p>

<p>Activity代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Context</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 获取SharedPreferences实例，第二个参数表示操作模式，这里的意思是覆盖原有的</span>
</span><span class='line'><span class="c1">// 此外还有追加MODE_APPEND，允许其他程序读取MODE_WORLD_READABLE，允许其他程序读取写入MODE_WORLD_WRITEABLE</span>
</span><span class='line'><span class="n">SharedPreferences</span> <span class="n">sp</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getSharedPreferences</span><span class="o">(</span><span class="s">&quot;SP&quot;</span><span class="o">,</span> <span class="n">MODE_PRIVATE</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 获取编辑对象</span>
</span><span class='line'><span class="n">Editor</span> <span class="n">editor</span> <span class="o">=</span> <span class="n">sp</span><span class="o">.</span><span class="na">edit</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 存入数据</span>
</span><span class='line'><span class="n">editor</span><span class="o">.</span><span class="na">putInt</span><span class="o">(</span><span class="s">&quot;INT_VAULE&quot;</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
</span><span class='line'><span class="n">editor</span><span class="o">.</span><span class="na">putString</span><span class="o">(</span><span class="s">&quot;STRING_VAULE&quot;</span><span class="o">,</span> <span class="s">&quot;hahaha&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">editor</span><span class="o">.</span><span class="na">putBoolean</span><span class="o">(</span><span class="s">&quot;BOOLEAN_VAULE&quot;</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 根据key取出数据</span>
</span><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;SP&quot;</span><span class="o">,</span> <span class="n">sp</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&quot;STRING_VAULE&quot;</span><span class="o">,</span> <span class="s">&quot;none&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 输出int型要转成 string的</span>
</span><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;SP&quot;</span><span class="o">,</span> <span class="n">sp</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&quot;INT_VAULE&quot;</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">)+</span><span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 删除所有数据,没commit是没生效的</span>
</span><span class='line'><span class="n">editor</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// 找不到key输出第二个参数 false</span>
</span><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;SP&quot;</span><span class="o">,</span> <span class="n">sp</span><span class="o">.</span><span class="na">getBoolean</span><span class="o">(</span><span class="s">&quot;BOOLEAN_VAULE22&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="o">)+</span><span class="s">&quot;&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>日志输出：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/042015418421201.png" alt="image" /></p>

<p>在FileExplorer视图/data/data/com.example.sharedpreferences/shared_prefs生成的SP.xml</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/042018518312913.png" alt="image" /></p>

<p>　　但是在模拟器内部存储的文件，当你通过FileExplorer选中某个目录或者文件时，右上角有两个小按钮一个是类似于软盘的按钮一个是类似于手机的按钮，通过这两个按钮就可以从模拟器中拷贝文件或者往模拟器中添加文件。拷贝到电脑查看xml内容：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&#39;1.0&#39; encoding=&#39;utf-8&#39; standalone=&#39;yes&#39; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;map&gt;</span>
</span><span class='line'><span class="nt">&lt;int</span> <span class="na">name=</span><span class="s">&quot;INT_VAULE&quot;</span> <span class="na">value=</span><span class="s">&quot;20&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">&quot;STRING_VAULE&quot;</span><span class="nt">&gt;</span>hahaha<span class="nt">&lt;/string&gt;</span>
</span><span class='line'><span class="nt">&lt;boolean</span> <span class="na">name=</span><span class="s">&quot;BOOLEAN_VAULE&quot;</span> <span class="na">value=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/map&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>优点：
相对而言更加方便，简洁，适合存储数据量较少的配置信息。</p>

<p>缺点：
只能存储boolean，int，float，long和String五种简单的数据类型，功能单一。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记12--布局管理器]]></title>
    <link href="http://chendd.github.io/blog/2013/03/03/android_study_12/"/>
    <updated>2013-03-03T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/03/android_study_12</id>
    <content type="html"><![CDATA[<h4>1、概述</h4>

<p>&#160; &#160; &#160; &#160;布局管理器的用途：</p>

<ul>
<li>a、可以更好的管理组件;</li>
<li>b、通过使用布局管理器，Android应用程序可以做到平台无关性</li>
</ul>


<!--more-->


<p>&#160; &#160; &#160; &#160;布局管理器都是ViewGroup的子类，所有可充当容器的父类都是ViewGroup，而ViewGroup也是View的子类</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/032030374569965.jpg" alt="image" />　　</p>

<p>&#160; &#160; &#160; &#160;下面分别介绍常用的布局管理器</p>

<h4>2、线性布局管理器</h4>

<p>&#160; &#160; &#160; &#160;LinearLayout,最常用的布局之一。它提供控件水平或垂直排列的模型</p>

<p>&#160; &#160; &#160; &#160;常用属性及其对应方法：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/022144094936518.jpg" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;gravity 可取属性说明：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/172209512095155.jpg" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;当需要为gravity设多个值时，可用|分隔开</p>

<p>&#160; &#160; &#160; &#160;布局XML:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;LinearLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'><span class="na">android:orientation=</span><span class="s">&quot;horizontal&quot;</span>
</span><span class='line'><span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'><span class="na">android:layout_height=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'><span class="na">android:id=</span><span class="s">&quot;@+id/lla&quot;</span>
</span><span class='line'><span class="na">android:gravity=</span><span class="s">&quot;right&quot;</span>
</span><span class='line'><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;Button</span>
</span><span class='line'><span class="na">android:text=</span><span class="s">&quot;添加&quot;</span>
</span><span class='line'><span class="na">android:id=</span><span class="s">&quot;@+id/Button01&quot;</span>
</span><span class='line'><span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'><span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/Button&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/LinearLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>JAVA代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 计数器，记录按钮个数</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 重写 onCreate 方法</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">horizontal_layout</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// 获取屏幕中的按钮控件对象</span>
</span><span class='line'>        <span class="n">Button</span> <span class="n">button</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">Button01</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 为按钮添加 OnClickListener 接口实现</span>
</span><span class='line'>        <span class="n">button</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// 获取线性布局对象</span>
</span><span class='line'>                <span class="n">LinearLayout</span> <span class="n">ll</span> <span class="o">=</span> <span class="o">(</span><span class="n">LinearLayout</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">lla</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">String</span> <span class="n">msg</span> <span class="o">=</span> <span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">.</span><span class="na">getResources</span><span class="o">().</span><span class="na">getString</span><span class="o">(</span>
</span><span class='line'>                        <span class="n">R</span><span class="o">.</span><span class="na">string</span><span class="o">.</span><span class="na">button</span><span class="o">);</span>
</span><span class='line'>                <span class="c1">// 创建一个 Button 对象</span>
</span><span class='line'>                <span class="n">Button</span> <span class="n">tempbutton</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Button</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>                <span class="n">tempbutton</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">msg</span> <span class="o">+</span> <span class="o">(++</span><span class="n">count</span><span class="o">));</span> <span class="c1">// 设置 Button 控件显示的内容</span>
</span><span class='line'>                <span class="c1">// 设置 Button 的宽度</span>
</span><span class='line'>                <span class="n">tempbutton</span><span class="o">.</span><span class="na">setWidth</span><span class="o">(</span><span class="mi">80</span><span class="o">);</span>
</span><span class='line'>                <span class="c1">// 向线性布局中添加 View</span>
</span><span class='line'>                <span class="n">ll</span><span class="o">.</span><span class="na">addView</span><span class="o">(</span><span class="n">tempbutton</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;运行效果：每点击添加按钮一次会在下方垂直生成一个按钮</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/022150299382543.jpg" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;将布局文件中</p>

<p>android:orientation=&ldquo;vertical&rdquo;</p>

<p>vertical改为horizontal</p>

<p>&#160; &#160; &#160; &#160;每点击一次会在右方水平方向生成一个按钮</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/022152106602619.jpg" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;当水平方向该行容不下一个宽度为80的按钮时，按钮就会被压缩，如下图</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/022153319459350.jpg" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;此时再点击添加按钮时，画面没有任何变化，不会另起一行添加按钮，超出屏幕的将不会被显示。</p>

<h4>3、表格布局</h4>

<p>&#160; &#160; &#160; &#160;TableLayout 类似HTML里的Table分为行和列来管理。
每一行为一个TableRow，也可以为View对象。当为View对象时就跨越该行所有列
TableRow中可以添加子控件，每个子控件为一列。并不会为每个单元格绘制边框
每个单元格为一个View，可以有空的单元格，也可以跨越多列
一个列的宽度由该列最宽的单元格决定的</p>

<p>TableLayout 可以设置三种属性</p>

<ul>
<li>Shrinkable ：它可以被压缩以适应其父容器的大小</li>
<li>Stretchable ：它可以被拉伸以填满空闲区域</li>
<li>Collapsed ：该列被隐藏</li>
</ul>


<p><img src="http://images.cnitblog.com/i/602984/201403/032017117258508.png" alt="image" /></p>

<p>&#160; &#160; &#160; &#160;如果要对多列进行设置，用逗号隔开</p>

<p>&#160; &#160; &#160; &#160;这三个属性在JAVA代码也有对应的方法，值得一提的是它是继承Linearlayout的</p>

<p>布局XML:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;LinearLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">android:id=</span><span class="s">&quot;@+id/LinearLayout01&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>    <span class="na">android:background=</span><span class="s">&quot;@drawable/water&quot;</span>
</span><span class='line'>    <span class="na">android:gravity=</span><span class="s">&quot;bottom&quot;</span>
</span><span class='line'>    <span class="na">android:orientation=</span><span class="s">&quot;vertical&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TableLayout</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/TableLayout01&quot;</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;TextView</span>
</span><span class='line'>            <span class="na">android:id=</span><span class="s">&quot;@+id/TextView01&quot;</span>
</span><span class='line'>            <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:layout_centerInParent=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>            <span class="na">android:layout_margin=</span><span class="s">&quot;4px&quot;</span>
</span><span class='line'>            <span class="na">android:background=</span><span class="s">&quot;@drawable/darkgray&quot;</span>
</span><span class='line'>            <span class="na">android:text=</span><span class="s">&quot;@string/tv1&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/TextView&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/TableLayout&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TableLayout</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/TableLayout02&quot;</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:stretchColumns=</span><span class="s">&quot;0&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;TableRow</span>
</span><span class='line'>            <span class="na">android:id=</span><span class="s">&quot;@+id/TableRow01&quot;</span>
</span><span class='line'>            <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nt">&lt;TextView</span>
</span><span class='line'>                <span class="na">android:id=</span><span class="s">&quot;@+id/TextView02&quot;</span>
</span><span class='line'>                <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                <span class="na">android:layout_centerInParent=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>                <span class="na">android:layout_margin=</span><span class="s">&quot;4px&quot;</span>
</span><span class='line'>                <span class="na">android:background=</span><span class="s">&quot;@drawable/blue&quot;</span>
</span><span class='line'>                <span class="na">android:text=</span><span class="s">&quot;@string/tvStrech&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/TextView&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nt">&lt;TextView</span>
</span><span class='line'>                <span class="na">android:id=</span><span class="s">&quot;@+id/TextView03&quot;</span>
</span><span class='line'>                <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                <span class="na">android:layout_centerInParent=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>                <span class="na">android:layout_margin=</span><span class="s">&quot;4px&quot;</span>
</span><span class='line'>                <span class="na">android:text=</span><span class="s">&quot;@string/tvShort&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/TextView&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/TableRow&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/TableLayout&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TableLayout</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/TableLayout03&quot;</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:collapseColumns=</span><span class="s">&quot;1&quot;</span>
</span><span class='line'>        <span class="na">android:shrinkColumns=</span><span class="s">&quot;0&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;TableRow</span>
</span><span class='line'>            <span class="na">android:id=</span><span class="s">&quot;@+id/TableRow02&quot;</span>
</span><span class='line'>            <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>            <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nt">&lt;TextView</span>
</span><span class='line'>                <span class="na">android:id=</span><span class="s">&quot;@+id/TextView04&quot;</span>
</span><span class='line'>                <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                <span class="na">android:layout_centerInParent=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>                <span class="na">android:layout_margin=</span><span class="s">&quot;4px&quot;</span>
</span><span class='line'>                <span class="na">android:background=</span><span class="s">&quot;@drawable/darkgray&quot;</span>
</span><span class='line'>                <span class="na">android:text=</span><span class="s">&quot;@string/tvShrink&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/TextView&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nt">&lt;TextView</span>
</span><span class='line'>                <span class="na">android:id=</span><span class="s">&quot;@+id/TextView05&quot;</span>
</span><span class='line'>                <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                <span class="na">android:layout_centerInParent=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>                <span class="na">android:layout_margin=</span><span class="s">&quot;4px&quot;</span>
</span><span class='line'>                <span class="na">android:background=</span><span class="s">&quot;@drawable/lightred&quot;</span>
</span><span class='line'>                <span class="na">android:text=</span><span class="s">&quot;@string/tvShort&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/TextView&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nt">&lt;TextView</span>
</span><span class='line'>                <span class="na">android:id=</span><span class="s">&quot;@+id/TextView06&quot;</span>
</span><span class='line'>                <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                <span class="na">android:layout_centerInParent=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>                <span class="na">android:layout_margin=</span><span class="s">&quot;4px&quot;</span>
</span><span class='line'>                <span class="na">android:background=</span><span class="s">&quot;@drawable/blue&quot;</span>
</span><span class='line'>                <span class="na">android:text=</span><span class="s">&quot;@string/tvLong&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/TextView&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/TableRow&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/TableLayout&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/LinearLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行效果：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/032020546195104.png" alt="image" /></p>

<h4>4、相对布局</h4>

<p>&#160; &#160; &#160; &#160;RelativeLayout子控件 的位置由兄弟控件或父容器来决定的
如果A控件由B控件来决定位置，则布局文件B控件要在A控件声明之前</p>

<p>常用属性</p>

<ul>
<li><p>第一类:属性值为true或false</p>

<ul>
<li>android:layout_centerHrizontal 水平居中</li>
<li>android:layout_centerVertical 垂直居中</li>
<li>android:layout_centerInparent 相对于父元素完全居中</li>
<li>android:layout_alignParentBottom 贴紧父元素的下边缘</li>
<li>android:layout_alignParentLeft 贴紧父元素的左边缘</li>
<li>android:layout_alignParentRight 贴紧父元素的右边缘</li>
<li>android:layout_alignParentTop 贴紧父元素的上边缘</li>
<li>android:layout_alignWithParentIfMissing 如果对应的兄弟元素找不到的话就以父元素做参照物</li>
</ul>
</li>
<li><p>第二类：属性值必须为id的引用名“@id/id-name”</p>

<ul>
<li>android:layout_below 在某元素的下方</li>
<li>android:layout_above 在某元素的的上方</li>
<li>android:layout_toLeftOf 在某元素的左边</li>
<li>android:layout_toRightOf 在某元素的右边</li>
<li>android:layout_alignTop 本元素的上边缘和某元素的的上边缘对齐</li>
<li>android:layout_alignLeft 本元素的左边缘和某元素的的左边缘对齐</li>
<li>android:layout_alignBottom 本元素的下边缘和某元素的的下边缘对齐</li>
<li>android:layout_alignRight 本元素的右边缘和某元素的的右边缘对齐</li>
</ul>
</li>
<li><p>第三类：属性值为具体的像素值，如30dip，40px</p>

<ul>
<li>android:layout_marginBottom 离某元素底边缘的距离</li>
<li>android:layout_marginLeft 离某元素左边缘的距离</li>
<li>android:layout_marginRight 离某元素右边缘的距离</li>
<li>android:layout_marginTop 离某元素上边缘的距离</li>
</ul>
</li>
</ul>


<p>布局XML:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;RelativeLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:paddingBottom=</span><span class="s">&quot;@dimen/activity_vertical_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingLeft=</span><span class="s">&quot;@dimen/activity_horizontal_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingRight=</span><span class="s">&quot;@dimen/activity_horizontal_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingTop=</span><span class="s">&quot;@dimen/activity_vertical_margin&quot;</span>
</span><span class='line'>    <span class="na">tools:context=</span><span class="s">&quot;.MainActivity&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TextView</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;@string/hello_world&quot;</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/tv1&quot;</span>
</span><span class='line'>        <span class="na">android:layout_centerInParent=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>        <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TextView</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;big&quot;</span>
</span><span class='line'>        <span class="na">android:textSize=</span><span class="s">&quot;30sp&quot;</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/tv2&quot;</span>
</span><span class='line'>        <span class="na">android:layout_toRightOf=</span><span class="s">&quot;@id/tv1&quot;</span>
</span><span class='line'>        <span class="na">android:layout_alignBottom=</span><span class="s">&quot;@id/tv1&quot;</span>
</span><span class='line'>        <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TextView</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;middle&quot;</span>
</span><span class='line'>        <span class="na">android:textSize=</span><span class="s">&quot;20sp&quot;</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/tv3&quot;</span>
</span><span class='line'>        <span class="na">android:layout_above=</span><span class="s">&quot;@id/tv1&quot;</span>
</span><span class='line'>        <span class="na">android:layout_alignLeft=</span><span class="s">&quot;@id/tv1&quot;</span>
</span><span class='line'>        <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/RelativeLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行效果：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/032022358875807.png" alt="image" /></p>

<h4>5、帧布局</h4>

<p>&#160; &#160; &#160; &#160;FrameLayout在屏幕上开辟一块区域，在这块区域可以添加多个控件
但都会被对其到屏幕左上角，并且大小取决于最大的控件，如果控件一样大，只能看到最上面的控件</p>

<p>布局XML:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;FrameLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>    <span class="na">android:orientation=</span><span class="s">&quot;vertical&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TextView</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;fill_parent&quot;</span>
</span><span class='line'>        <span class="na">android:background=</span><span class="s">&quot;@drawable/lightgray&quot;</span>
</span><span class='line'>        <span class="na">android:gravity=</span><span class="s">&quot;center&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;big&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TextView</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;150dp&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;150dp&quot;</span>
</span><span class='line'>        <span class="na">android:background=</span><span class="s">&quot;@drawable/darkgray&quot;</span>
</span><span class='line'>        <span class="na">android:gravity=</span><span class="s">&quot;center&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;middle&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TextView</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;50dp&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;50dp&quot;</span>
</span><span class='line'>        <span class="na">android:background=</span><span class="s">&quot;@drawable/blue&quot;</span>
</span><span class='line'>        <span class="na">android:gravity=</span><span class="s">&quot;center&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;small&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/FrameLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行效果：</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/032024006754913.png" alt="image" /></p>

<h4>6、绝对布局</h4>

<p>&#160; &#160; &#160; &#160;AbsoluteLayout是绝对位置布局。在此布局中的子元素的android:layout_x和android:layout_y属性将生效，用于描述该子元素的坐标位置。屏幕左上角为坐标原点（0,0），第一个0代表横坐标，向右移动此值增大，第二个0代表纵坐标，向下移动，此值增大。在此布局中的子元素可以相互重叠。在实际开发中，通常不采用此布局格式，因为它的界面代码过于刚性，以至于有可能不能很好的适配各种终端。由于不采用，在此就不演示代码了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习日记11--音频播放类]]></title>
    <link href="http://chendd.github.io/blog/2013/03/02/android_study_11/"/>
    <updated>2013-03-02T19:32:12+08:00</updated>
    <id>http://chendd.github.io/blog/2013/03/02/android_study_11</id>
    <content type="html"><![CDATA[<h2>一、android 音频播放类</h2>

<p>&#160; &#160; &#160; &#160;MediaPlayer和SoundPool都可以用来播放音频。
区别是MediaPlayer占用资源高，延迟时间高，播放长音乐的，并且不能同时播放多个音乐，
而SoundPool占用资源较少，没什么延迟，但要提前加载，只能播放1M以下的音频文件，能同时播放多个音乐
因此MediaPlayer一般用来播放背景音乐，而SoundPool主要用来播放游戏音效。</p>

<!--more-->


<h4>1、MediaPlayer</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//获取实例：</span>
</span><span class='line'><span class="n">MediaPlayer</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span><span class="kt">int</span> <span class="n">resId</span><span class="o">);</span>  <span class="c1">//参数一：上下文对象，参数二：音乐资源ID，一般放在raw文件夹下。如果没有raw就自己创建一个  </span>
</span><span class='line'>
</span><span class='line'><span class="c1">//常用方法：</span>
</span><span class='line'><span class="n">prepare</span><span class="o">();</span><span class="c1">//为播放音乐文件做准备工作    </span>
</span><span class='line'><span class="n">start</span><span class="o">();</span><span class="c1">//播放音乐   </span>
</span><span class='line'><span class="n">pause</span><span class="o">();</span><span class="c1">//暂停音乐播放   </span>
</span><span class='line'><span class="n">stop</span><span class="o">();</span><span class="c1">//停止音乐播放 </span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//MediaPlayer其它常用函数</span>
</span><span class='line'><span class="n">setLooping</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">looping</span><span class="o">);</span><span class="c1">//设置音乐是否循环播放，true为循环播放  </span>
</span><span class='line'><span class="n">seekTo</span><span class="o">(</span><span class="kt">int</span> <span class="n">msec</span><span class="o">);</span><span class="c1">//将音乐播放跳转到某一时间点,以毫秒为单位    </span>
</span><span class='line'><span class="n">getDuration</span><span class="o">();</span><span class="c1">//获取播放的音乐文件总时间长度   </span>
</span><span class='line'><span class="n">getCurrentPosition</span><span class="o">();</span><span class="c1">//获取当前播放音乐时间点</span>
</span></code></pre></td></tr></table></div></figure>


<p>注：pause()和stop(),主要的区别在于：暂停播放后可以调用start()继续播放，停止音乐播放后，需要调用prepare()再调用start()进行播放音乐。</p>

<p>当然不得不提AudioManager（音乐管理类，可以获取当前音乐大小以及最大音量）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 获取实例</span>
</span><span class='line'><span class="n">AudioManager</span> <span class="n">am</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">AudioManager</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//常用方法：</span>
</span><span class='line'><span class="n">setStreamVolume</span><span class="o">(</span><span class="n">imt</span> <span class="n">streamType</span><span class="o">,</span><span class="kt">int</span> <span class="n">index</span><span class="o">,</span><span class="kt">int</span> <span class="n">flags</span><span class="o">)</span> <span class="o">;</span><span class="c1">//设置音量大小，参数一：音乐类型（AudioManager.STREAM_MUSIC）,参数二：音量大小，参数三：设置一个或者多个标志  </span>
</span><span class='line'><span class="n">getStreamVolume</span><span class="o">(</span><span class="kt">int</span> <span class="n">streamType</span><span class="o">);</span><span class="c1">//获取当前音量大小，参数 获取音量大小类型    </span>
</span><span class='line'><span class="n">getStreamMaxVolume</span><span class="o">(</span><span class="kt">int</span> <span class="n">streamType</span><span class="o">);</span><span class="c1">// 获取当前音量最大值，参数获取音量大小的类型</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2、SoundPool</h4>

<p>获取实例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//参数一：允许同时播放的声音最大值，参数二：声音类型，参数三：声音品质</span>
</span><span class='line'><span class="mi">2</span> <span class="k">new</span>  <span class="nf">SoundPool</span><span class="o">(</span><span class="kt">int</span> <span class="n">maxStreams</span><span class="o">,</span><span class="kt">int</span> <span class="n">streamType</span><span class="o">,</span><span class="kt">int</span> <span class="n">srcQuality</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>常用方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//加载音乐文件，返回音乐ID（音乐流文件数据） 参数一：Context实例，参数二：音乐文件ID,</span>
</span><span class='line'><span class="c1">//参数三：标志优先考虑的声音。目前使用没有任何效果，只是具备兼容性价值。一般写个1就可以。   </span>
</span><span class='line'><span class="kt">int</span> <span class="n">load</span><span class="err">（</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span><span class="kt">int</span> <span class="n">resId</span><span class="o">,</span><span class="kt">int</span> <span class="n">priority</span><span class="err">）</span><span class="o">;</span>
</span><span class='line'><span class="c1">//音乐播放，播放失败返回0，正常则返回非0值，参数一：加载后得到的音乐文件，参数二：音量的左声道 范围0.0~1.0  参数三：音量的右声道，范围 0.0~1.0  </span>
</span><span class='line'><span class="c1">//参数四：音乐流的优先级，0为最低优先级，参数五：音乐播放次数，-1表示无限循环，0表示正常一次，大于0则表示循环次数，</span>
</span><span class='line'><span class="c1">//参数六：播放速率，取值范围：0.5~2.0，1.0表示正常播放。    </span>
</span><span class='line'><span class="kt">int</span> <span class="nf">play</span><span class="o">(</span><span class="kt">int</span> <span class="n">soundId</span><span class="o">,</span><span class="kt">float</span> <span class="n">leftVolume</span><span class="o">,</span><span class="kt">float</span> <span class="n">rightVolume</span><span class="o">,</span><span class="kt">int</span> <span class="n">proority</span><span class="o">,</span><span class="kt">int</span> <span class="n">loop</span><span class="o">,</span><span class="kt">float</span> <span class="n">rate</span><span class="o">);</span>
</span><span class='line'><span class="n">pause</span><span class="o">(</span><span class="kt">int</span> <span class="n">streamID</span><span class="o">);</span>  <span class="c1">//暂停音乐播放  ，参数：音乐文件加载后的流ID    </span>
</span><span class='line'><span class="n">stop</span><span class="o">(</span><span class="kt">int</span> <span class="n">streamID</span><span class="o">)</span> <span class="o">;</span> <span class="c1">//结束音乐播放 参数：音乐文件加载后的流ID    </span>
</span><span class='line'><span class="n">release</span><span class="o">();</span>  <span class="c1">//释放SoundPool的资源   </span>
</span><span class='line'><span class="n">setLoop</span><span class="o">(</span><span class="kt">int</span> <span class="n">streamID</span><span class="o">,</span><span class="kt">int</span> <span class="n">loop</span><span class="o">);</span>  <span class="c1">//设置循环次数 参数一：音乐文件加载后的流ID，参数二：循环次数    </span>
</span><span class='line'><span class="n">setReat</span><span class="o">(</span><span class="kt">int</span> <span class="n">streamID</span><span class="o">);</span>  <span class="c1">//设置播放速率    </span>
</span><span class='line'><span class="n">setVolume</span><span class="o">(</span><span class="kt">int</span> <span class="n">streamID</span><span class="o">,</span><span class="kt">float</span> <span class="n">leftVolume</span><span class="o">,</span><span class="kt">float</span> <span class="n">rightVolume</span><span class="o">);</span>   <span class="c1">//设置音量大小，参数二：左声道音量，参数三：右声道音量    </span>
</span><span class='line'><span class="n">setPriority</span><span class="o">(</span><span class="kt">int</span> <span class="n">streamID</span><span class="o">,</span><span class="kt">int</span> <span class="n">priority</span><span class="o">);</span>   <span class="c1">//设置流的优先级，参数二：优先级值。</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3、基于MediaPlayer的简单播放器</h4>

<p>&#160; &#160; &#160; &#160;导入drawable-mdpi(我一般是传入这个drawable文件夹的) 三张播放、暂停、停止的图片，res下新建raw文件夹并导入ten_year.mp3文件，注意Android的资源文件都不能中文和大写字母命名。</p>

<p>Activity主要代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">ImageButton</span> <span class="n">btn_start</span><span class="o">,</span> <span class="n">btn_stop</span><span class="o">,</span> <span class="n">btn_pause</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tv</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">MediaPlayer</span> <span class="n">mp</span><span class="o">;</span>
</span><span class='line'>    <span class="c1">// 声明一个变量判断是否为暂停,默认为false</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">isPaused</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 通过findViewById找到资源</span>
</span><span class='line'>        <span class="n">btn_start</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageButton</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn_start</span><span class="o">);</span>
</span><span class='line'>        <span class="n">btn_stop</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageButton</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn_stop</span><span class="o">);</span>
</span><span class='line'>        <span class="n">btn_pause</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageButton</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn_pause</span><span class="o">);</span>
</span><span class='line'>        <span class="n">tv</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">myTextView1</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 创建MediaPlayer对象,将raw文件夹下的ten_year.mp3</span>
</span><span class='line'>        <span class="n">mp</span> <span class="o">=</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">raw</span><span class="o">.</span><span class="na">ten_year</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// 增加播放音乐按钮的事件</span>
</span><span class='line'>        <span class="n">btn_start</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageButton</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                    <span class="k">if</span> <span class="o">(</span><span class="n">mp</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">mp</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="n">mp</span><span class="o">.</span><span class="na">prepare</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">mp</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;音乐播放中...&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;播放发生异常...&quot;</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">btn_stop</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageButton</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                    <span class="k">if</span> <span class="o">(</span><span class="n">mp</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">mp</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>                        <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;音乐停止播放...&quot;</span><span class="o">);</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;音乐停止发生异常...&quot;</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">btn_pause</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageButton</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                    <span class="k">if</span> <span class="o">(</span><span class="n">mp</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="o">(</span><span class="n">isPaused</span> <span class="o">==</span> <span class="kc">false</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">mp</span><span class="o">.</span><span class="na">pause</span><span class="o">();</span>
</span><span class='line'>                            <span class="n">isPaused</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>                            <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;暂停播放!&quot;</span><span class="o">);</span>
</span><span class='line'>                        <span class="o">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">isPaused</span> <span class="o">==</span> <span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">mp</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>                            <span class="n">isPaused</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>                            <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;继续播放!&quot;</span><span class="o">);</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;发生异常...&quot;</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/* 当MediaPlayer.OnCompletionLister会运行的Listener */</span>
</span><span class='line'>        <span class="n">mp</span><span class="o">.</span><span class="na">setOnCompletionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">OnCompletionListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// @Override</span>
</span><span class='line'>            <span class="cm">/* 覆盖文件播出完毕事件 */</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCompletion</span><span class="o">(</span><span class="n">MediaPlayer</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                    <span class="cm">/*</span>
</span><span class='line'><span class="cm">                     * 解除资源与MediaPlayer的赋值关系 让资源可以为其它程序利用</span>
</span><span class='line'><span class="cm">                     */</span>
</span><span class='line'>                    <span class="n">mp</span><span class="o">.</span><span class="na">release</span><span class="o">();</span>
</span><span class='line'>                    <span class="cm">/* 改变TextView为播放结束 */</span>
</span><span class='line'>                    <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;音乐播发结束!&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/* 当MediaPlayer.OnErrorListener会运行的Listener */</span>
</span><span class='line'>        <span class="n">mp</span><span class="o">.</span><span class="na">setOnErrorListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">OnErrorListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="cm">/* 覆盖错误处理事件 */</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onError</span><span class="o">(</span><span class="n">MediaPlayer</span> <span class="n">arg0</span><span class="o">,</span> <span class="kt">int</span> <span class="n">arg1</span><span class="o">,</span> <span class="kt">int</span> <span class="n">arg2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>                <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                    <span class="cm">/* 发生错误时也解除资源与MediaPlayer的赋值 */</span>
</span><span class='line'>                    <span class="n">mp</span><span class="o">.</span><span class="na">release</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;播放发生异常!&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行项目，聆听音乐！</p>

<p><img src="http://images.cnitblog.com/i/602984/201403/152336191213395.png" alt="image" /></p>

<h4>4、GameSoundPool音效播放的工具类</h4>

<p>&#160; &#160; &#160; &#160;由于音效的音频文件太多了，建个map来管理，当要播放那个音效时，传入相应的id即可。</p>

<p> 主要代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">GameSoundPool</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">MainActivity</span> <span class="n">mainActivity</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">SoundPool</span> <span class="n">soundPool</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">map</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">GameSoundPool</span><span class="o">(</span><span class="n">MainActivity</span> <span class="n">mainActivity</span><span class="o">){</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">mainActivity</span> <span class="o">=</span> <span class="n">mainActivity</span><span class="o">;</span>
</span><span class='line'>        <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span><span class="n">Integer</span><span class="o">&gt;();</span>
</span><span class='line'>        <span class="n">soundPool</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">SoundPool</span><span class="o">(</span><span class="mi">8</span><span class="o">,</span><span class="n">AudioManager</span><span class="o">.</span><span class="na">STREAM_MUSIC</span><span class="o">,</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">initGameSound</span><span class="o">(){</span>
</span><span class='line'>        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">soundPool</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">mainActivity</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">raw</span><span class="o">.</span><span class="na">shoot</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
</span><span class='line'>        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">soundPool</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">mainActivity</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">raw</span><span class="o">.</span><span class="na">explosion</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
</span><span class='line'>        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">soundPool</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">mainActivity</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">raw</span><span class="o">.</span><span class="na">explosion2</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
</span><span class='line'>        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="n">soundPool</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">mainActivity</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">raw</span><span class="o">.</span><span class="na">explosion3</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
</span><span class='line'>        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="n">soundPool</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">mainActivity</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">raw</span><span class="o">.</span><span class="na">bigexplosion</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
</span><span class='line'>        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">6</span><span class="o">,</span> <span class="n">soundPool</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">mainActivity</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">raw</span><span class="o">.</span><span class="na">get_goods</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
</span><span class='line'>        <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">7</span><span class="o">,</span> <span class="n">soundPool</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">mainActivity</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">raw</span><span class="o">.</span><span class="na">button</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="c1">//播放音效</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">playSound</span><span class="o">(</span><span class="kt">int</span> <span class="n">sound</span><span class="o">,</span><span class="kt">int</span> <span class="n">loop</span><span class="o">,</span><span class="kt">boolean</span> <span class="n">flag</span><span class="o">){</span>
</span><span class='line'>        <span class="n">AudioManager</span> <span class="n">am</span> <span class="o">=</span> <span class="o">(</span><span class="n">AudioManager</span><span class="o">)</span><span class="n">mainActivity</span><span class="o">.</span><span class="na">getSystemService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">AUDIO_SERVICE</span><span class="o">);</span>
</span><span class='line'>        <span class="kt">float</span> <span class="n">stramVolumeCurrent</span> <span class="o">=</span> <span class="n">am</span><span class="o">.</span><span class="na">getStreamVolume</span><span class="o">(</span><span class="n">AudioManager</span><span class="o">.</span><span class="na">STREAM_MUSIC</span><span class="o">);</span>
</span><span class='line'>        <span class="kt">float</span> <span class="n">stramMaxVolumeCurrent</span> <span class="o">=</span> <span class="n">am</span><span class="o">.</span><span class="na">getStreamVolume</span><span class="o">(</span><span class="n">AudioManager</span><span class="o">.</span><span class="na">STREAM_MUSIC</span><span class="o">);</span>
</span><span class='line'>        <span class="kt">float</span> <span class="n">volume</span> <span class="o">=</span> <span class="n">stramVolumeCurrent</span><span class="o">/</span><span class="n">stramMaxVolumeCurrent</span><span class="o">;</span>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="n">flag</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">soundPool</span><span class="o">.</span><span class="na">play</span><span class="o">(</span><span class="n">map</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">sound</span><span class="o">),</span> <span class="n">volume</span><span class="o">,</span> <span class="n">volume</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="n">loop</span><span class="o">,</span> <span class="mf">1.0f</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#160; &#160; &#160; &#160;由于游戏画面经常会有按钮点击关闭音效，这里的flag 参数主要用于控制是否播放。播放时调用</p>

<p>GameSoundPool.playSound(key, 0,soundFlag); 即可，key是定义具体的音效id，当然我们也可以为了代码可读行写成静态全局变量传进来。</p>
]]></content>
  </entry>
  
</feed>
